{"version":3,"sources":["webpack:///./node_modules/echarts/lib/chart/parallel/ParallelSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseView.js","webpack:///./node_modules/echarts/lib/component/tooltip.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelSeries.js","webpack:///./node_modules/echarts/lib/coord/geo/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/geo/Geo.js","webpack:///./node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js","webpack:///./node_modules/echarts/lib/component/gridSimple.js","webpack:///./node_modules/echarts/lib/component/helper/roamHelper.js","webpack:///./node_modules/echarts/lib/component/dataset.js","webpack:///./node_modules/echarts/lib/data/Tree.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseModel.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./node_modules/echarts/lib/chart/gauge.js","webpack:///./node_modules/echarts/lib/chart/parallel.js","webpack:///./node_modules/echarts/lib/chart/candlestick.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineAxis.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickLayout.js","webpack:///./node_modules/echarts/lib/component/dataZoom.js","webpack:///./node_modules/echarts/lib/component/legendScroll.js","webpack:///./node_modules/echarts/lib/component/helper/MapDraw.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyVisual.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendView.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelAxis.js","webpack:///./node_modules/echarts/lib/data/helper/sourceHelper.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectLine.js","webpack:///./node_modules/echarts/lib/component/brush/visualEncoding.js","webpack:///./node_modules/echarts/lib/chart/effectScatter.js","webpack:///./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./node_modules/echarts/lib/chart/helper/Symbol.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarView.js","webpack:///./node_modules/echarts/lib/component/axis/RadiusAxisView.js","webpack:///./node_modules/echarts/lib/helper.js","webpack:///./node_modules/echarts/lib/chart/scatter.js","webpack:///./node_modules/echarts/lib/coord/radar/RadarModel.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/textCoord.js","webpack:///./node_modules/echarts/lib/chart/bar/BarSeries.js","webpack:///./node_modules/echarts/lib/component/axisPointer/globalListener.js","webpack:///./node_modules/echarts/lib/scale/Ordinal.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineModel.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickView.js","webpack:///./node_modules/echarts/lib/chart/pie/PieView.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js","webpack:///./node_modules/echarts/lib/coord/polar/polarCreator.js","webpack:///./node_modules/echarts/lib/layout/barPolar.js","webpack:///./node_modules/echarts/lib/chart/gauge/PointerPath.js","webpack:///./node_modules/echarts/lib/coord/geo/GeoModel.js","webpack:///./node_modules/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./node_modules/echarts/lib/CoordinateSystem.js","webpack:///./node_modules/echarts/lib/component/toolbox/featureManager.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeSeries.js","webpack:///./node_modules/echarts/lib/scale/Time.js","webpack:///./node_modules/echarts/lib/chart/line/LineSeries.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelModel.js","webpack:///./node_modules/echarts/lib/chart/tree/layoutHelper.js","webpack:///./node_modules/echarts/lib/util/graphic.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomView.js","webpack:///./node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js","webpack:///./node_modules/echarts/lib/coord/radar/Radar.js","webpack:///./node_modules/echarts/lib/chart/graph.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerModel.js","webpack:///./node_modules/echarts/lib/chart/funnel/funnelLayout.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js","webpack:///./node_modules/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./node_modules/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./node_modules/echarts/lib/chart/pie/pieLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryVisual.js","webpack:///./node_modules/echarts/lib/lang.js","webpack:///./node_modules/echarts/lib/component/visualMapPiecewise.js","webpack:///./node_modules/echarts/lib/data/helper/dataProvider.js","webpack:///./node_modules/echarts/lib/visual/visualSolution.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","webpack:///./node_modules/echarts/lib/component/singleAxis.js","webpack:///./node_modules/echarts/lib/component/brush.js","webpack:///./node_modules/echarts/lib/data/helper/dimensionHelper.js","webpack:///./node_modules/echarts/lib/component/polar.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotVisual.js","webpack:///./node_modules/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousModel.js","webpack:///./node_modules/echarts/lib/coord/single/prepareCustom.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineView.js","webpack:///./node_modules/echarts/lib/chart/sankey.js","webpack:///./node_modules/echarts/index.js","webpack:///./node_modules/echarts/lib/data/helper/linkList.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/nanhai.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomView.js","webpack:///./node_modules/echarts/lib/chart/helper/createListFromArray.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarView.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstView.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js","webpack:///./node_modules/echarts/lib/util/number.js","webpack:///./node_modules/echarts/lib/model/mixin/dataFormat.js","webpack:///./node_modules/echarts/lib/model/mixin/lineStyle.js","webpack:///./node_modules/echarts/lib/component/timeline/timelineAction.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapSeries.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousView.js","webpack:///./node_modules/echarts/lib/echarts.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipView.js","webpack:///./node_modules/echarts/lib/model/Model.js","webpack:///./node_modules/echarts/lib/coord/single/singleCreator.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaModel.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapAction.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstAction.js","webpack:///./node_modules/echarts/lib/chart/helper/Polyline.js","webpack:///./node_modules/echarts/lib/component/legend/legendAction.js","webpack:///./node_modules/echarts/lib/coord/calendar/prepareCustom.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapView.js","webpack:///./node_modules/echarts/lib/chart/graph/adjustEdge.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./node_modules/echarts/lib/action/geoRoam.js","webpack:///./node_modules/echarts/lib/component/helper/RoamController.js","webpack:///./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","webpack:///./node_modules/echarts/lib/coord/single/Single.js","webpack:///./node_modules/echarts/lib/coord/geo/geoJSONLoader.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickVisual.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelView.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeSeries.js","webpack:///./node_modules/echarts/lib/config.js","webpack:///./node_modules/echarts/lib/chart/map/MapSeries.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstPiece.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","webpack:///./node_modules/echarts/lib/model/Series.js","webpack:///./node_modules/echarts/lib/component/dataZoom/helper.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverLayout.js","webpack:///./node_modules/echarts/lib/component/visualMap.js","webpack:///./node_modules/echarts/lib/chart/map/mapVisual.js","webpack:///./node_modules/echarts/lib/model/mixin/itemStyle.js","webpack:///./node_modules/echarts/lib/component/radar.js","webpack:///./node_modules/echarts/lib/component/dataZoom/roams.js","webpack:///./node_modules/echarts/lib/chart/helper/treeHelper.js","webpack:///./node_modules/echarts/lib/chart/graph/forceLayout.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Grid.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeyView.js","webpack:///./node_modules/echarts/lib/coord/geo/geoSourceManager.js","webpack:///./node_modules/echarts/lib/chart/heatmap.js","webpack:///./node_modules/echarts/lib/component/legend/LegendView.js","webpack:///./node_modules/echarts/lib/visual/VisualMapping.js","webpack:///./node_modules/echarts/lib/chart/parallel/ParallelView.js","webpack:///./node_modules/echarts/lib/visual/visualDefault.js","webpack:///./node_modules/echarts/lib/data/List.js","webpack:///./node_modules/echarts/lib/util/clazz.js","webpack:///./node_modules/echarts/lib/component/title.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js","webpack:///./node_modules/echarts/lib/chart/lines/linesLayout.js","webpack:///./node_modules/echarts/lib/component/axis/AxisView.js","webpack:///./node_modules/echarts/lib/component/timeline/preprocessor.js","webpack:///./node_modules/echarts/lib/coord/single/SingleAxis.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryFilter.js","webpack:///./node_modules/echarts/lib/chart/map.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/bar/BarView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","webpack:///./node_modules/echarts/lib/coord/axisHelper.js","webpack:///./node_modules/echarts/lib/stream/Scheduler.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectPolyline.js","webpack:///./node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/geoCoord.js","webpack:///./node_modules/echarts/lib/component/radar/RadarView.js","webpack:///./node_modules/echarts/lib/chart/themeRiver.js","webpack:///./node_modules/echarts/lib/model/Component.js","webpack:///./node_modules/echarts/lib/coord/View.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeView.js","webpack:///./node_modules/echarts/lib/chart/tree/traversalHelper.js","webpack:///./node_modules/echarts/lib/component/dataZoom/history.js","webpack:///./node_modules/echarts/lib/component/helper/selectableMixin.js","webpack:///./node_modules/echarts/lib/coord/axisDefault.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverVisual.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapView.js","webpack:///./node_modules/echarts/lib/data/Graph.js","webpack:///./node_modules/echarts/lib/chart/helper/LineDraw.js","webpack:///./node_modules/echarts/lib/component/visualMapContinuous.js","webpack:///./node_modules/echarts/lib/component/geo/GeoView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataView.js","webpack:///./node_modules/echarts/lib/action/createDataSelectAction.js","webpack:///./node_modules/echarts/lib/coord/radar/IndicatorAxis.js","webpack:///./node_modules/echarts/lib/chart/radar/backwardCompat.js","webpack:///./node_modules/echarts/lib/coord/polar/PolarModel.js","webpack:///./node_modules/echarts/lib/component/helper/listComponent.js","webpack:///./node_modules/echarts/lib/component/radiusAxis.js","webpack:///./node_modules/echarts/lib/chart/graph/createView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomView.js","webpack:///./node_modules/echarts/lib/component/markArea.js","webpack:///./node_modules/echarts/lib/chart/helper/Line.js","webpack:///./node_modules/echarts/lib/model/Global.js","webpack:///./node_modules/echarts/lib/component/graphic.js","webpack:///./node_modules/echarts/lib/chart/helper/LinePath.js","webpack:///./node_modules/echarts/lib/visual/symbol.js","webpack:///./node_modules/echarts/lib/data/DataDiffer.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyLayout.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipRichContent.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointView.js","webpack:///./node_modules/echarts/lib/coord/calendar/CalendarModel.js","webpack:///./node_modules/echarts/lib/ExtensionAPI.js","webpack:///./node_modules/echarts/lib/component/axis/parallelAxisAction.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelCreator.js","webpack:///./node_modules/echarts/lib/coord/Axis.js","webpack:///./node_modules/echarts/lib/component/legend/LegendModel.js","webpack:///./node_modules/echarts/lib/data/helper/completeDimensions.js","webpack:///./node_modules/echarts/lib/chart/radar/radarLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphSeries.js","webpack:///./node_modules/echarts/lib/layout/points.js","webpack:///./node_modules/echarts/lib/util/throttle.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerView.js","webpack:///./node_modules/echarts/lib/util/component.js","webpack:///./node_modules/echarts/lib/model/globalDefault.js","webpack:///./node_modules/echarts/lib/scale/Interval.js","webpack:///./node_modules/echarts/lib/model/referHelper.js","webpack:///./node_modules/echarts/lib/scale/Log.js","webpack:///./node_modules/echarts/lib/chart/radar.js","webpack:///./node_modules/echarts/lib/data/OrdinalMeta.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaView.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/GridModel.js","webpack:///./node_modules/echarts/lib/component/legend/legendFilter.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapVisual.js","webpack:///./node_modules/echarts/lib/component/marker/markerHelper.js","webpack:///./node_modules/echarts/lib/coord/polar/RadiusAxis.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapSeries.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineView.js","webpack:///./node_modules/echarts/lib/component/calendar.js","webpack:///./node_modules/echarts/lib/data/helper/sourceType.js","webpack:///./node_modules/echarts/lib/chart/map/backwardCompat.js","webpack:///./node_modules/echarts/lib/scale/helper.js","webpack:///./node_modules/echarts/lib/chart/bar.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayoutHelper.js","webpack:///./node_modules/echarts/lib/component/markLine.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphView.js","webpack:///./node_modules/echarts/lib/visual/dataColor.js","webpack:///./node_modules/echarts/lib/loading/default.js","webpack:///./node_modules/echarts/lib/model/mixin/areaStyle.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapLayout.js","webpack:///./node_modules/echarts/lib/layout/barGrid.js","webpack:///./node_modules/echarts/lib/coord/axisModelCreator.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","webpack:///./node_modules/echarts/lib/chart/line/helper.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarSeries.js","webpack:///./node_modules/echarts/lib/component/timeline/typeDefaulter.js","webpack:///./node_modules/echarts/lib/util/symbol.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomModel.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeLineDraw.js","webpack:///./node_modules/echarts/lib/chart/funnel.js","webpack:///./node_modules/echarts/lib/component/helper/interactionMutex.js","webpack:///./node_modules/echarts/theme/dark.js","webpack:///./node_modules/echarts/lib/chart/map/MapView.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeView.js","webpack:///./node_modules/echarts/lib/chart/lines.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/diaoyuIsland.js","webpack:///./node_modules/echarts/lib/component/brush/selector.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointModel.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./node_modules/echarts/lib/coord/polar/AngleAxis.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstSeries.js","webpack:///./node_modules/echarts/lib/coord/cartesian/prepareCustom.js","webpack:///./node_modules/echarts/lib/chart/pictorialBar.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualEncoding.js","webpack:///./node_modules/echarts/lib/chart/parallel/parallelVisual.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterView.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayout.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesView.js","webpack:///./node_modules/echarts/lib/component/brush/preprocessor.js","webpack:///./node_modules/echarts/lib/component/axis.js","webpack:///./node_modules/echarts/lib/component/axis/ParallelAxisView.js","webpack:///./node_modules/echarts/lib/component/toolbox.js","webpack:///./node_modules/echarts/lib/view/Component.js","webpack:///./node_modules/echarts/lib/data/helper/createDimensions.js","webpack:///./node_modules/echarts/lib/component/visualMap/preprocessor.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapView.js","webpack:///./node_modules/echarts/lib/component/axis/AngleAxisView.js","webpack:///./node_modules/echarts/lib/chart/bar/barItemStyle.js","webpack:///./node_modules/echarts/lib/export.js","webpack:///./node_modules/echarts/lib/visual/aria.js","webpack:///./node_modules/echarts/lib/component/brush/brushAction.js","webpack:///./node_modules/echarts/lib/chart/pie/labelLayout.js","webpack:///./node_modules/echarts/lib/component/visualMap/typeDefaulter.js","webpack:///./node_modules/echarts/lib/component/axis/SingleAxisView.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickSeries.js","webpack:///./node_modules/echarts/lib/component/helper/BrushTargetManager.js","webpack:///./node_modules/echarts/lib/coord/geo/parseGeoJson.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyAction.js","webpack:///./node_modules/echarts/lib/chart/tree/treeAction.js","webpack:///./node_modules/echarts/lib/chart/pie.js","webpack:///./node_modules/echarts/lib/component/brush/BrushView.js","webpack:///./node_modules/echarts/lib/component/parallelAxis.js","webpack:///./node_modules/echarts/lib/component/helper/cursorHelper.js","webpack:///./node_modules/echarts/lib/theme/light.js","webpack:///./node_modules/echarts/map/js/world.js","webpack:///./node_modules/echarts/lib/coord/single/AxisModel.js","webpack:///./node_modules/echarts/lib/chart/helper/labelHelper.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectSymbol.js","webpack:///./node_modules/echarts/lib/coord/geo/geoSVGLoader.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js","webpack:///./node_modules/echarts/lib/chart/tree/treeLayout.js","webpack:///./node_modules/echarts/lib/model/OptionManager.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstLayout.js","webpack:///./node_modules/echarts/lib/component/axisPointer.js","webpack:///./node_modules/echarts/lib/component/visualMap/helper.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./node_modules/echarts/lib/component/dataZoom/AxisProxy.js","webpack:///./node_modules/echarts/lib/chart/helper/createRenderPlanner.js","webpack:///./node_modules/echarts/lib/component/grid.js","webpack:///./node_modules/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js","webpack:///./node_modules/echarts/lib/chart/map/mapSymbolLayout.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeySeries.js","webpack:///./node_modules/echarts/lib/component/geo.js","webpack:///./node_modules/echarts/lib/coord/calendar/Calendar.js","webpack:///./node_modules/echarts/lib/processor/dataStack.js","webpack:///./node_modules/echarts/lib/component/legend.js","webpack:///./node_modules/echarts/lib/chart/helper/focusNodeAdjacencyAction.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayout.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/MagicType.js","webpack:///./node_modules/echarts/lib/processor/dataFilter.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./node_modules/echarts/lib/chart/line/poly.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualMapAction.js","webpack:///./node_modules/echarts/lib/chart/sunburst.js","webpack:///./node_modules/echarts/lib/chart/graph/graphAction.js","webpack:///./node_modules/echarts/lib/action/roamHelper.js","webpack:///./node_modules/echarts/lib/coord/parallel/Parallel.js","webpack:///./node_modules/echarts/lib/coord/polar/AxisModel.js","webpack:///./node_modules/echarts/lib/chart/treemap.js","webpack:///./node_modules/echarts/lib/component/markPoint.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxView.js","webpack:///./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotView.js","webpack:///./node_modules/echarts/lib/component/dataZoomSelect.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineModel.js","webpack:///./node_modules/echarts/lib/model/mixin/boxLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/edgeVisual.js","webpack:///./node_modules/echarts/lib/coord/parallel/AxisModel.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Restore.js","webpack:///./node_modules/echarts/lib/chart/custom.js","webpack:///./node_modules/echarts/lib/coord/axisTickLabelBuilder.js","webpack:///./node_modules/echarts/lib/util/model.js","webpack:///./node_modules/echarts/lib/scale/Scale.js","webpack:///./node_modules/echarts/lib/chart/helper/whiskerBoxCommon.js","webpack:///./node_modules/echarts/lib/chart/helper/createListSimply.js","webpack:///./node_modules/echarts/lib/model/mixin/colorPalette.js","webpack:///./node_modules/echarts/lib/util/animation.js","webpack:///./node_modules/echarts/lib/chart/bar/helper.js","webpack:///./node_modules/echarts/lib/view/Chart.js","webpack:///./node_modules/echarts/lib/chart/candlestick/preprocessor.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapModel.js","webpack:///./node_modules/echarts/lib/coord/polar/prepareCustom.js","webpack:///./node_modules/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./node_modules/echarts/lib/component/legend/scrollableLegendAction.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./node_modules/echarts/lib/coord/geo/mapDataStorage.js","webpack:///./node_modules/echarts/lib/data/Source.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotLayout.js","webpack:///./node_modules/echarts/lib/util/format.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineModel.js","webpack:///./node_modules/echarts/lib/coord/single/singleAxisHelper.js","webpack:///./node_modules/echarts/lib/data/helper/dataStackHelper.js","webpack:///./node_modules/echarts/lib/component/calendar/CalendarView.js","webpack:///./node_modules/echarts/lib/component/timeline.js","webpack:///./node_modules/echarts/lib/chart/lines/linesVisual.js","webpack:///./node_modules/echarts/lib/coord/geo/geoCreator.js","webpack:///./node_modules/echarts/lib/chart/graph/forceHelper.js","webpack:///./node_modules/echarts/lib/component/helper/sliderMove.js","webpack:///./node_modules/echarts/lib/chart/line.js","webpack:///./node_modules/echarts/lib/chart/tree.js","webpack:///./node_modules/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","webpack:///./node_modules/echarts/lib/chart/line/LineView.js","webpack:///./node_modules/echarts/lib/theme/dark.js","webpack:///./node_modules/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./node_modules/echarts/lib/coord/geo/Region.js","webpack:///./node_modules/echarts/lib/component/parallel.js","webpack:///./node_modules/echarts/lib/component/brush/BrushModel.js","webpack:///./node_modules/echarts/lib/stream/task.js","webpack:///./node_modules/echarts/lib/component/helper/brushHelper.js","webpack:///./node_modules/echarts/lib/component/angleAxis.js","webpack:///./node_modules/echarts/lib/chart/treemap/Breadcrumb.js","webpack:///./node_modules/echarts/lib/chart/map/mapDataStatistic.js","webpack:///./node_modules/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./node_modules/echarts/lib/chart/pie/PieSeries.js","webpack:///./node_modules/echarts/lib/util/layout.js","webpack:///./node_modules/echarts/lib/chart/boxplot.js","webpack:///./node_modules/echarts/lib/component/axis/AxisBuilder.js","webpack:///./node_modules/echarts/lib/preprocessor/backwardCompat.js","webpack:///./node_modules/echarts/lib/component/helper/BrushController.js","webpack:///./node_modules/echarts/lib/coord/polar/Polar.js","webpack:///./node_modules/echarts/lib/visual/seriesColor.js","webpack:///./node_modules/echarts/lib/processor/dataSample.js","webpack:///./node_modules/echarts/lib/model/mixin/textStyle.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotSeries.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Brush.js","webpack:///./node_modules/echarts/lib/component/axisPointer/viewHelper.js"],"names":["_util","__webpack_require__","each","createHashMap","SeriesModel","createListFromArray","_default","extend","type","dependencies","visualColorAccessPath","getInitialData","option","ecModel","source","this","getSource","seriesModel","encodeDefine","parallelModel","getComponent","get","dimensions","axisDim","dataDimIndex","replace","set","setEncodeAndDimensions","getRawIndicesByActiveState","activeState","coordSys","coordinateSystem","data","getData","indices","eachActiveState","theActiveState","dataIndex","push","getRawIndex","defaultOption","zlevel","z","parallelIndex","label","show","inactiveOpacity","activeOpacity","lineStyle","width","opacity","emphasis","progressive","smooth","animationEasing","module","exports","zrUtil","VisualMapView","graphic","createSymbol","layout","helper","doRender","thisGroup","group","removeAll","visualMapModel","textGap","textStyleModel","textFont","getFont","textFill","getTextColor","itemAlign","_getItemAlign","itemSize","viewData","_getViewData","endsText","showLabel","retrieve","_renderEndsText","viewPieceList","item","piece","itemGroup","Group","onclick","bind","_onItemClick","_enableHoverLink","indexInModelPieceList","representValue","getRepresentValue","_createItemSymbol","visualState","getValueState","add","Text","style","x","y","text","textVerticalAlign","textAlign","box","renderBackground","positionGroup","pieceIndex","onHoverLink","method","hoverLink","api","dispatchAction","batch","convertDataIndex","findTargetDataIndices","on","modelOption","orient","getItemAlign","align","map","getPieceList","index","inverse","reverse","slice","shapeParam","getControllerVisual","selected","clone","newKey","getSelectedMapKey","selectedMode","o","key","from","uid","visualMapId","id","echarts","registerAction","event","update","createListSimply","defaultEmphasis","FunnelSeries","extendSeriesModel","init","superApply","arguments","legendDataProvider","getRawData","_defaultLabelLine","labelLineNormalOpt","labelLine","labelLineEmphasisOpt","getDataParams","params","superCall","valueDim","mapDimension","sum","getSum","percent","toFixed","$vars","legendHoverLink","left","top","right","bottom","minSize","maxSize","sort","gap","funnelAlign","position","length","itemStyle","borderColor","borderWidth","dataToCoordSize","dataSize","dataItem","dimIdx","val","halfSize","p1","p2","Math","abs","dataToPoint","rect","getBoundingRect","height","zoom","getZoom","coord","size","BoundingRect","View","geoSourceManager","Geo","name","nameMap","invertLongitute","call","load","_nameCoordMap","nameCoordMap","_regionsMap","regionsMap","_invertLongitute","regions","_rect","boundingRect","doConvert","methodName","finder","value","geoModel","getReferringComponents","prototype","constructor","containCoord","i","contain","transformTo","rawTransformable","_rawTransformable","transform","calculateTransform","decomposeTransform","scale","updateTransform","_updateTransform","getRegion","getRegionByCoord","addGeoCoord","geoCoord","getGeoCoord","noRoam","out","convertToPixel","curry","convertFromPixel","mixin","gridModel","axisModel","opt","grid","axis","otherAxisOnZeroOf","getAxesOnZeroOf","rawAxisPosition","axisPosition","dim","getRect","rectBound","idx","onZero","axisOffset","posBound","onZeroCoord","toGlobalCoord","dataToCoord","max","min","rotation","PI","labelDirection","tickDirection","nameDirection","labelOffset","labelInside","labelRotate","z2","extendComponentView","render","Rect","shape","defaults","fill","getItemStyle","silent","registerPreprocessor","xAxis","yAxis","updateViewOnPan","controllerHost","dx","dy","target","pos","dirty","updateViewOnZoom","zoomDelta","zoomX","zoomY","zoomLimit","newZoom","zoomMin","zoomMax","Infinity","zoomScale","ComponentModel","ComponentView","detectSourceFormat","SERIES_LAYOUT_BY_COLUMN","seriesLayoutBy","sourceHeader","optionUpdated","Model","linkList","List","createDimensions","TreeNode","hostTree","depth","parentNode","children","viewChildren","Tree","hostModel","levelOptions","leavesOption","root","_nodes","levelModels","levelDefine","leavesModel","isRemoved","eachNode","options","cb","context","isString","order","suppressVisitSub","attr","updateDepthAndHeight","child","getNodeById","getId","len","res","contains","node","getAncestors","includeSelf","ancestors","getValue","dimension","getDimension","setLayout","merge","setItemLayout","getLayout","getItemLayout","getModel","path","itemModel","getItemModel","levelModel","getLevelModel","isExpand","getLeavesModel","setVisual","setItemVisual","getVisual","ignoreParent","getItemVisual","isAncestorOf","parent","isDescendantOf","getNodeByDataIndex","rawIndex","getNodeByName","nodes","count","clearLayouts","clearItemLayouts","createTree","dataRoot","treeOptions","tree","levels","leaves","listData","dimMax","buildHierarchy","dataNode","isArray","addChild","dimensionsInfo","coordDimensions","dimensionsCount","list","initData","mainData","struct","structAttr","__DEV__","VisualMapModel","VisualMapping","visualDefault","reformIntervals","PiecewiseModel","minOpen","maxOpen","itemWidth","itemHeight","itemSymbol","pieceList","categories","splitNumber","itemGap","newOption","isInit","_pieceList","resetExtent","mode","_mode","_determineMode","resetMethods","_resetSelected","resetVisual","mappingOption","state","mappingMethod","dataExtent","getExtent","visual","completeVisualOption","visualTypesInPieces","visualTypes","listVisualTypes","isCategory","has","obj","visualType","isObject","hasOwnProperty","pieces","v","exists","stateList","apply","thisOption","hasSel","setSelected","findPieceIndex","result","eachTargetSeries","dataIndices","getDataDimension","seriesId","pieceInterval","interval","getVisualMeta","getColorVisual","stops","outerColors","edge","unshift","curr","setStop","valueState","color","precision","parseInt","splitStep","close","formatValueText","cate","normalizeReverse","pieceListItem","closeList","infinityList","useMinMax","lg","names","retrieveVisuals","edgeSymbols","zrColor","eventUtil","env","formatUtil","toCamelCase","vendors","assembleCssText","tooltipModel","duration","transitionText","cssText","transitionDuration","backgroundColor","padding","vendorPrefix","join","canvasSupported","toHex","borderName","camelCase","fontSize","round","assembleFont","normalizeCssArray","TooltipContent","container","wxa","el","document","createElement","zr","_zr","getZr","_x","getWidth","_y","getHeight","appendChild","_container","_show","_hideTimeout","self","onmouseenter","_enterable","clearTimeout","_inContent","onmousemove","e","window","handler","normalizeEvent","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","pointerEvents","setContent","content","setEnterable","enterable","getSize","clientWidth","clientHeight","moveTo","viewportRootOffset","painter","getViewportRootOffset","offsetLeft","offsetTop","hide","time","setTimeout","isShow","getOuterSize","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","parallelVisual","registerVisual","preprocessor","candlestickVisual","candlestickLayout","registerLayout","Axis","TimelineAxis","coordExtent","axisType","model","getLabelModel","isHorizontal","inherits","subPixelOptimize","createRenderPlanner","parsePercent","retrieve2","LargeArr","Float32Array","Array","seriesType","plan","reset","candleWidth","extent","baseAxis","getBaseAxis","bandWidth","getBandWidth","barMaxWidth","barMinWidth","barWidth","calculateCandleWidth","cDimIdx","vDimIdx","coordDims","cDim","vDims","openDim","closeDim","lowestDim","highestDim","isSimpleBox","progress","pipelineContext","large","point","points","offset","tmpIn","tmpOut","next","axisDimVal","openVal","closeVal","lowestVal","highestVal","isNaN","NaN","getSign","ocLow","ocHigh","ocLowPoint","getPoint","ocHighPoint","lowestPoint","highestPoint","ends","addBodyEnd","subPixelOptimizePoint","sign","initBaseline","brushRect","makeBrushRect","p","start","point1","point2","pmin","pmax","RoamController","roamHelper","onIrrelevantElement","getUID","getFixedItemStyle","areaColor","updateMapSelected","mapOrGeoModel","regionsGroup","eachChild","otherRegionEl","__regions","region","trigger","isSelected","MapDraw","updateGroup","_controller","_controllerHost","_updateGroup","_mouseDownFlag","_mapName","_initialized","_regionsGroup","_backgroundGroup","draw","fromView","payload","isGeo","mainType","eachComponent","subType","mapSeries","getHostGeoModel","geo","_updateBackground","childAt","updateProps","itemStyleAccessPath","hoverItemStyleAccessPath","labelAccessPath","hoverLabelAccessPath","regionGroup","compoundPath","CompoundPath","paths","dataIdx","itemStyleModel","regionModel","getRegionModel","hoverItemStyleModel","hoverItemStyle","labelModel","hoverLabelModel","indexOfName","visualColor","geometries","geometry","Polygon","exterior","interiors","setStyle","strokeNoScale","culling","hoverShowLabel","isDataNaN","itemLayout","labelFetcher","query","textEl","center","setLabelStyle","hoverStyle","labelDataIndex","defaultText","useInsideStyle","setItemGraphicEl","eventData","componentType","componentIndex","geoIndex","setHoverStyle","hoverSilentOnTouch","_updateController","mapDraw","off","action","updateMapSelectHandler","remove","dispose","removeGraphic","mapName","makeGraphic","controller","enable","makeActionBase","originX","originY","traverse","setPointerChecker","getViewRectAfterRoam","eachSeriesByType","getGraph","minValue","maxValue","nodeValue","mapValueToColor","mapValueToVisual","customColor","layoutUtil","LegendView","WH","XY","ScrollableLegendView","newlineDisabled","_currentIndex","_containerGroup","getContentGroup","_controllerGroup","_showController","resetInner","removeClipPath","__rectSize","renderInner","legendModel","me","controllerGroup","pageIconSize","createPageButton","pageTextStyleModel","iconIdx","pageDataIndexName","icon","createIcon","getOrient","_pageGo","font","layoutInner","isFirstRender","contentGroup","containerGroup","orientIdx","wh","hw","yx","contentRect","controllerRect","showController","contentPos","containerPos","controllerPos","pageButtonGap","mainRect","clipShape","setClipPath","invisible","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","to","scrollDataIndex","legendId","canJump","childOfName","cursor","pageText","pageFormatter","current","total","pageCount","containerRectSize","xy","targetItemIndex","_findTargetItemIndex","targetItem","itemCount","pCount","pagePrevDataIndex","pageNextDataIndex","targetItemInfo","getItemInfo","s","winStartItemInfo","winEndItemInfo","currItemInfo","intersect","itemRect","__legendDataIndex","itemInfo","winStart","targetDataIndex","ParallelAxis","axisIndex","_model","makeInner","getDataItemValue","getCoordSysDefineBySeries","isTypedArray","isArrayLike","Source","assert","_sourceType","SOURCE_FORMAT_ORIGINAL","SOURCE_FORMAT_ARRAY_ROWS","SOURCE_FORMAT_OBJECT_ROWS","SOURCE_FORMAT_KEYED_COLUMNS","SOURCE_FORMAT_UNKNOWN","SOURCE_FORMAT_TYPED_ARRAY","SERIES_LAYOUT_BY_ROW","inner","normalizeDimensionsDefine","dimensionsDefine","displayName","exist","arrayRowsTravelFirst","maxLoop","value0","doGuessOrdinal","sourceFormat","startIndex","dimIndex","dimName","sample","detectValue","row","isFinite","datasetModel","Error","resetSourceDefaulter","datasetMap","prepareSource","seriesOption","fromDataset","datasetIndex","getDatasetModel","datasetOption","completeResult","dimensionsDetectCount","findPotentialName","potentialNameDimIndex","firstIndex","objectRowsCollectDimensions","colArr","completeBySourceData","encode","coordSysDefine","encodeItemName","encodeSeriesName","nSeriesMap","cSeriesMap","datasetRecord","categoryWayDim","valueWayDim","coordSysDims","coordDim","firstCategoryDimIndex","dataDim","categoryAxisMap","firstNotOrdinal","nameDimIndex","itemName","seriesName","makeDefaultEncode","guessOrdinal","Line","vec2","curveUtil","EffectLine","lineData","seriesScope","createLine","_updateEffectSymbol","effectLineProto","effectModel","symbolType","symbol","_symbolType","setColor","_updateEffectAnimation","period","loop","constantSpeed","delayExpr","isDelayFunc","ignore","updateAnimationPoints","getLineLength","_period","_loop","stopAnimation","delay","__t","animator","animate","when","during","updateSymbolPosition","done","dist","__p1","__cp1","__p2","updateData","cp1","t","quadraticAt","quadraticDerivativeAt","tx","ty","atan2","updateLayout","visualSolution","selector","throttleUtil","BrushTargetManager","STATE_LIST","DISPATCH_METHOD","DISPATCH_FLAG","PRIORITY_BRUSH","PRIORITY","VISUAL","BRUSH","doDispatch","brushSelected","isDisposed","checkInRange","selectorsByBrushType","rangeInfoList","area","brushType","selectors","getSelectorsByBrushType","brushSelector","sels","selectorsByElementType","isFunction","bSelector","sel","brushModel","setBrushOption","brushOption","brushTargetManager","setInputRanges","areas","throttleType","throttleDelay","brushIndex","thisBrushSelected","brushId","brushName","brushLink","linkedSeriesMap","selectedDataIndexForLink","rangeInfoBySeries","hasBrushExists","selFn","elType","bindSelector","boundingRectBuilders","visualMappings","createVisualMappings","linkOthers","seriesIndex","brushed","eachSeries","hasAxisBrushed","stepAParallel","seriesIndices","indexOf","brushModelNotControll","controlSeries","stepAOthers","seriesBrushSelected","applyVisual","createOrUpdate","fn","lineX","noop","lineY","getBoundingRectFromMinMax","range","polygon","minMax","rg","visualSymbol","layoutPoints","modelUtil","getSeriesByIndex","queryDataIndex","getItemGraphicEl","getTooltipPosition","getValues","applyTransform","getDefaultLabel","SymbolClz","symbolProto","getSymbolSize","symbolSize","getScale","driftSymbol","drift","_createSymbol","keepAspect","symbolPath","stopSymbolAnimation","toLastFrame","getSymbolPath","highlight","downplay","setZ","setDraggable","draggable","_updateCommon","fadeIn","initProps","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","onMouseOver","isInEmphasis","onEmphasis","onMouseOut","onNormal","incremental","useHoverLayer","__symbolOriginalScale","ratio","animateTo","useStyle","symbolRotate","symbolOffset","hoverAnimation","cursorStyle","hasItemOption","getShallow","elStyle","symbolInnerColor","liftZ","z2Origin","__z2Origin","useNameLabel","getName","isRectText","autoColor","isAnimationEnabled","fadeOut","keepLabel","symbolUtil","extendChartView","polar","oldData","_data","normalizeSymbolSize","updateSymbols","oldPoints","newPoints","symbolGroup","__dimIdx","getInitialPoints","pt","cx","cy","diff","polyline","Polyline","newIdx","oldIdx","execute","eachItemGraphicEl","getLineStyle","stroke","areaStyleModel","hoverAreaStyleModel","polygonIgnore","isEmpty","parentModel","hoverPolygonIgnore","getAreaStyle","itemHoverStyle","labelHoverModel","labelDimIndex","AxisBuilder","AxisView","axisBuilderAttrs","selfBuilderAttrs","axisPointerClass","radiusAxisModel","radiusAxis","angleAxis","getAngleAxis","ticksCoords","getTicksCoords","axisAngle","radiusExtent","layoutAxis","axisBuilder","getGroup","isBlank","_splitLine","lineStyleModel","lineColors","lineCount","splitLines","colorIndex","Circle","r","mergePath","_splitArea","areaColors","splitAreas","prevRadius","Sector","r0","startAngle","endAngle","axisHelper","axisModelCommonMixin","_layout","getLayoutRect","_dataStackHelper","enableDataStack","isDimensionStacked","getStackedDimension","_completeDimensions","completeDimensions","_createDimensions","_symbol","dataStack","createList","createScale","isInstance","createScaleByModel","setExtent","niceScaleExtent","mixinAxisModelCommonMethods","axisDefault","valueAxisDefault","valueAxis","defaultsShow","extendComponentModel","boundaryGap","axisLine","axisTick","axisLabel","nameTextStyle","showName","nameFormatter","nameGap","triggerEvent","indicatorModels","indicatorOpt","iNameTextStyle","nameLocation","indName","getIndicatorModels","radius","splitLine","splitArea","indicator","coordsOffsetMap","南海诸岛","广东","香港","澳门","天津","mapType","coordFix","cp","getProgressive","getProgressiveThreshold","progressiveThreshold","largeThreshold","onLeave","record","doEnter","currTrigger","register","records","useHandler","eventType","dis","pendings","showTip","hideTip","pendingList","makeDispatchAction","actuallyPayload","showLen","hideLen","dispatchTooltipFinally","initialized","initGlobalListeners","unregister","Scale","OrdinalMeta","scaleProto","OrdinalScale","ordinalMeta","_ordinalMeta","_extent","parse","getOrdinal","rank","normalize","getTicks","ticks","getLabel","n","unionExtentFromData","unionExtent","getApproximateExtent","getOrdinalMeta","niceTicks","niceExtent","create","tooltip","ChartView","Path","NORMAL_ITEM_STYLE_PATH","EMPHASIS_ITEM_STYLE_PATH","SKIP_PROPS","CandlestickView","_updateDrawMode","_isLargeDraw","_renderLarge","_renderNormal","incrementalPrepareRender","_clear","incrementalRender","_incrementalRenderLarge","_incrementalRenderNormal","isLargeDraw","hasValue","createNormalBox","setBoxCommon","createLarge","NormalBoxPath","buildPath","ctx","__simpleBox","lineTo","closePath","transInit","normalItemStyleModel","LargeBoxPath","__sign","largePoints","elP","elN","setLargeStyle","suffix","updateDataSelected","hasAnimation","selectedOffset","toggleItemSelected","midAngle","cos","sin","PiePiece","sector","hoverIgnore","normalIgnore","piePieceProto","firstCreate","sectorShape","setShape","lineJoin","_updateLabel","labelText","labelLayout","linePoints","origin","labelLineModel","labelLineHoverModel","inside","verticalAlign","sectorGroup","_sectorGroup","animationType","onSectorClick","piePiece","_createClipPath","clockwise","clipPath","containPoint","sqrt","simpleLayoutEdge","graph","eachEdge","curveness","node1","node2","simpleLayout","Polar","_axisHelper","CoordinateSystem","updatePolarScale","getRadiusAxis","onBand","setAxis","polarCreator","polarList","polarModel","findAxisModel","angleAxisModel","resizePolar","queryComponents","getSeriesStackId","getAxisKey","lastStackCoords","barWidthAndOffset","barSeries","columnsMap","axisExtent","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","stackId","maxWidth","barGap","barCategoryGap","coordSysName","barGapPercent","autoWidth","column","stack","lastColumn","widthSum","calRadialBar","filter","getSeriesByType","isSeriesFiltered","columnLayoutInfo","columnOffset","columnWidth","getOtherAxis","barMinHeight","barMinAngle","baseDim","stacked","valueAxisStart","baseValue","baseCoord","radiusSpan","dataToRadius","angle","dataToAngle","angleSpan","mathCos","mathSin","selectableMixin","geoCreator","GeoModel","layoutMode","getFilledRegions","_optionModelMap","reduce","optionModelMap","regionOpt","updateSelectedMap","aspectScale","boundingCoords","scaleLimit","getFormattedLabel","status","formatter","setZoom","setCenter","getMin","rangeStart","eqNaN","getMax","rangeEnd","getNeedCrossZero","getCoordSysModel","setRange","resetRange","coordinateSystemCreators","CoordinateSystemManager","_coordinateSystems","coordinateSystems","creater","concat","getCoordinateSystems","coordinateSystemCreator","features","ctor","encodeHTML","layoutInfo","treeOption","treeDepth","expandTreeDepth","expandAndCollapse","initialTreeDepth","getRawDataItem","collapsed","formatTooltip","realRoot","roam","nodeScaleRatio","animationDuration","animationDurationUpdate","numberUtil","scaleHelper","IntervalScale","intervalScaleProto","mathCeil","ceil","mathFloor","floor","TimeScale","stepLvl","_stepLvl","date","Date","formatTime","getSetting","ONE_HOUR","d","getFullYear","getMonth","getDate","minInterval","maxInterval","_interval","fixMin","fixMax","approxTickNum","span","approxInterval","scaleLevelsLen","scaleLevels","a","lo","hi","mid","bisect","level","yearSpan","nice","timezoneOffset","getTimezoneOffset","fixExtent","_niceExtent","parseDate","ONE_SECOND","ONE_MINUTE","ONE_DAY","useUTC","clipOverflow","step","smoothMonotone","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","Component","parallelAxisIndex","axisExpandable","axisExpandCenter","axisExpandCount","axisExpandWidth","axisExpandRate","axisExpandDebounce","axisExpandSlideTriggerArea","axisExpandTriggerOn","parallelAxisDefault","mergeOption","_initDimensions","setAxisExpand","axisModels","dependentModels","parallelAxis","nextRight","hierNode","thread","nextLeft","nextAncestor","nodeInLeft","ancestor","moveSubtree","wl","wr","shift","change","modifier","prelim","defaultSeparation","defaultAncestor","pop","firstWalk","separation","siblings","subtreeW","executeShifts","midPoint","subtreeV","nodeOutRight","nodeInRight","nodeOutLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","apportion","secondWalk","nodeX","radialCoordinate","radialCoor","getViewRect","getBoxLayoutParams","pathTool","colorTool","matrix","vector","Transformable","ZImage","Image","Ring","BezierCurve","Arc","LinearGradient","RadialGradient","IncrementalDisplayable","mathMax","mathMin","EMPTY_OBJ","Z2_EMPHASIS_LIFT","makePath","pathData","opts","createFromString","centerGraphic","resizePath","aspect","m","lineWidth","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftedColorMap","liftedColorCount","doSingleEnterHover","hoverStl","__hoverStl","__highlighted","__zr","elTarget","targetStyle","addHover","rollbackDefaultTextStyle","__hoverStlDirty","normalStyle","__cachedNormalStl","__cachedNormalZ2","cacheElementStl","extendFrom","setDefaultHoverFillStroke","applyDefaultTextStyle","prop","liftedColor","lift","liftColor","doSingleLeaveHover","highlighted","removeHover","normalStl","normalZ2","traverseCall","isGroup","setElementHoverStyle","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasisEntered","onElementMouseOut","enterEmphasis","leaveEmphasis","setAsHoverStyleTrigger","disable","__hoverStyleTrigger","setTextStyle","textStyle","specifiedTextStyle","isEmphasis","setTextStyleCommon","textPosition","textOffset","textRotation","textDistance","richResult","globalTextStyle","richItemNames","richItemNameMap","rich","getRichItemNames","richTextStyle","setTokenTextStyle","forceRich","isBlock","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","insideRawTextPosition","insideRollbackOpt","fontStyle","fontWeight","fontFamily","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","insideRollback","animateOrSetProps","isUpdate","props","animatableModel","postfix","animationDelay","getAnimationDelayParams","invert","getLocalTransform","extendShape","extendPath","extendFromString","makeImage","imageUrl","image","onload","img","subPixelOptimizeLine","param","x1","x2","y1","y2","subPixelOptimizeRect","originWidth","originHeight","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","baseText","showNormal","showEmphasis","normalStyleText","emphasisStyleText","setText","defaultColor","gTextStyleModel","trim","getTransform","mat","identity","mul","transformDirection","direction","hBase","vBase","vertex","groupTransition","g1","g2","elMap","elMap1","anid","oldEl","newProp","getAnimatableProps","clipPointsByRect","clipRectByRect","targetRect","iconStr","rectHover","eventTool","throttle","DataZoomView","sliderMove","linearMap","asc","HORIZONTAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_displayables","_orient","_range","_handleEnds","_size","_handleWidth","_handleHeight","_location","_dragging","_dataShadowInfo","dataZoomModel","_buildView","_updateView","clear","_resetLocation","_resetInterval","barGroup","_renderBackground","_renderHandle","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","ecSize","positionInfo","layoutParams","getLayoutParams","layoutRect","location","targetAxisModel","getFirstTargetAxisModel","otherAxisInverse","_getViewExtent","_onClickPanelClick","info","_prepareDataShadowInfo","series","otherDim","getShadowDim","otherDataExtent","getDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","thisCoord","stride","otherCoord","showDataShadow","eachTargetAxis","dimNames","seriesModels","getAxisProxy","getTargetSeriesModels","thisAxis","thisDim","displaybles","handles","handleLabels","filler","getCursor","_onDragMove","stop","ondragstart","_showDataInfo","ondragend","_onDragEnd","onmouseover","onmouseout","handleIndex","bRect","handleColor","getPercentRange","viewExtent","_updateInterval","delta","handleEnds","viewExtend","minMaxSpan","findRepresentativeAxisProxy","getMinMaxSpan","percentExtent","minSpan","maxSpan","lastRange","nonRealtime","handleInterval","handle","handleHeight","_updateDataInfo","labelTexts","axisProxy","getAxisModel","dataInterval","calculateDataWindow","end","valueWindow","getDataValueWindow","_formatLabel","orderedHandleEnds","setLabel","barTransform","textPoint","labelFormatter","labelPrecision","getPixelPrecision","valueStr","showOrHide","changed","realtime","_dispatchZoomAction","localPoint","transformCoordToLocal","offsetX","offsetY","dataZoomId","getTargetCoordInfo","coordInfoList","Graph","edges","directed","beforeLink","addNode","linkNameList","validEdges","linkCount","link","addEdge","nodeData","coordSysCtor","dimensionNames","edgeData","datas","datasAttr","IndicatorAxis","getScaleExtent","Radar","radarModel","_indicatorAxes","indicatorModel","indicatorAxis","resize","getIndicatorAxes","indicatorIndex","coordToPoint","pointToData","closestAxis","radian","minRadianDiff","closestAxisIdx","coodToData","viewWidth","viewHeight","viewSize","indicatorAxes","radarSeries","increaseInterval","exp10","pow","log","LN10","f","rawExtent","fixedMin","fixedMax","getInterval","setInterval","halfSplitNumber","radarList","radar","categoryFilter","categoryVisual","edgeVisual","circularLayout","forceLayout","createView","registerProcessor","registerCoordinateSystem","dataFormatMixin","addCommas","fillLabel","MarkerModel","extraOpt","mergeDefaultAndTheme","createdBySelf","hostSeries","__hostSeries","newOpt","modelPropName","markerOpt","markerModel","getRawValue","formattedValue","html","setData","_number","viewRect","valueArr","mapArray","isAscending","b","getSortedIndices","sizeExtent","getLinePoints","offY","x0","nextIdx","textX","textY","labelPosition","isLabelInside","labelLineLen","DataDiffer","_layers","layerSeries","getLayerSeries","keyGetter","dataDiffer","_layersSeries","newLayersGroups","process","oldLayersGroups","points0","points1","j","y0","textLayout","margin","layerGroup","stackedOnPoints","stackedOnSmooth","smoothConstraint","rectEl","createGridClipShape","POSSIBLE_STYLES","compatEC2ItemStyle","itemStyleOpt","styleName","normalItemStyleOpt","normal","emphasisItemStyleOpt","convertNormalEmphasis","optType","useExtend","normalOpt","emphasisOpt","removeEC3NormalStatus","compatTextStyle","propName","labelOptSingle","TEXT_STYLE_OPTIONS","compatEC3CommonStyles","toArr","toObj","isTheme","seriesOpt","markPoint","markLine","markArea","links","mpData","mlData","breadcrumb","processSeries","axes","axisName","axisOpt","axisPointer","parallel","parallelOpt","calendar","calendarOpt","radarOpt","geoOpt","regionObj","timeline","timelineOpt","toolbox","toolboxOpt","feature","featureOpt","properties","excludes","includes","PI2","RADIAN","minAngle","validDataCount","unitRadian","roseType","stillShowZeroSum","restAngle","valueSumLargerThanMinAngle","currentAngle","dir","paletteScope","categoriesData","getCategoriesData","categoryNameIdxMap","getColorFromPalette","category","brush","title","keep","dataView","lang","dataZoom","back","magicType","line","bar","tiled","restore","saveAsImage","typeNames","pie","scatter","effectScatter","treemap","boxplot","candlestick","k","heatmap","lines","sankey","funnel","gauge","pictorialBar","themeRiver","sunburst","aria","general","withTitle","withoutTitle","single","prefix","withName","withoutName","multiple","separator","middle","allData","partialData","isDataItemOption","DefaultDataProvider","dimSize","seriesDataToSource","_source","_offset","_dimSize","methods","providerMethods","providerProto","pure","persistent","arrayRows_column","getItem","appendData","appendDataSimply","arrayRows_row","objectRows","countSimply","getItemSimply","keyedColumns","col","dims","newData","newCol","oldCol","original","typedArray","clean","rawValueGetters","arrayRows","getRawValueSimply","defaultDimValueGetters","getDimValueSimply","converDataValue","_dimensionInfos","_rawData","dimInfo","dimType","parseAndCollect","retrieveRawValue","getProvider","getDimensionInfo","retrieveRawAttr","hasKeys","supplementVisualOption","Creater","mappings","__hidden","visualData","isValidType","__alphaForOpacity","replaceVisualOption","keys","scope","visualTypesMap","eachItem","valueOrIndex","rawDataItem","visualMap","prepareVisualTypes","incrementalApplyVisual","getTargetSeries","seriesModelMap","modifyOutputEnd","overallReset","filterData","percentRange","getDataPercentWindow","valueRange","setRawRange","startValue","endValue","OTHER_DIMENSIONS","summarizeDimensions","summary","notExtraCoordDimMap","defaultedLabel","defaultedTooltip","dimItem","coordDimArr","coordDimIndex","isExtraCoord","defaultTooltip","otherDimArr","otherDims","dataDimsOnCoord","encodeFirstDimNotExtra","dimArr","encodeLabel","encodeTooltip","getDimensionTypeByAxis","barPolar","borderColorQuery","globalColors","eachRawSeriesByType","defaulColor","legendSymbol","getMarkerPosition","clampData","progressiveChunkMode","DEFAULT_BAR_BOUND","ContinuousModel","calculable","hoverLinkDataSize","hoverLinkOnHandle","_resetRange","resetItemSize","auto","getSelected","oVals","getColorStopValues","iVals","iIdx","oIdx","iLen","oLen","first","stopsLen","stopValues","getAxis","markerHelper","LineDraw","MarkerView","markLineTransform","mlModel","mlType","valueDataDim","axisInfo","getAxisInfo","numCalculate","valueIndex","baseIndex","mlFrom","mlTo","dataTransform","isInifinity","ifMarkLineHasOnlyDim","fromCoord","toCoord","otherDimIndex","containData","markLineFilter","dataFilter","updateSingleMarkerEndLayout","isFrom","xPx","yPx","markLineModel","fromData","__from","toData","__to","markerGroupMap","renderSeries","seriesData","lineDrawMap","lineDraw","coordDimsInfos","optData","dimValueGetter","updateDataVisualAndLayout","lineColor","fromSymbolSize","fromSymbol","toSymbolSize","toSymbol","dataModel","__keep","sankeyLayout","sankeyVisual","_echarts","_export","DATAS","MAIN_DATA","transferInjection","dataType","linkAll","linkSingle","changeInjection","cloneShallowInjection","cloneShallow","getLinkedData","main","TRANSFERABLE_METHODS","wrapMethod","CHANGABLE_METHODS","Region","roams","InsideZoomView","allCoordIds","coordInfo","generateCoordId","coordModel","getRange","eventName","roamHandlers","coordId","containsPoint","directionInfo","getDirectionInfo","percentPoint","signal","pixelStart","pixelLength","pixel","pan","makeMover","oldX","oldY","newX","newY","scrollMove","scrollDelta","getPercentDelta","percentDelta","oldPoint","newPoint","ret","angleExtent","pointToCoord","singleAxis","coordSysDimDefs","registeredCoordSys","axisMap","getDimensionsInfo","hasNameEncode","dimInfoList","generateCoord","categoryAxisModel","stackCalculationInfo","setCalculationInfo","sampleItem","firstDataNotNull","isNeedCompleteOrdinalData","itemOpt","defaultDimValueGetter","isNumeric","BAR_BORDER_WIDTH_QUERY","LAYOUT_ATTRS","posDesc","pathForLineWidth","getSymbolMeta","symbolRepeat","symbolClip","symbolPosition","symbolPatternSize","symbolMeta","symbolRepeatDirection","animationModel","output","boundingLength","symbolBoundingData","zeroPx","pxSignIdx","symbolBoundingExtent","convertToCoordOnAxis","coordSysExtent","repeatCutLength","pxSign","prepareBarLength","categoryDim","categorySize","symbolScale","prepareSymbolSize","valueLineWidth","getLineScale","prepareLineWidth","unitLength","pathLen","absBoundingLength","symbolMargin","hasEndGap","lastIndexOf","uLenWithMargin","endFix","repeatSpecified","repeatTimes","toIntTimes","mDiff","sizeFix","pathPosition","bundlePosition","barRectShape","prepareLayoutInfo","createPath","createOrUpdateRepeatSymbols","bundle","__pictorialBundle","unit","eachPath","__pictorialAnimationIndex","__pictorialRepeatTimes","updateAttr","makeTarget","updateHoverAnimation","createOrUpdateSingleSymbol","mainPath","__pictorialMainPath","createOrUpdateBarRect","rectShape","barRect","__pictorialBarRect","createOrUpdateClip","__pictorialClipPath","createBar","__pictorialShapeStr","getShapeStr","__pictorialSymbolMeta","removeBar","labelRect","pathes","immediateAttrs","animationAttrs","updateCommon","barRectHoverStyle","barPositionOutside","times","roundedTimes","cartesian","coordSysRect","newIndex","oldIndex","pictorialShapeStr","updateBar","SunburstPiece","that","virtualRoot","newRoot","getViewRoot","renderLabelForZeroData","newChildren","oldChildren","_oldChildren","getKey","processNode","newId","oldId","newNode","oldNode","removeNode","doRenderNode","dualTravel","viewRoot","virtualPiece","_onclickEvent","_rootToNode","renderRollUp","highlightPolicy","unhighlight","_initEvents","targetFound","nodeClick","linkTarget","open","targetNode","TimelineView","_axis","_viewRect","_timer","_currentPointer","_mainGroup","_labelGroup","timelineModel","mainGroup","_createGroup","labelGroup","_createAxis","_renderAxisLabel","_position","_doPlayStop","_clearTimer","labelPosOpt","horizontal","vertical","playPosition","prevBtnPosition","nextBtnPosition","labelAlignMap","labelBaselineMap","rotationMap","mainLength","controlModel","showControl","controlSize","controlGap","sizePlusGap","labelRotation","controlPosition","showPlayBtn","showPrevBtn","showNextBtn","xLeft","xRight","labelAlign","labelBaseline","rotateOriginX","rotateOriginY","translate","rotate","viewBound","getBound","mainBound","labelBound","mainPosition","labelsPosition","mainBoundIdx","toBound","setOrigin","targetGroup","fromPos","boundIdx","newGroup","_renderAxisLine","lineCap","_renderAxisTick","tickCoord","hoverStyleModel","symbolOpt","_changeTimeline","giveSymbol","labels","getViewLabels","labelItem","tickValue","normalLabelModel","formattedLabel","_renderControl","playState","getPlayState","makeBtn","iconPath","willRotate","btn","objPath","makeIcon","_handlePlayClick","_renderCurrentPointer","currentIndex","getCurrentIndex","pointerModel","callback","onCreate","pointer","_handlePointerDrag","_handlePointerDragend","pointerMoveTo","onUpdate","nextState","_pointerChangeTimeline","mousePos","_toAxisCoord","_findNearestTick","trans","axisCoord","nextIndex","noAnimation","dragging","dataBackground","areaStyle","fillerColor","handleIcon","handleSize","handleStyle","showDetail","zoomLock","RADIAN_EPSILON","TIME_REG","quantityExponent","domain","clamp","subDomain","subRange","all","str","match","parseFloat","returnStr","arr","getPrecision","getPrecisionSafe","toString","eIndex","dotIndex","pixelExtent","dataQuantity","sizeQuantity","getPercentWithPrecision","valueList","acc","digits","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","pi2","isRadianAroundZero","exec","hour","toUpperCase","UTC","quantity","exponent","quantile","ascArr","H","h","littleThan","currClose","splice","_format","getTooltipMarker","formatTpl","getTooltipRenderMode","DIMENSION_LABEL_REG","rawValue","rawDataIndex","renderModeOption","renderMode","isSeries","componentSubType","marker","labelProp","charAt","makeStyleMapper","lineDash","getLineDash","lineType","dotSize","dashSize","setCurrentIndex","isIndexMax","setPlayState","resetOption","preventIncremental","coordSysCreator","blurSize","pointSize","maxOpacity","minOpacity","AxisProxy","eachAxisDim","retrieveRaw","updateRangeUse","rawOption","rangePropMode","_rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","xAxisIndex","yAxisIndex","filterMode","minValueSpan","maxValueSpan","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","normalizeToArray","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxisModel","singleAxisIndex","axisIndices","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","animation","firstAxisModel","ignoreUpdateRangeUsg","getValueRange","axisDimName","hostedBy","getRangePropMode","HOVER_LINK_SIZE","HOVER_LINK_OUT","ContinuousView","_shapes","_dataInterval","_useHandle","_hoverLinkDataIndices","_hovering","_renderBar","dataRangeText","_enableHoverLinkToSeries","_enableHoverLinkFromSeries","endsIndex","_applyTransform","shapes","useHandle","_createBarGroup","outOfRange","createPolygon","inRange","_dragHandle","textRect","getTextRect","textSize","handleThumbs","handleLabelPoints","_createHandle","_createIndicator","onDrift","onDragEnd","handleThumb","createHandlePoints","handleLabel","handleLabelPoint","indicatorLabel","indicatorLabelPoint","isEnd","_clearHoverLinkToSeries","useHoverLinkOnHandle","_doHoverLinkToSeries","forSketch","outOfRangeHandleEnds","inRangeHandleEnds","visualInRange","_createBarVisual","visualOutOfRange","barColor","barPoints","_updateHandle","forceState","convertOpacityToAlpha","colorStops","_makeColorGradient","symbolSizes","_createBarPoints","handlesColor","currValue","_showIndicator","cursorValue","textValue","rangeSymbol","halfHoverLinkSize","isRange","extentMax","createIndicatorPoints","_hoverLinkFromSeriesMouseOver","_hideIndicator","_clearHoverLinkFromSeries","cursorPos","hoverOnBar","getHalfHoverLinkSize","hoverRange","oldBatch","newBatch","resultBatches","compressBatches","_dispatchHighDown","isTargetSeries","element","global","zrender","timsort","Eventful","GlobalModel","ExtensionAPI","OptionManager","backwardCompat","seriesColor","loadingDefault","Scheduler","lightTheme","darkTheme","mapDataStorage","parseClassType","PRIORITY_PROCESSOR_FILTER","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_CHART","PROCESSOR","FILTER","STATISTIC","LAYOUT","GLOBAL","CHART","COMPONENT","IN_MAIN_PROCESS","OPTION_UPDATED","ACTION_REG","createRegisterEventWithLowercaseName","toLowerCase","MessageCenter","ECharts","dom","theme","themeStorage","_dom","renderer","devicePixelRatio","_throttledZrFlush","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","ecInstance","coordSysMgr","_api","getComponentByElement","modelInfo","__ecComponentInfo","prioritySortFunc","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_ecEventProcessor","EventProcessor","_messageCenter","_pendingActions","_onframe","ecIns","isFinished","unfinished","bindRenderedEvent","setAsPrimitive","one","echartsProto","doConvertPixel","coordSysList","parseFinder","_disposed","scheduler","prepare","updateMethods","flushPendingActions","triggerUpdatedEvent","remainTime","startTime","performSeriesTasks","performDataProcessorTasks","updateStreamModes","performVisualTasks","getDom","setOption","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","console","error","getOption","getDevicePixelRatio","dpr","getRenderedCanvas","pixelRatio","getSvgDataUrl","svgSupported","storage","getDisplayList","pathToDataUrl","getDataURL","excludeComponents","excludesComponentViews","component","view","__viewId","url","getType","toDataURL","getConnectedDataURL","groupId","connectedGroups","canvasList","instances","chart","canvas","getBoundingClientRect","targetCanvas","createCanvas","refreshImmediately","containPixel","models","defaultMainType","dataIndexInside","indexOfRawIndex","getViewOfComponentModel","componentModel","getViewOfSeriesModel","prepareAndUpdate","restoreData","clearColorPalette","setBackgroundColor","colorArr","stringify","performPostUpdateFuncs","componentDirtyList","componentView","__alive","seriesDirtyMap","chartView","setDirty","dirtyMap","updateView","markUpdateMethod","updateVisual","restorePipelines","prepareStageTasks","prepareView","updateDirectly","condition","excludeSeriesId","callView","__model","chartsMap","doDispatchAction","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","split","updateMethod","payloads","batched","eventObj","eventObjBatch","isHighDown","batchItem","sub","pendingActions","isComponent","viewList","viewMap","doPrepare","viewId","classType","getClass","__id","renderTask","dirtyList","updateZ","renderComponents","updatePayload","perform","getPerformArgs","blendMode","blend","eachPendingDisplayable","displayable","updateBlend","elCount","updateHoverLayerStatus","postUpdateFuncs","func","_loadingFX","optionChanged","showLoading","cfg","hideLoading","loadingEffects","makeActionFromEvent","eventActionMap","browser","weChat","MOUSE_EVENT_NAMES","eventInfo","eveName","targetEl","packedEvent","zrEventfulCallAtLast","actionType","setAttribute","DOM_ATTRIBUTE_KEY","normalizeQuery","cptQuery","dataQuery","otherQuery","condCptType","suffixes","dataKeys","reserved","propSuffix","suffixPos","args","check","filterForExposedEvent","host","propOnHost","afterTrigger","idBase","groupIdBase","disConnect","disconnect","getInstanceByDom","getAttribute","registerTheme","preprocessorFunc","priority","processor","normalizeRegister","test","visualTask","targetList","defaultPriority","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","version","existInstance","STATUS_KEY","updateConnectedChartsStatus","charts","otherCharts","otherChart","enableConnect","connect","getInstanceById","registerPostUpdate","postUpdateFunc","getCoordinateSystemDimensions","layoutTask","setCanvasCreator","creator","$override","registerMap","geoJson","specialAreas","getMap","retrieveMap","geoJSON","dataTool","___ec_export","TooltipRichContent","findPointFromSeries","globalListener","axisPointerViewHelper","proxyRect","tooltipContent","_renderMode","_newLine","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","triggerOn","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","dataByCoordSys","tooltipOption","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","coordSysAxesInfo","buildTooltipModel","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","globalTooltipModel","singleDefaultHTML","singleParamsList","singleTooltipModel","newLine","markers","itemCoordSys","dataByAxis","axisValue","seriesDefaultHTML","valueLabel","getValueLabel","seriesDataIndices","valueLabelOpt","idxItem","dataParams","getAxisRawValue","axisValueLabel","seriesTooltip","newMarkers","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","random","undefined","tooltipTrigger","defaultHtml","asyncTicket","tooltipOpt","subTooltipModel","cbTicket","contentSize","vAlign","domWidth","domHeight","rectWidth","rectHeight","calcTooltipPosition","gapH","gapV","refixTooltipPosition","isCenterAlign","confineTooltipPosition","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","newIdxItem","modelCascade","resultModel","_clazz","enableClassExtend","enableClassCheck","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","doGet","pathArr","getParent","getParentMethod","parsePath","thisParentModel","Ctor","setReadOnly","customizeGetParent","Single","singles","actionTypes","targetInfo","retrieveTargetInfo","originViewRoot","aboveViewRoot","resetViewRoot","ROOT_TO_NODE_ACTION","HIGHLIGHT_ACTION","_createPolyline","polylineProto","_updateCommonStl","hoverLineStyle","legendSelectActionHandler","selectedMap","isToggleSelect","legendData","isItemSelected","rangeInfo","getRangeInfo","cellWidth","getCellWidth","cellHeight","getCellHeight","weeks","dayCount","allDay","SymbolDraw","EffectSymbol","pointsLayout","_symbolDraw","effectSymbolDraw","_updateGroupTransform","getRoamTransform","HeatmapLayer","visualMapOfThisSeries","targetSeries","_incrementalDisplayable","_renderOnCartesianAndCalendar","isGeoCoordSys","_renderOnGeo","coordSysType","dataDims","dataToRect","contentShape","inRangeVisuals","targetVisuals","outOfRangeVisuals","hmLayer","_hmLayer","roamTransform","lng","lat","isInRange","dataSpan","getIsInContinuousRange","lastIndex","getIsInPiecewiseRange","getNormalizer","getColorMapper","curveTool","v1","v2","v3","v2DistSquare","distSquare","mathAbs","intersectCurveCircle","curvePoints","p0","radiusSquare","_t","nextDiff","tmp0","quadraticSubdivide","pts","pts2","__original","originalPoints","copy","scaleAndAdd","snap","triggerTooltip","shadowStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","axisModelCreator","AxisModel","gridIndex","gridId","getAxisType","extraOption","updateCenterAndZoom","seriesGroup","interactionMutex","pointerChecker","_opt","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","pinch","controlType","zoomOnMouseWheel","moveOnMouseMove","moveOnMouseWheel","preventDefaultMouseMove","isDragging","isPinching","_pinching","isMiddleOrRightButtonOnMouseUpDown","isAvailableBehavior","gestureEvent","isTaken","shouldZoom","shouldMove","wheelDelta","absWheelDeltaDelta","factor","checkPointerAndTrigger","absDelta","pinchScale","pinchX","pinchY","behaviorToCheck","contollerEvent","settings","setting","BaseAxisPointer","viewHelper","cartesianAxisHelper","CartesianAxisPointer","makeElOption","elOption","axisPointerModel","axisPointerType","otherExtent","getCartesian","getGlobalExtent","pixelValue","buildElStyle","pointerOption","pointerShapeBuilder","graphicKey","buildCartesianSingleLabelElOption","getHandleTransform","labelMargin","getTransformedPosition","updateHandleTransform","currPosition","cursorOtherValue","cursorPoint","targetShape","makeLineShape","getAxisDimIndex","shadow","makeRectShape","registerAxisPointerClass","SingleAxis","_init","axisPointerEnabled","_adjustAxis","_updateAxisTransform","coordBase","extentSum","toLocalCoord","getAxes","getTooltipAxes","baseAxes","coordToData","parseGeoJson","fixNanhai","fixTextCoord","fixGeoCoord","fixDiaoyuIsland","mapRecord","parsed","message","regionName","specialArea","regionRect","union","positiveBorderColorQuery","negativeBorderColorQuery","positiveColorQuery","negativeColorQuery","performRawSeries","isLargeRender","colorP","getColor","colorN","borderColorP","getBorderColor","borderColorN","FunnelPiece","funnelPieceProto","opacityAccessPath","funnelPiece","dataOpt","distance","offsetCenter","detail","dev","dataSelectableMixin","MapSeries","needsDrawMap","dataNameMap","selectTargetList","toAppendNames","geoSource","getMapType","appendValues","seriesNames","otherIndex","originalData","showLegendSymbol","dataRangeHoverLink","NodeHighlightPolicy","NONE","DESCENDANT","ANCESTOR","SELF","DEFAULT_SECTOR_Z","DEFAULT_TEXT_Z","SunburstPieceProto","visualMetaList","getRootId","getNodeColor","fillDefaultColor","stateStyle","activeNode","policy","onHighlight","onDownplay","getLabelAttr","labelMinAngle","labelPadding","rotateType","stateAttr","featureManager","saveAsImageLang","SaveAsImage","unusable","$a","download","href","MouseEvent","ie","navigator","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","charCodeAt","blob","Blob","write","evt","bubbles","cancelable","dispatchEvent","colorPaletteMixin","mergeLayoutParam","createTask","_sourceHelper","dataTask","dataTaskCount","dataTaskReset","wrapData","dataBeforeProcessed","autoSeriesName","inputPositionParams","themeSubType","hasClass","getTheme","getDefaultOption","fillDataTextStyle","newSeriesOption","task","getCurrentTask","setOutputEnd","outputData","multipleSeries","isRichText","markerId","formatSingleValue","tooltipDims","tooltipDimLen","isValueArr","vertially","setEachItem","markName","dimHead","dimHeadStr","valStr","formatArrayValue","colorEl","isNameSpecified","colorStr","animationEnabled","requestColorNum","coordDimToDataDim","getAxisTooltipData","pipeTask","nameArr","getSeriesAutoName","dataTaskProgress","onDataSelfChange","pipeline","getPipeline","currentTask","agentStubMap","COORDS","createNameEach","attrs","capitalNames","capitalFirst","capitalAttrs","nameObj","capital","isCoordSupported","coordType","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","sourceNode","existsLink","edgeType","absorb","processSingleNode","isNodeAbsorded","hasLink","edgeId","isLinked","themeRiverLayout","baseY0","timeDim","layerPoints","singleLayer","base","layerNum","pointNum","sums","temp","l","computeBaseline","baseLine","ky","layerIndex","colorList","getBorderLineDash","ATTR","giveStore","cleanStore","store","dataZoomInfo","theDataZoomId","theCoordId","dataZoomInfos","newRecord","createController","typePriority","controllerParams","type_true","type_move","type_false","type_undefined","oneType","getPathToRoot","validPayloadTypes","targetNodeId","viewPath","wrapTreePathInfo","treePathInfo","nodeDataIndex","graphSeries","preservedPoints","forceModel","initLayout","nodeDataExtent","edgeDataExtent","repulsion","edgeLength","rep","w","fixed","getEdgeByIndex","n1","n2","forceInstance","gravity","oldStep","getNodeByIndex","stopped","ifAxisCrossZero","estimateLabelUnionRect","Cartesian2D","Axis2D","isAxisUsedInTheGrid","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","gridProto","fixAxisOnZero","axesMap","otherAxisDim","onZeroRecords","otherAxes","onZeroAxisIndex","canOnZeroToAxis","getOnZeroRecordKey","_updateScale","ignoreContainLabel","gridRect","axesList","adjustAxes","axisExtentSum","updateAxisTransform","labelUnionRect","axesMapOnDim","coordList","getCartesians","_findConvertTarget","xAxisModel","yAxisModel","coordsList","axisPositionUsed","axesCount","createAxisCreator","addAxis","isCartesian2D","axesModels","findAxesModels","otherAxis","axesTypes","grids","nodeOpacityPath","lineOpacityPath","getItemOpacity","opacityPath","fadeOutItem","opacityRatio","getGraphicEl","fadeInItem","SankeyShape","cpx1","cpy1","cpx2","cpy2","bezierCurveTo","_focusAdjacencyDisabled","sankeyView","curve","curvature","n1Layout","node1Model","dragX1","dragY1","n2Layout","node2Model","dragX2","dragY2","edgeLayout","sy","dragX","dragY","localX","localY","edgeDataIndex","focusNodeAdjacency","focusNodeAdj","outEdges","inEdges","unfocusNodeAdjacency","geoJSONLoader","geoSVGLoader","loaders","svg","mapRecords","singleSource","makeInvoker","hostKey","results","makeBackground","_contentGroup","_backgroundEl","_isFirstRender","viewportSize","legendDrawnMap","selectMode","eachRawSeries","getSeriesByName","legendSymbolType","_createItem","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","newline","inactiveColor","symbolKeepAspect","itemIcon","legendGlobalTooltipModel","hitRect","formatterParams","legendIndex","dataName","CATEGORY_DEFAULT_VISUAL_INDEX","_normalizeData","normalizers","visualHandler","visualHandlers","_doMap","normalizeVisualRange","hasSpecialVisual","originIndex","preprocessForPiecewise","categoryMap","visualArr","setVisualToOption","preprocessForSpecifiedCategory","normalized","makeApplyVisual","isNormalized","doMapCategory","returnRGBArray","fastLerp","parsedVisual","linear","piecewise","getSpecifiedVisual","doMapFixed","colorHue","makePartialColorVisualHandler","modifyHSL","colorSaturation","colorLightness","colorAlpha","modifyAlpha","makeDoMap","getter","setter","symbolCfg","doMapToArray","applyValue","sourceExtent","addVisualHandler","eachVisual","mapVisual","isPrimary","newVisual","newVal","hasVisual","types","type1","type2","dependsOn","visualType1","visualType2","findClosestWhenOutside","possibleI","pieceValue","updatePossible","newAbs","DEFAULT_SMOOTH","createLinePoints","addEl","dataGroup","makeSeriesScope","updateElCommon","_dataGroup","newDataIndex","oldDataIndex","taskParams","active","inactive","_dataProvider","INDEX_NOT_FOUND","ID_PREFIX","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","CtorUint32Array","Uint32Array","CtorInt32Array","CtorUint16Array","Uint16Array","getIndicesCtor","_rawCount","TRANSFERABLE_PROPERTIES","CLONE_PROPERTIES","transferProperties","__wrappedMethods","_calculationInfo","dimensionInfos","invertedIndicesMap","dimensionInfo","dimensionName","createInvertedIndices","_indices","_count","_storage","_nameList","_idList","_optionModels","_visual","_itemVisuals","hasItemVisual","_itemLayouts","_graphicEls","_chunkSize","_chunkCount","_rawExtent","_approximateExtent","_dimensionsSummary","_invertedIndicesMap","listProto","prepareChunks","chunkSize","chunkCount","DataCtor","lastChunkIndex","resizeChunkArray","newStore","prepareInvertedIndex","invertedIndices","getRawValueFromStore","chunkIndex","chunkOffset","chunk","getRawIndexWithoutIndices","getRawIndexWithIndices","_idDimIdx","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","originalStorage","cloneDimStore","getInitialExtent","originalDimStore","originalChunk","newDimStore","getDimensionsOnCoord","dimensionsSummary","nameList","_nameRepeatCount","_dimValueGetter","_dimValueGetterArrayRows","_initDataFromProvider","rawData","values","dimLen","originalChunkCount","emptyDataItem","sourceIdx","dimRawExtent","nameDimIdx","dimensionInfoMap","idList","nameRepeatCount","_nameDimIdx","itemId","dimStorage","nameDim","nameDimChunk","getIndices","thisCount","buffer","getByRawIndex","rawIdx","dimStore","_getFast","dimData","initialExtent","dimExtent","currEnd","setApproximateExtent","getCalculationInfo","getMedian","dimDataArray","sortedDimDataArray","rawIndexOf","indicesOfNearest","maxDistance","nearestIndices","minDist","MAX_VALUE","minDiff","contextCompat","filterSelf","dim0","selectRange","originalCount","quickFinished","chunkStorage","dimStorage2","min2","max2","chunkStorage2","val2","dimk","tmpRetValue","dataCount","retValue","rawExtentOnDim","downSample","rate","sampleValue","sampleIndex","targetStorage","frameValues","frameSize","originalChunkIndex","originalChunkOffset","sampleFrameIdx","sampleChunkOffset","otherList","thisList","itemVisual","clearAllVisual","setItemDataAndSeriesIndex","dimensionInfoList","injectFunction","originalMethod","TYPE_DELIMITER","IS_CONTAINER","classBase","superClass","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","Clz","classAttr","enableClassManagement","entity","registerClass","Clazz","checkClassType","makeContainer","componentMainType","throwWhenNotFound","getClassesByMainType","getAllClassMainTypes","hasSubTypes","registerWhenExtend","originalExtend","ignoreSize","subtext","subtarget","subtextStyle","titleModel","subtextStyleModel","textBaseline","subText","subTextEl","sublink","groupRect","layoutOption","alignStyle","hasParallelSeries","createParallelIfNeeded","axisOption","parallelOption","mergeAxisOptionFromParallel","isPolyline","isLarge","lineCoords","segCount","totalCoordsCount","getLineCoordsCount","getLineCoords","axisPointerModelHelper","_axisPointer","fixValue","updateAxisPointer","force","disposeAxisPointer","axisView","forceRender","getAxisPointerClass","getAxisPointerModel","axisPointerClazz","clazz","transferItem","itemStyleEmphasis","labelNormal","excludeLabelAttr","ec2Types","controlStyle","compatibleEC2","legendModels","findComponents","categoryNames","mapSymbolLayout","mapDataStatistic","createDataSelectAction","effectType","showEffectOn","rippleEffect","barItemStyle","coordinateSystemType","isHorizontalOrRadial","elementCreator","updateStyle","removeRect","removeSector","cartesian2d","animateProperty","animateTarget","isRadial","fixedLineWidth","rawLayout","getLineWidth","signX","signY","isPolar","getBarItemStyle","labelPositionOutside","LargePath","startPoint","__startPoint","valueIdx","__valueIdx","registerSubTypeDefaulter","_barGrid","prepareLayoutBarSeries","makeColumnLayout","retrieveColumnLayout","axisDataLen","scaleType","originalExtent","getCategories","setBlank","isBaseAxisAndHasBarSeries","barSeriesModels","adjustedScale","axisLength","barsOnCurrentAxis","minOverflow","maxOverflow","totalOverFlow","oldRange","overflowBuffer","adjustScaleForOverflow","makeLabelFormatter","tpl","categoryTickStart","tick","getOptionCategoryInterval","realNumberScaleTicks","tickCount","categoryScaleExtent","rotateRadians","boundingBox","beforeWidth","beforeHeight","afterWidth","afterHeight","axisLabelModel","unrotatedSingleRect","singleRect","plain","shouldShowAllLabels","dataProcessorHandlers","_dataProcessorHandlers","_visualHandlers","_allHandlers","_stageTaskMap","performStageTasks","stageHandlers","needSetDirty","__pipeline","stageHandlerRecord","seriesTaskMap","overallTask","overallNeedDirty","stub","performArgs","block","pipelineId","skip","taskRecord","_pipelineMap","pCtx","progressiveEnabled","progressiveRender","__idxInPipeline","blockIndex","modDataCount","modBy","dataLen","threshold","pipelineMap","head","tail","pipe","stageTaskMap","createOnAllSeries","seriesTaskPlan","seriesTaskReset","seriesTaskCount","useClearVisual","isVisual","isLayout","removeKey","createSeriesStageTask","overallTaskReset","overallProgress","createStub","getSeries","stubReset","onDirty","stubOnDirty","agent","__block","createOverallStageTask","getUpstream","upstreamContext","stubProgress","getDownstream","resetDefines","makeSeriesTaskProgress","singleSeriesTaskProgress","resetDefineIdx","resetDefine","dataEach","detectSeriseType","legacyFunc","ecModelMock","apiMock","mockMethods","cond","EffectPolyline","_lastFrame","_lastFramePercent","effectPolylineProto","_points","accLenArr","_offsets","_length","offsets","lastFrame","frame","lerp","PolarAxisPointer","animationThreshold","coordValue","labelPos","innerTextLayout","getLabelPosition","buildLabelElOption","makeSectorShape","geoCoordMap","Russia","United States","United States of America","_buildAxes","_buildSplitLineAndArea","axisBuilders","splitLineModel","splitAreaModel","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","ticksRadius","getColorIndex","realSplitNumber","axesTicksPoints","prevPoints","areaOrLine","areaOrLineColorList","themeRiverVisual","componentUtil","boxLayoutMixin","themeModel","newCptOption","fields","optList","Class","enableSubTypeDefaulter","enableTopologicalTravel","deps","v2ApplyTransform","TransformDummy","_roamTransformable","_center","_zoom","setBoundingRect","setViewRect","rawTransform","centerCoord","_updateCenterAndZoom","getDefaultCenter","rawRect","getCenter","rawTransformMatrix","defaultCenter","roamTransformable","_rawTransform","invTransform","bbox","_oldTree","_updateViewCoordSys","symbolNeedsDraw","updateNode","symbolEl","_nodeScaleRatio","_updateNodeAndLinkScale","fromPoints","viewCoordSys","_viewCoordSys","nodeScale","_getNodeGlobalScale","invScale","groupScale","groupZoom","getTreeNodeStyle","sourceSymbolEl","sourceLayout","sourceOldLayout","rawX","__radialOldRawX","rawY","__radialOldRawY","targetLayout","__radialRawX","__radialRawY","rad","isLeft","rootLayout","textOrigin","__edge","getEdgeShape","radialCoor1","radialCoor2","radialCoor3","radialCoor4","eachAfter","eachBefore","newSnapshot","snapshot","_targetList","_selectTargetMap","targetMap","select","unSelect","toggleSelected","nameRotate","nameTruncate","ellipsis","placeholder","showMinLabel","showMaxLabel","categoryAxis","deduplication","alignWithLabel","timeAxis","logAxis","logBase","idxMap","concatArray","mergeAll","Uint32Arr","Float64Arr","compatEc2","coords","fromName","toName","LinesSeries","_processFlatCoordsArray","_flatCoords","flatCoords","_flatCoordsOffset","flatCoordsOffset","_getCoordsFromItemModel","startOffset","coordsOffsetAndLenStorage","coordsStorage","coordsCursor","offsetCursor","effect","trailLength","autoPositionValues","targetValue","visualCluster","visualObj","controllerVisuals","visualMapping","positionElement","generateNodeKey","_directed","_nodesMap","_edgesMap","graphProto","Node","hostGraph","Edge","isDirected","nodesMap","edgesMap","getEdge","breadthFirstTraverse","startNode","__visited","queue","currentNode","otherNode","degree","inDegree","outDegree","createGraphDataProxyMixin","hostName","LineGroup","_ctor","lineDrawProto","isPointNaN","lineNeedsDraw","isPersistent","oldLineData","_lineData","doAdd","newLineData","itemEl","doUpdate","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","updateIncrementalAndHover","_clearIncremental","_incremental","clearDisplaybles","_mapDraw","dataViewLang","BLOCK_SPLITER","ITEM_SPLITER","assembleOtherSeries","vals","argLen","itemSplitRegex","RegExp","parseContents","blockMetaList","blocks","isTSVFormat","tsv","tsvLines","headers","header","items","parseTSVContents","blockMeta","axisKey","hasName","parseListContents","DataView","tryMergeDataOption","readOnly","optionToContent","contentToOption","textColor","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","removeChild","viewMain","textarea","tables","seriesGroupByCategoryAxis","otherSeries","meta","other","groupSeries","valueAxisDim","columns","getContentFromModel","htmlOrDom","isDom","buttonContainer","buttonStyle","closeButton","refreshButton","addEventListener","keyCode","which","selectionStart","selectionEnd","substring","newSeriesOptList","actionInfos","polarOptArr","polarNotRadar","polarOpt","polarIndex","radarIndex","foundAxisModel","layoutBox","boxLayoutParams","positions","bbWidth","bbHeight","BrushController","history","dataZoomLang","DATA_ZOOM_ID_BASE","DataZoom","_brushController","_onBrush","mount","_isZoomActive","featureModel","zoomActive","dataZoomSelectActive","setIconStatus","retrieveAxisSetting","include","setPanels","makePanelOpts","xAxisDeclared","yAxisDeclared","enableBrush","brushStyle","updateZoomBtnStatus","updateBackBtnStatus","handlers","unmount","nextActive","updateCovers","matchOutputRanges","coordRange","setBatch","found","dzModel","findDataZoom","dataZoomOpts","dataZoomOpt","addForAxis","axisIndicesName","givenAxisIndices","forEachComponent","$fromToolbox","coordSysLists","coordIndex","save","LinePath","SYMBOL_CATEGORIES","makeSymbolTypeKey","symbolCategory","setLinePoints","_createLine","lineProto","beforeUpdate","symbolFrom","symbolTo","__dirty","pointAt","toPos","tangent","tangentAt","__position","halfPercent","__verticalAlign","__textAlign","lineLabelOriginalOpacity","visualOpacity","retrieve3","defaultLabelColor","rawVal","normalText","emphasisText","labelStyle","linePath","globalDefault","OPTION_INNER_KEY","_optionManager","baseOption","mountOption","_seriesIndices","_seriesIndicesMap","notMergeColorLayer","colorLayer","themeItem","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","componentsMap","newCptTypes","componentOption","topologicalTravel","newCptOptionList","mapResult","mappingToExists","makeIdAndName","keyInfo","existComponent","determineSubType","getComponentsByTypes","resultItem","ComponentModelClass","createSeriesIndices","isIdInner","cpts","isIdArray","cpt","isNameArray","filterBySubType","q","indexAttr","idAttr","nameAttr","queryCond","components","queryResult","oneSeries","getSeriesCount","rawSeriesIndex","getCurrentSeriesIndices","filterSeries","componentTypes","seiresIndex","isNotTargetSeries","graphicUtil","graphicOption","elements","GraphicModel","parentId","_elOptionsToUpdate","newList","existList","flattenedList","_flatten","mappingResult","elOptionsToUpdate","newElOption","existElOption","newElParentOption","parentOption","setKeyInfoToNewElOption","newElOptCopy","$action","copyLayoutParams","mergeNewElOptionToExist","existItem","hv","isSetLoc","setLayoutInfoToExist","optionList","useElOptionsToUpdate","els","createEl","targetElParent","graphicType","__ecGraphicId","removeEl","existEl","existElParent","isSet","_elMap","_lastGraphicModel","graphicModel","_updateElements","_relocate","rootGroup","elOptionStyle","elOptionCleaned","LOCATION_PARAMS","getCleanedElOption","__ecGraphicWidth","__ecGraphicHeight","setEventData","elOptions","parentEl","containerInfo","boundingMode","bounding","straightLineProto","bezierCurveProto","isLine","defaultSymbolType","hasCallback","itemSymbolType","itemSymbolSize","itemSymbolKeepAspect","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","existence","_add","_update","_remove","newDataIndexMap","oldDataKeyArr","newDataKeyArr","groupData","resolveCollisions","nodesByBreadth","nodeGap","nodeY","relaxRightToLeft","alpha","weightedTarget","getEdgeValue","weightedSource","array","relaxLeftToRight","nodeWidth","value1","value2","computeNodeValues","iterations","remainEdges","indegreeArr","zeroIndegrees","nextNode","oidx","indexEdge","nodeIndex","moveSinksRight","kx","scaleNodeBreadths","computeNodeBreadths","keyAttr","groupResult","buckets","prepareNodesByBreadth","kyArray","ky0","nodeDy","edgeDy","initializeNodeDepth","computeNodeDepths","computeEdgeDepths","layoutSankey","markerRich","startId","endId","substr","updateMarkerLayout","markPointModel","mpModel","symbolDrawMap","symbolDraw","sizeCalculable","CalendarModel","cellSize","dayLabel","firstDay","monthLabel","yearLabel","mergeAndNormalizeLayoutParams","raw","hvIdx","echartsAPIList","chartInstance","parallelAxisModel","setActiveIntervals","intervals","Parallel","_axisTickLabelBuilder","createAxisTicks","createAxisLabels","calculateCategoryInterval","NORMALIZED_EXTENT","fixExtentWithBands","nTick","tickModel","getTickModel","tickCategoryInterval","ticksLen","last","ticksItem","fixOnBandTicksCoords","getRotate","LegendModel","_updateData","hasSelected","potentialData","availableNames","isPotential","_availableNames","borderRadius","genName","fromZero","sysDims","dimsDef","encodeDef","dataDimNameMap","coordDimNameMap","dimCount","optDimCount","sysDimItem","sysDimItemDimsDef","getDimCount","dimDefItem","userDimName","validDataDims","resultDimIdx","applyDim","availDimIdx","sysDimIndex","sysDimItemOtherDims","sysDimItemDimsDefItem","generateCoordCount","extra","pointsConverter","createGraphFromNodeEdge","GraphSeries","_categoriesData","_updateCategoriesData","categoriesModels","_categoriesModels","categoryIdx","categoryModel","edgeLabelModel","fakeSeriesModel","emphasisEdgeLabelModel","emphasisFakeSeriesModel","edgeGetParent","getEdgeData","sourceName","targetName","circular","rotateLabel","layoutAnimation","edgeSymbol","edgeSymbolSize","edgeLabel","stackResultDim","ORIGIN_METHOD","RATE","THROTTLE_TYPE","debounce","currCall","debounceNextCall","lastCall","lastExec","timer","getTime","thisDelay","thisDebounce","debounceDelay","fnAttr","originFn","lastThrottleType","markerModelKey","subTypeDefaulters","defaulter","componentTypeMain","dependencyGetter","createDependencyGraphItem","predecessor","successor","targetNameList","fullNameList","noEntryList","availableDeps","originalDeps","dep","getAvailableDependencies","entryCount","dependentName","thatItem","makeDepndencyGraph","targetNameSet","currComponentType","currVertex","isInTargetNameSet","removeEdgeAndAdd","removeEdge","succComponentType","platform","gradientColor","animationEasingUpdate","roundNumber","_intervalPrecision","thisExtent","getIntervalPrecision","intervalScaleGetTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","fetchers","fetch","roundingErrorFix","mathPow","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","fixRoundingError","__fixMax","originalVal","dataColor","radarLayout","_needCollect","needCollect","_deduplication","_map","createByAxisModel","dedplication","getOrCreateMap","colorUtil","markAreaTransform","maModel","lt","rb","ltCoord","rbCoord","markAreaFilter","getSingleMarkerEndPoint","dimPermutations","markAreaModel","areaData","areaGroupMap","polygonGroup","__data","ToolboxModel","featureName","Feature","showTitle","iconStyle","containLabel","ITEM_STYLE_NORMAL","seriesItemStyleModel","travelTree","designatedVisual","levelItemStyles","viewRootAncestors","nodeModel","nodeLayout","isInView","nodeItemStyleModel","levelItemStyle","visuals","visualName","buildVisuals","borderColorSaturation","thisNodeColor","calculateColor","calculateBorderColor","mapping","rangeVisual","getRangeVisual","visualMin","visualMax","colorMappingBy","__drColorMappingBy","buildVisualMapping","childVisual","childVisuals","mappingType","mapIdToIndex","getValueVisualDefine","markerTypeCalculatorWithExtent","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","calcDataDim","markerTypeCalculator","average","dataDimToCoordDim","baseDataDim","hasXAndY","hasXOrY","RadiusAxis","radiusToData","_viewRoot","clipWindow","squareRatio","leafDepth","drillDownIcon","zoomToNodeRatio","emptyItemWidth","upperLabel","gapWidth","visualDimension","visibleMin","childrenVisibleMin","completeTreeValue","childValue","thisValue","hasColorDefine","globalColorList","modelColor","level0","setDefault","setLayoutInfo","idIndexMap","_idIndexMap","_idIndexMapCount","mapLocation","largeLayout","unitAngle","x12","y12","adjustEdge","FOCUS_ADJACENCY","opct","_lineDraw","_firstRender","groupNewProp","_layoutTimeout","_startForceLayoutIteration","warmUp","_layouting","setFixed","setUnfixed","circularRotateLabel","adjacentEdge","seiresModelMap","__paletteScope","dataAll","filteredIdx","singleDataColor","maskColor","mask","arc","animateShape","retrieveValue","PATH_BORDER_WIDTH","PATH_GAP_WIDTH","PATH_UPPER_LABEL_SHOW","PATH_UPPER_LABEL_HEIGHT","ecWidth","ecHeight","containerWidth","containerHeight","rootRect","viewAbovePath","rootSize","currNode","defaultSize","viewArea","currNodeValue","upperHeight","getUpperLabelHeight","estimateRootSize","viewRootLayout","squarify","hideChildren","thisLayout","halfGapWidth","upperLabelHeight","layoutOffset","layoutOffsetUpper","totalArea","orderBy","overLeafDepth","statistic","orderedChildren","deletePoint","filterByThreshold","isLeafRoot","initChildren","rowFixedLength","best","score","worst","treeRoot","defaultPosition","targetCenter","calculateRootPosition","prunning","clipRect","nodeInViewAbovePath","isAboveViewRoot","childClipRect","areaMax","areaMin","squareArea","idx0WhenH","idx1WhenH","rowOtherLength","rowLen","wh1","remain","modWH","wh0","STACK_PREFIX","isOnCartesian","isInLargeMode","seriesInfoList","doCalBarWidthAndOffset","seriesInfo","valueAxisHorizontal","valueDimIdx","valuePair","getValueAxisStart","valueStart","getLayoutOnAxis","widthAndOffsets","lastStackCoordsOrigin","isValueAxisH","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","__ordinalMeta","linkedNodesFinder","effectedModels","prepareDataCoordInfo","valueOrigin","getValueStart","baseAxisDim","baseDataOffset","dataDimsForPoint","stackedOverDimension","getStackedOnPoint","dataCoordInfo","stackedData","RadarSeries","Triangle","Diamond","Pin","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","beforeBrush","inBundle","proxySymbol","symbolPathSetColor","innerColor","symbolStyle","symbolShape","__isEmptyBrush","disabled","lineContain","quadraticContain","LargeLineShape","segs","quadraticCurveTo","findDataIndex","containStroke","LargeLineDraw","largeLineProto","lineEl","_setCommon","addDisplayable","__startIndex","isIncremental","funnelLayout","getStore","take","resourceKey","userKey","release","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","msg","colorPalette","crossStyle","legend","color0","borderColor0","HIGH_DOWN_PROP","RECORD_VERSION_PROP","mapModel","_renderSymbols","originalDataIndex","fullData","mainSeries","fullIndex","highDownRecord","recordVersion","onRegionHighDown","enterRegionHighDown","toHighOrDown","__mapOriginalZ2","PointerPath","formatLabel","posInfo","parsePosition","_renderMain","angleRangeSpan","prevEndAngle","axisLineWidth","tmp","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","subSplitNumber","splitLineLen","tickLen","subStep","splitLineStyle","tickLineStyle","unitX","unitY","tickLine","valueExtent","detailModel","linesLayout","linesVisual","polygonContain","getLineSelectors","xyIndex","inLineRange","layoutRange","lineIntersectPolygon","lx","ly","l2x","l2y","lineIntersect","a1x","a1y","a2x","a2y","b1x","b1y","b2x","b2y","determinant","namenda","miu","v4","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","extraCssText","textContain","AngleAxis","angleToData","ordinalScale","ordinalExtent","unitSpan","unitH","dh","cache","lastAutoInterval","lastTickCount","percentPrecision","borderType","VISUAL_PRIORITY","resultVisual","visualMeta","concreteDim","opacityMap","itemOpacity","LargeSymbolDraw","_updateSymbolDraw","_finished","ThemeRiverSeries","fixData","rawDataLength","layData","dataList","largestLayer","timeValue","keyIndex","lenCount","indexArr","index1","index2","nestestValue","nearestIdx","theValue","htmlName","htmlValue","_updateLineDraw","isSvg","getLayer","_lastZlevel","configLayer","motionBlur","_showEffect","lastFrameAlpha","_clearLayer","hasEffect","_hasEffet","_isPolyline","DEFAULT_TOOLBOX_BTNS","isNew","brushComponents","brushComponentSpecifiedBtns","brushOpt","tbs","toolboxFeature","toolboxBrush","brushTypes","flag","brushHelper","elementList","fromAxisAreaSelect","oldAxisGroup","_axisGroup","coordSysModel","areaSelectStyle","getAreaSelectStyle","areaWidth","axisLayout","getAxisLayout","builderOpt","strokeContainThreshold","_refreshBrushController","extentLen","enableGlobalPan","panelId","makeRectPanelClipPath","isTargetByCursor","makeRectIsTargetByCursor","getLinearBrushOtherExtent","makeLinearBrushOtherExtent","removeOnClick","activeIntervals","getCoverInfoList","coverInfoList","coverInfo","parallelAxisId","clazzUtil","componentProto","splitList","Breadcrumb","animationUtil","PATH_LABEL_NOAMAL","PATH_LABEL_EMPHASIS","PATH_UPPERLABEL_NORMAL","PATH_UPPERLABEL_EMPHASIS","Z_BASE","Z_BG","Z_CONTENT","getItemStyleEmphasis","getItemStyleNormal","nodeGroup","background","_breadcrumb","_state","thisStorage","reRoot","rootNodeGroup","_giveContainerGroup","renderResult","_doRender","renderFinally","_doAnimation","_resetController","_renderBreadcrumb","thisTree","oldTree","lastsForAnimation","oldStorage","willInvisibleEls","renderNode","thisViewChildren","oldViewChildren","parentGroup","sameTree","thisNode","willDeleteEls","storageName","delEls","__tmWillDelete","clearStorage","easing","animationWrap","createWrap","__tmNodeWidth","__tmNodeHeight","targetX","targetY","old","fadein","_onPan","_onZoom","_clearController","mouseX","mouseY","findTarget","_zoomToNode","bgEl","thisWidth","thisHeight","thisInvisible","thisRawIndex","oldRawIndex","isParent","itemStyleNormalModel","itemStyleEmphasisModel","giveGraphic","bg","useUpperLabel","visualBorderColor","emphasisBorderColor","upperLabelWidth","prepareText","contentWidth","contentHeight","renderContent","__tmWillVisible","upperLabelRect","iconChar","emphasisLabelModel","truncate","outerWidth","outerHeight","minChar","lasts","prepareAnimationWhenHasOld","calculateZ","__tmDepth","__tmStorageName","lastCfg","parentOldX","parentOldY","parentOldBg","prepareAnimationWhenNoOld","zInLevel","zb","getAxisLineShape","rExtent","getRadiusIdx","fixAngleOverlap","firstItem","ticksAngles","_axisLine","_axisTick","tickAngleItem","_axisLabel","rawCategoryData","commonLabelModel","labelTextAlign","labelTextVerticalAlign","prevAngle","r1","format","_throttle","ecHelper","parseGeoJSON","_List","_Model","_Axis","_env","ecUtil","util","ariaModel","seriesCnt","ariaLabel","maxDataCnt","maxSeriesCnt","displaySeriesCnt","getTitle","getConfig","seriesLabels","seriesCount","seriesLabel","seriesTpl","displayCnt","dataLabels","keyValues","userConfig","setAreas","adjustSingleSide","shiftDown","shiftUp","changeX","isDownList","lastDeltaX","deltaY","length2","len2","deltaX","lastY","upList","downList","isPositionCenter","labelLayoutList","hasLabelRotate","labelLineLen2","x3","leftList","rightList","avoidOverlap","singleAxisHelper","SingleAxisView","selfBuilderAttr","seriesModelMixin","CandlestickSeries","defaultValueDimensions","animationUpdate","COORD_CONVERTS","INCLUDE_FINDER_MAIN_TYPES","targetInfoList","_targetInfoList","foundCpts","targetInfoBuilders","builder","formatMinMax","includeMainTypes","setOutputRanges","coordRanges","coordConvert","__rangeOffset","diffProcessor","xyMinMax","findTargetInfo","coordSyses","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","sizeOrigin","scales","rangeOffset","getDefaultBrushType","getPanelRect","defaultBrushType","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","panelRectBuilder","geoModels","axisConvert","rangeOrCoordRange","xminymin","xmaxymax","axisNameIndex","axisDiffProcessor","refer","decodePolygon","coordinate","encodeOffsets","encodeScale","prevX","prevY","json","UTF8Encoding","UTF8Scale","coordinates","c","c2","decode","featureObj","setNodePosition","pieLayout","updateController","modelId","$from","IRRELEVANT_EXCLUDES","targetCoordSysModel","topTarget","colorAll","crs","childNum","labelDims","updateRipplePath","rippleGroup","effectCfg","ripplePath","effectSymbolProto","stopEffectAnimation","startEffectAnimation","effectOffset","rippleScale","animateStyle","updateEffectAnimation","oldEffectCfg","_effectCfg","DIFFICULT_PROPS","_parseSVG","parseSVG","makeViewBoxTransform","originRoot","buildGraphic","field","rootMap","originRootHostKey","svgXML","ignoreViewBox","ignoreRootClip","svgWidth","svgHeight","viewBoxRect","viewBoxTransform","elRoot","LargeSymbolPath","symbolProxy","symbolProxyShape","getContext","afterBrush","setTransform","fillRect","restoreTransform","largeSymbolProto","endIndex","byteOffset","extrudeShadow","_traversalHelper","_layoutHelper","sep","coorX","coorY","finalCoor","commonLayout","QUERY_REG","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","applyMediaQuery","realMap","aspectratio","applicatable","matched","operator","realAttr","real","expect","compare","oldOption","oldOptionBackup","newParsedOption","mediaDefault","timelineOptions","mediaList","media","singleMedia","preProcess","newCptOpt","oldCptOpt","isRecreate","optionBackup","indices1","indices2","rootDepth","isAsc","sortOrder","renderRollupNode","rPerLevel","rStart","rEnd","siblingAngle","axisTrigger","collect","realIndex","paramsSet","reals","fakeValue","layoutInput","rParam","Cartesian","getAxesByScale","axisX","axisY","xScale","yScale","xAxisExtent","yAxisExtent","_dimName","_axisIndex","_valueWindow","_percentWindow","_dataExtent","_minMaxSpan","_dataZoomModel","setAxisModel","isRestore","percentWindow","useOrigin","getOtherAxisModel","coordSysIndexName","foundOtherAxisModel","otherAxisModel","boundValue","boundPercent","seriesExtent","isCategoryAxis","fixExtentByAxis","calculateDataExtent","dataWindow","valueSpan","setMinMaxSpan","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","isInWindow","originalLarge","originalProgressive","checkPropInLink","linkPropValue","axisPropValue","axesInfo","makeKey","isHandleTrigger","seriesInvolved","coordSysMap","globalAxisPointerModel","linksOption","linkGroups","coordSysKey","axesInfoInCoordSys","baseTooltipModel","saveTooltipAxisInfo","triggerAxis","cross","tooltipAxes","fromTooltip","axisPointerShow","tooltipAxisPointerModel","volatileOption","labelOption","tooltipAxisPointerLabelShow","makeAxisPointerModel","involveSeries","groupIndex","linkOption","getLinkGroupIndex","linkGroup","mapper","collectAxesInfo","seriesTooltipTrigger","seriesTooltipShow","seriesDataCount","collectSeriesInfo","Heatmap","_gradientPixels","colorFunc","_getBrush","gradientInRange","_getGradient","gradientOutOfRange","globalAlpha","drawImage","imageData","getImageData","pixels","pixelLen","diffOpacity","gradientOffset","gradient","putImageData","brushCanvas","_brushCanvas","clearRect","beginPath","gradientPixels","pixelsSingleState","Uint8ClampedArray","processedMapType","mapSymbolOffsets","subMapSeries","dimAxisMapper","_axes","_dimList","_dataCoordConvert","input","dimList","SankeySeries","localPosition","rawDataOpt","layoutIterations","makeAction","Calendar","calendarModel","_rangeInfo","_sw","_sh","getFirstDayOfWeek","_firstDayOfWeek","getDateInfo","day","getDay","formatedDate","getNextNDay","setDate","_lineWidth","_getRangeInfo","_initRangeOption","whNames","cellNumbers","cellSizeSpecified","whGlobal","calendarRect","dayInfo","week","nthWeek","pointToDate","tl","tr","br","bl","nthX","nthY","_getDateByWeeksAndDay","setMonth","reversed","startDateNum","endDateNum","fweek","lweek","nthDay","calendarList","calendarSeries","calculateStack","stackInfoList","targetStackInfo","idxInStack","resultVal","resultNaN","stackResultDimension","targetData","isStackedByIndex","v0","byValue","stackedDataRawIndex","stackedDimension","stackedByDimension","stackedOver","stackInfo","stackInfoMap","legendFilter","_simpleLayoutHelper","magicTypeLang","MagicType","getIcons","availableIcons","icons","seriesOptGenreator","radioTypes","radio","newSeriesOpt","currentType","AxisPointerView","fixClipWithShadow","vec2Min","vec2Max","v2Copy","cp0","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","prevP","ctrlLen","nextP","ratioNextSeg","lenPrevSeg","lenNextSeg","getBoundingBox","ptMin","ptMax","stackedOnBBox","PictorialBarSeries","sunburstLayout","previousZoom","fixX","fixY","_axesLayout","restrict","_updateAxesFromSeries","_makeLayoutInfo","axisBase","layoutBase","pixelDimIndex","pAxis","pLayout","layoutLength","_layoutAxes","winSize","layoutExtent","axisCount","axisExpandWindow","axisCollapseWidth","winInnerIndices","axisExpandWindow0Pos","nameTruncateMaxWidth","axisNameAvailableWidth","axisLabelShow","positionTable","rotationTable","axisCoordToPoint","dataDimensions","hasActiveSet","lenj","getActiveState","getSlidedAxisExpandWindow","behavior","pointCoord","triggerArea","useJump","PolarAxisModel","polarId","polarAxisDefaultExtendedOption","treemapVisual","treemapLayout","listComponentHelper","toolboxModel","featureOpts","_features","featureNames","_featureNames","processFeature","titleText","__title","makeFont","needPutOnTop","topOffset","oldName","isUserFeatureName","iconStyleModel","iconStyleEmphasisModel","titles","iconPaths","iconName","createIconPaths","iconStatus","moveAnimation","propsEqual","lastProps","newProps","equals","lastProp","updateLabelShowHide","labelEl","getHandleTransProps","updateMandatoryProps","_group","_lastGraphicKey","_handle","_lastValue","_lastStatus","_payloadInfo","_axisModel","_axisPointerModel","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","useSnap","pointerEl","handleModel","onmousedown","_onHandleDragMove","_onHandleDragEnd","_moveHandleToValue","_doDispatchAxisPointer","payloadInfo","doClear","buildLabel","xDimIndex","BoxplotView","constDim","updateNormalBoxData","BoxPath","TimelineModel","SliderTimelineModel","checkpointStyle","playIcon","stopIcon","nextIcon","prevIcon","colorQuery","opacityQuery","restoreLang","Restore","prepareCartesian2d","prepareGeo","prepareSingleAxis","preparePolar","prepareCalendar","ITEM_STYLE_NORMAL_PATH","ITEM_STYLE_EMPHASIS_PATH","LABEL_NORMAL","LABEL_EMPHASIS","GROUP_DIFF_PREFIX","prepareCustoms","prepareStyleTransition","oldElStyle","makeRenderItem","customSeries","renderItem","prepareResult","currDataIndexInside","currItemModel","currLabelNormalModel","currLabelEmphasisModel","currVisualColor","userAPI","updateCache","styleEmphasis","barLayout","currentSeriesIndices","userParams","dataInsideLength","wrapEncodeDef","currDirty","doCreateOrUpdate","isRoot","simplyRemove","elOptionType","elOptionShape","__customGraphicType","getPathData","__customPathData","hasOwn","__customImagePath","__customText","pathRect","transitionProps","targetOpacity","disableStyleEmphasis","__cusHasEmphStl","updateEl","newLen","mergeChildren","$mergeChildren","byName","diffChildrenByName","processAddUpdate","processRemove","childOption","useTransform","setIncrementalAndHoverLayer","elementName","makeCategoryLabelsActually","numericLabelInterval","labelsCache","getListCache","optionLabelInterval","listCacheGet","makeLabelsByCustomizedCategoryInterval","autoInterval","makeAutoCategoryInterval","makeLabelsByNumericCategoryInterval","listCacheSet","labelCategoryInterval","categoryInterval","onlyTick","startTick","showAllLabel","includeMinLabel","includeMaxLabel","addItem","tVal","rawLabel","makeCategoryLabels","makeRealNumberLabels","ticksCache","optionTickInterval","labelsResult","makeCategoryTicks","axisRotate","fetchAutoCategoryIntervalCalculationParams","unitW","maxW","maxH","dw","DUMMY_COMPONENT_NAME_PREFIX","cptOption","innerUniqueIndex","subOpts","subOptName","newCptOptions","idMap","existCpt","idNum","batchA","batchB","mapA","mapB","makeMap","mapToArray","sourceBatch","otherMap","otherDataIndices","isData","hostObj","parsedKey","queryType","queryParam","domSupported","_setting","_isBlank","_baseAxisDim","addOrdinal","xAxisType","yAxisType","baseAxisDimIndex","baseAxisType","otherAxisType","newOptionData","newItem","colorIdx","colorNameMap","scopeFields","defaultColorPalette","layeredColorPalette","colors","paletteNum","getNearestColorPalette","doneCallback","elExistsMap","fixPosition","renderPlanner","Chart","renderTaskPlan","renderTaskReset","toggleHighlight","chartProto","elSetState","childCount","progressMethodMap","forceFirstProgress","seriesItem","replacableOptionKeys","dataBound","contentColor","getTargetSeriesIndices","optionSeriesIndex","isMinMax","optDim","listDimensions","isCalculationCoord","completeSingle","defa","stateExist","stateAbsent","optExist","optAbsent","symbolExists","symbolSizeExists","modelHelper","processOnAxis","newValue","updaters","dontSnap","outputFinder","snapToValue","payloadBatch","seriesNestestValue","buildPayloadsBySeries","showPointer","showTooltip","showValueMap","coordSysItem","coordSysId","coordSysIndex","coordSysMainType","makeMapperParam","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","outputAxesInfo","valItem","updateModelActually","dispatchTooltipActually","lastHighlights","newHighlights","toHighlight","toDownplay","dispatchHighDownActually","setScrollDataIndex","parseXML","rawGeoJson","rawSpecialAreas","parsers","JSON","Function","axisList","groupSeriesByAxis","groupItem","boxWidthList","boxOffsetList","boundList","maxDataCount","boxWidthBound","availableWidth","boxGap","boxWidth","calculateBase","halfWidth","median","end1","end2","end4","end5","layEndLine","endCenter","layoutSingleSeries","replaceReg","replaceMap","&","<",">","\"","'","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","pad","truncateText","upperCaseFirst","group1","paramsList","seriesLen","alias","formatTplSimple","isUTC","utc","M","S","getTextBoundingRect","autoPlay","rewind","playInterval","_names","_initData","dataArr","idxArr","positionMap","stackedDim","stackedByDimInfo","stackedDimInfo","byIndex","stackedCoordDimension","mayStack","stackedDimCoordDim","stackedDimType","stackedDimCoordIndex","targetDim","MONTH_TEXT","EN","CN","WEEK_TEXT","_tlpoints","_blpoints","_firstDayOfMonth","_firstDayPoints","rangeData","_renderDayRect","_renderLines","_renderYearText","_renderMonthText","_renderWeekText","itemRectStyleModel","sw","sh","addPoints","_getLinePointsOfOneWeek","_drawSplitline","_getEdgesPoints","rs","poyline","tmpD","_formatterLabel","_yearTextPositionControl","aligns","xc","yc","posPoints","yearText","_monthTextPositionControl","isCenter","termPoints","firstDayPoints","yyyy","yy","MM","monthText","_weekTextPositionControl","isStart","firstDayOfWeek","weekText","resizeGeo","leftTop","rightBottom","boxLayoutOption","useCenterAndSize","setGeoCoords","geoList","mapModelGroupBySeries","nameMapList","singleMapSeries","originRegionArr","regionsArr","pp","friction","v12","nLen","repFact","getSpanSign","extentSpan","originalDistSign","extentMinSpan","realExtent","currDistSign","dataSample","treeLayout","_helper","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","diffResult","cmd","idx1","diffData","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","newDataOldCoordInfo","oldDataNewCoordInfo","diffItem","pointAdded","currentPt","nextPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","stackedOnCurrent","stackedOnNext","SingleAxisPointer","getPointDimIndex","ScrollableLegendModel","pageButtonItemGap","pageButtonPosition","pageIcons","pageIconColor","pageIconInactiveColor","pageTextStyle","lineAnimationDiff","_poly","isPointsSame","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","createClipShape","forSymbol","createPolarClipShape","xExtent","yExtent","turnPointsIntoStep","stepTurnAt","stepPoints","stepPt","stepPt2","getIsIgnoreFunc","isAuto","availSize","canShowAllSymbolForCategory","categoryDataDim","labelMap","lineGroup","_lineGroup","isCoordSysPolar","prevCoordSys","_coordSys","_polyline","_polygon","isAreaChart","getStackedOnPoints","isIgnoreFunc","__temp","_step","_newPolygon","isIgnore","_stackedOnPoints","_updateAnimation","_newPolyline","stopLen","minCoord","maxCoord","coordSpan","getVisualGradient","stackedOnSeries","_valueOrigin","__points","updatedDataInfo","diffStatus","ptIdx","animators","CartesianAxisView","_splitAreaColors","areaColorsLen","lastSplitAreaColors","newSplitAreaColors","cIndex","prev","MAX_NUMBER","loopGeo","newRegion","parallelPreprocessor","_handlers","_throttledDispatchExpand","_dispatchExpand","checkTrigger","_mouseDownPoint","mouseDownPoint","DEFAULT_OUT_OF_BRUSH_COLOR","generateBrushOption","brushMode","transformable","inBrush","outOfBrush","Task","define","_reset","_plan","_onDirty","_dirty","taskProto","planResult","upTask","_upstream","lastModBy","normalizeModBy","_modBy","lastModDataCount","_modDataCount","taskIns","_dueIndex","_outputDueEnd","_dueEnd","_settedOutputEnd","_progress","downstream","_downstream","doProgress","outputDueEnd","iterator","winCount","it","sStep","sCount","modNext","sequentialNext","_callingProgress","downTask","normalizeRect","localPoints","specifiedXYIndex","brushWidth","targetModel","localCursorPoint","ARRAY_LENGTH","makeItemPoints","packEventData","itemNode","selfType","onSelect","normalStyleModel","layoutParam","totalWidth","renderList","_prepare","_renderContent","TEXT_PADDING","lastX","availableSize","getAvailableSize","seriesGroups","hostGeoModel","seriesList","statisticType","mapKey","symbolCtor","_symbolCtor","symbolDrawProto","normalizeUpdateOpt","SymbolCtor","enableAnimation","PieSeries","_createSelectableList","hoverOffset","avoidLabelOverlap","HV_NAMES","boxLayout","maxHeight","currentLineMaxSize","nextX","nextY","nextChild","nextChildRect","moveX","moveY","vbox","hbox","containerRect","verticalMargin","horizontalMargin","needLocalTransform","elPos","targetOption","hResult","vResult","newParams","newValueCount","merged","mergedValueCount","hasProp","boxplotVisual","boxplotLayout","matrixUtil","makeAxisEventDataBase","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","pt1","pt2","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","axisTickLabel","tickEls","tickEl","buildAxisTick","labelEls","isSilent","itemLabelModel","targetType","buildAxisLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","fixMinMaxLabelShow","gapSignal","isNameLocationCenter","nameRotation","textRotate","rotationDiff","onLeft","endTextLayout","truncateOpt","truncatedText","__fullText","__truncatedText","axisRotation","firstRect","nextRect","mRotationBack","compatStyle","compatLayoutProperties","LAYOUT_PROPERTIES","COMPATITABLE_COMPONENTS","clockWise","pointerColor","overwrite","dataRange","componentName","COVER_Z","UNSELECT_THRESHOLD","MIN_RESIZE_LINE_WIDTH","MUTEX_RESOURCE_KEY","DIRECTION_MAP","CURSOR_MAP","ne","nw","se","DEFAULT_BRUSH_OPT","baseUID","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","mouseHandlers","createCover","cover","coverRenderers","__brushOption","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","updateCoverAfterCreation","getPanelByPoint","panel","panels","pn","getPanelByCover","clearCovers","covers","originalLength","getTrackEnds","track","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","mainEl","globalDir","getGlobalDirection","localDirection","xmin","ymin","xmax","ymax","clipByPanel","formatRectRange","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","driftPolygon","localD","localZero","preventDefault","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","shouldShowCover","determineBrushType","getCreatingRange","doEnableBrush","panelOpts","eachCover","brushOptionList","tmpIdPrefix","oldCovers","newCovers","addOrUpdate","newBrushOption","handleDragEnd","currPanel","setCursorStyle","resetCursor","getLineRenderer","localTrack","_radiusAxis","_angleAxis","maxAngle","Gradient","colorAccessPath","samplers","nearest","indexSampler","sampler","PATH_COLOR","BoxplotSeries","brushLang","Brush","_brushMode","isBrushed","command","paddings","confineInContainer","bgColor","styleModel"],"mappings":"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","file":"js/echarts.1299acf2.js","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.color',\n  getInitialData: function (option, ecModel) {\n    var source = this.getSource();\n    setEncodeAndDimensions(source, this);\n    return createListFromArray(source, this);\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function (activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      show: false\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      width: 1,\n      opacity: 0.45,\n      type: 'solid'\n    },\n    emphasis: {\n      label: {\n        show: false\n      }\n    },\n    progressive: 500,\n    smooth: false,\n    // true | false | number\n    animationEasing: 'linear'\n  }\n});\n\nfunction setEncodeAndDimensions(source, seriesModel) {\n  // The mapping of parallelAxis dimension to data dimension can\n  // be specified in parallelAxis.option.dim. For example, if\n  // parallelAxis.option.dim is 'dim3', it mapping to the third\n  // dimension of data. But `data.encode` has higher priority.\n  // Moreover, parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  if (source.encodeDefine) {\n    return;\n  }\n\n  var parallelModel = seriesModel.ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n\n  if (!parallelModel) {\n    return;\n  }\n\n  var encodeDefine = source.encodeDefine = createHashMap();\n  each(parallelModel.dimensions, function (axisDim) {\n    var dataDimIndex = convertDimNameToNumber(axisDim);\n    encodeDefine.set(axisDim, dataDimIndex);\n  });\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PiecewiseVisualMapView = VisualMapView.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n\n    function renderItem(item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            textVerticalAlign: 'middle',\n            textAlign: itemAlign,\n            textFont: textFont,\n            textFill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLink: function (itemGroup, pieceIndex) {\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n    function onHoverLink(method) {\n      var visualMapModel = this.visualMapModel;\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\n        type: method,\n        batch: helper.convertDataIndex(visualMapModel.findTargetDataIndices(pieceIndex))\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getItemAlign: function () {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        textVerticalAlign: 'middle',\n        textAlign: showLabel ? itemAlign : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  },\n\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n  _getViewData: function () {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  },\n\n  /**\n   * @private\n   */\n  _createItemSymbol: function (group, representValue, shapeParam) {\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\n  },\n\n  /**\n   * @private\n   */\n  _onItemClick: function (piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  }\n});\nvar _default = PiecewiseVisualMapView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var valueDim = data.mapDimension('value');\n    var sum = data.getSum(valueDim); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get(valueDim, dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      show: true,\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    labelLine: {\n      show: true,\n      length: 20,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      // color: 各异,\n      borderColor: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      zoom: coordSys.getZoom()\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" and noRoam param,\n        // Compatible with this usage:\n        // echarts.util.map(item.points, api.coord)\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar View = require(\"../View\");\n\nvar geoSourceManager = require(\"./geoSourceManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Geo description]\n * For backward compatibility, the orginal interface:\n * `name, map, geoJson, specialAreas, nameMap` is kept.\n *\n * @param {string|Object} name\n * @param {string} map Map type\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n * @param {boolean} [invertLongitute=true]\n */\nfunction Geo(name, map, nameMap, invertLongitute) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  var source = geoSourceManager.load(map, nameMap);\n  this._nameCoordMap = source.nameCoordMap;\n  this._regionsMap = source.regionsMap;\n  this._invertLongitute = invertLongitute == null ? true : invertLongitute;\n  /**\n   * @readOnly\n   */\n\n  this.regions = source.regions;\n  /**\n   * @type {module:zrender/src/core/BoundingRect}\n   */\n\n  this._rect = source.boundingRect;\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @override\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var invertLongitute = this._invertLongitute;\n    rect = rect.clone();\n\n    if (invertLongitute) {\n      // Longitute is inverted\n      rect.y = -rect.y - rect.height;\n    }\n\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n\n    if (invertLongitute) {\n      var scale = rawTransformable.scale;\n      scale[1] = -scale[1];\n    }\n\n    rawTransformable.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n\n  /**\n   * @override\n   */\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  },\n\n  /**\n   * @override\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @override\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx.onZero] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx.onZero] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar ComponentView = require(\"../view/Component\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\n\nvar _sourceType = require(\"../data/helper/sourceType\");\n\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * This module is imported by echarts directly.\n *\n * Notice:\n * Always keep this file exists for backward compatibility.\n * Because before 4.1.0, dataset is an optional component,\n * some users may import this module manually.\n */\nComponentModel.extend({\n  type: 'dataset',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // 'row', 'column'\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\n    sourceHeader: null,\n    dimensions: null,\n    source: null\n  },\n  optionUpdated: function () {\n    detectSourceFormat(this);\n  }\n});\nComponentView.extend({\n  type: 'dataset'\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar linkList = require(\"./helper/linkList\");\n\nvar List = require(\"./List\");\n\nvar createDimensions = require(\"./helper/createDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Tree data structure\n *\n * @module echarts/data/Tree\n */\n\n/**\n * @constructor module:echarts/data/Tree~TreeNode\n * @param {string} name\n * @param {module:echarts/data/Tree} hostTree\n */\nvar TreeNode = function (name, hostTree) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * Depth of node\n   *\n   * @type {number}\n   * @readOnly\n   */\n\n  this.depth = 0;\n  /**\n   * Height of the subtree rooted at this node.\n   * @type {number}\n   * @readOnly\n   */\n\n  this.height = 0;\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n\n  this.parentNode = null;\n  /**\n   * Reference to list item.\n   * Do not persistent dataIndex outside,\n   * besause it may be changed by list.\n   * If dataIndex -1,\n   * this node is logical deleted (filtered) in list.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.dataIndex = -1;\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @readOnly\n   */\n\n  this.children = [];\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @pubilc\n   */\n\n  this.viewChildren = [];\n  /**\n   * @type {moduel:echarts/data/Tree}\n   * @readOnly\n   */\n\n  this.hostTree = hostTree;\n};\n\nTreeNode.prototype = {\n  constructor: TreeNode,\n\n  /**\n   * The node is removed.\n   * @return {boolean} is removed.\n   */\n  isRemoved: function () {\n    return this.dataIndex < 0;\n  },\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb If in preorder and return false,\n   *                      its subtree will not be visited.\n   * @param {Object} [context]\n   */\n  eachNode: function (options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  },\n\n  /**\n   * Update depth and height of this subtree.\n   *\n   * @param  {number} depth\n   */\n  updateDepthAndHeight: function (depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  },\n\n  /**\n   * @param  {string} id\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeById: function (id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~TreeNode} node\n   * @return {boolean}\n   */\n  contains: function (node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {boolean} includeSelf Default false.\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\n   */\n  getAncestors: function (includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  },\n\n  /**\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\n   * @return {number} Value.\n   */\n  getValue: function (dimension) {\n    var data = this.hostTree.data;\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n  },\n\n  /**\n   * @param {Object} layout\n   * @param {boolean=} [merge=false]\n   */\n  setLayout: function (layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  },\n\n  /**\n   * @return {Object} layout\n   */\n  getLayout: function () {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    var levelModel = this.getLevelModel();\n    var leavesModel;\n\n    if (!levelModel && (this.children.length === 0 || this.children.length !== 0 && this.isExpand === false)) {\n      leavesModel = this.getLeavesModel();\n    }\n\n    return itemModel.getModel(path, (levelModel || leavesModel || hostTree.hostModel).getModel(path));\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLevelModel: function () {\n    return (this.hostTree.levelModels || [])[this.depth];\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLeavesModel: function () {\n    return this.hostTree.leavesModel;\n  },\n\n  /**\n   * @example\n   *  setItemVisual('color', color);\n   *  setItemVisual({\n   *      'color': color\n   *  });\n   */\n  setVisual: function (key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  },\n\n  /**\n   * Get item visual\n   */\n  getVisual: function (key, ignoreParent) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\n  },\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getRawIndex: function () {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  },\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getId: function () {\n    return this.hostTree.data.getId(this.dataIndex);\n  },\n\n  /**\n   * if this is an ancestor of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is ancestor\n   */\n  isAncestorOf: function (node) {\n    var parent = node.parentNode;\n\n    while (parent) {\n      if (parent === this) {\n        return true;\n      }\n\n      parent = parent.parentNode;\n    }\n\n    return false;\n  },\n\n  /**\n   * if this is an descendant of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is descendant\n   */\n  isDescendantOf: function (node) {\n    return node !== this && node.isAncestorOf(this);\n  }\n};\n/**\n * @constructor\n * @alias module:echarts/data/Tree\n * @param {module:echarts/model/Model} hostModel\n * @param {Array.<Object>} levelOptions\n * @param {Object} leavesOption\n */\n\nfunction Tree(hostModel, levelOptions, leavesOption) {\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n  this.root;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * Index of each item is the same as the raw index of coresponding list item.\n   * @private\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\n   */\n\n  this._nodes = [];\n  /**\n   * @private\n   * @readOnly\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @private\n   * @readOnly\n   * @type {Array.<module:echarts/model/Model}\n   */\n\n  this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\n    return new Model(levelDefine, hostModel, hostModel.ecModel);\n  });\n  this.leavesModel = new Model(leavesOption || {}, hostModel, hostModel.ecModel);\n}\n\nTree.prototype = {\n  constructor: Tree,\n  type: 'tree',\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb\n   * @param {Object}   [context]\n   */\n  eachNode: function (options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  },\n\n  /**\n   * @param {number} dataIndex\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByDataIndex: function (dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByName: function (name) {\n    return this.root.getNodeByName(name);\n  },\n\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n  update: function () {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  },\n\n  /**\n   * Clear all layouts\n   */\n  clearLayouts: function () {\n    this.data.clearItemLayouts();\n  }\n};\n/**\n * data node format:\n * {\n *     name: ...\n *     value: ...\n *     children: [\n *         {\n *             name: ...\n *             value: ...\n *             children: ...\n *         },\n *         ...\n *     ]\n * }\n *\n * @static\n * @param {Object} dataRoot Root node.\n * @param {module:echarts/model/Model} hostModel\n * @param {Object} treeOptions\n * @param {Array.<Object>} treeOptions.levels\n * @param {Array.<Object>} treeOptions.leaves\n * @return module:echarts/data/Tree\n */\n\nTree.createTree = function (dataRoot, hostModel, treeOptions) {\n  var tree = new Tree(hostModel, treeOptions.levels, treeOptions.leaves);\n  var listData = [];\n  var dimMax = 1;\n  buildHierarchy(dataRoot);\n\n  function buildHierarchy(dataNode, parentNode) {\n    var value = dataNode.value;\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n    listData.push(dataNode);\n    var node = new TreeNode(dataNode.name, tree);\n    parentNode ? addChild(node, parentNode) : tree.root = node;\n\n    tree._nodes.push(node);\n\n    var children = dataNode.children;\n\n    if (children) {\n      for (var i = 0; i < children.length; i++) {\n        buildHierarchy(children[i], node);\n      }\n    }\n  }\n\n  tree.root.updateDepthAndHeight(0);\n  var dimensionsInfo = createDimensions(listData, {\n    coordDimensions: ['value'],\n    dimensionsCount: dimMax\n  });\n  var list = new List(dimensionsInfo, hostModel);\n  list.initData(listData);\n  linkList({\n    mainData: list,\n    struct: tree,\n    structAttr: 'tree'\n  });\n  tree.update();\n  return tree;\n};\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n *\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nvar _default = Tree;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar _number = require(\"../../util/number\");\n\nvar reformIntervals = _number.reformIntervals;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function (newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function (piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function () {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function () {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function (value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function (piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function (getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n    var index = 0;\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        index: index++,\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function () {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none'; // If mouse occsionally move over the tooltip, a mouseout event will be\n    // triggered by canvas, and cuase some unexpectable result like dragging\n    // stop, \"unfocusAdjacency\". Here `pointer-events: none` is used to solve\n    // it. Although it is not suppored by IE8~IE10, fortunately it is a rare\n    // scenario.\n\n    el.style.pointerEvents = this._enterable ? 'auto' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  },\n  getOuterSize: function () {\n    var width = this.el.clientWidth;\n    var height = this.el.clientHeight; // Consider browser compatibility.\n    // IE8 does not support getComputedStyle.\n\n    if (document.defaultView && document.defaultView.getComputedStyle) {\n      var stl = document.defaultView.getComputedStyle(this.el);\n\n      if (stl) {\n        width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n        height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n      }\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./gauge/GaugeSeries\");\n\nrequire(\"./gauge/GaugeView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"../component/parallel\");\n\nrequire(\"./parallel/ParallelSeries\");\n\nrequire(\"./parallel/ParallelView\");\n\nvar parallelVisual = require(\"./parallel/parallelVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(parallelVisual);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./candlestick/CandlestickSeries\");\n\nrequire(\"./candlestick/CandlestickView\");\n\nvar preprocessor = require(\"./candlestick/preprocessor\");\n\nvar candlestickVisual = require(\"./candlestick/candlestickVisual\");\n\nvar candlestickLayout = require(\"./candlestick/candlestickLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(preprocessor);\necharts.registerVisual(candlestickVisual);\necharts.registerLayout(candlestickLayout);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../../coord/Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @override\n   */\n  getLabelModel: function () {\n    return this.model.getModel('label');\n  },\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.model.get('orient') === 'horizontal';\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\n\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar retrieve2 = _util.retrieve2;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var cDimIdx = 0;\n    var vDimIdx = 1;\n    var coordDims = ['x', 'y'];\n    var cDim = data.mapDimension(coordDims[cDimIdx]);\n    var vDims = data.mapDimension(coordDims[vDimIdx], true);\n    var openDim = vDims[0];\n    var closeDim = vDims[1];\n    var lowestDim = vDims[2];\n    var highestDim = vDims[3];\n    data.setLayout({\n      candleWidth: candleWidth,\n      // The value is experimented visually.\n      isSimpleBox: candleWidth <= 1.3\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    return {\n      progress: seriesModel.pipelineContext.large ? largeProgress : normalProgress\n    };\n\n    function normalProgress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = data.get(cDim, dataIndex);\n        var openVal = data.get(openDim, dataIndex);\n        var closeVal = data.get(closeDim, dataIndex);\n        var lowestVal = data.get(lowestDim, dataIndex);\n        var highestVal = data.get(highestDim, dataIndex);\n        var ocLow = Math.min(openVal, closeVal);\n        var ocHigh = Math.max(openVal, closeVal);\n        var ocLowPoint = getPoint(ocLow, axisDimVal);\n        var ocHighPoint = getPoint(ocHigh, axisDimVal);\n        var lowestPoint = getPoint(lowestVal, axisDimVal);\n        var highestPoint = getPoint(highestVal, axisDimVal);\n        var ends = [];\n        addBodyEnd(ends, ocHighPoint, 0);\n        addBodyEnd(ends, ocLowPoint, 1);\n        ends.push(subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint), subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint));\n        data.setItemLayout(dataIndex, {\n          sign: getSign(data, dataIndex, openVal, closeVal, closeDim),\n          initBaseline: openVal > closeVal ? ocHighPoint[vDimIdx] : ocLowPoint[vDimIdx],\n          // open point.\n          ends: ends,\n          brushRect: makeBrushRect(lowestVal, highestVal, axisDimVal)\n        });\n      }\n\n      function getPoint(val, axisDimVal) {\n        var p = [];\n        p[cDimIdx] = axisDimVal;\n        p[vDimIdx] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(ends, point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[cDimIdx] = subPixelOptimize(point1[cDimIdx] + candleWidth / 2, 1, false);\n        point2[cDimIdx] = subPixelOptimize(point2[cDimIdx] - candleWidth / 2, 1, true);\n        start ? ends.push(point1, point2) : ends.push(point2, point1);\n      }\n\n      function makeBrushRect(lowestVal, highestVal, axisDimVal) {\n        var pmin = getPoint(lowestVal, axisDimVal);\n        var pmax = getPoint(highestVal, axisDimVal);\n        pmin[cDimIdx] -= candleWidth / 2;\n        pmax[cDimIdx] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: vDimIdx ? candleWidth : pmax[0] - pmin[0],\n          height: vDimIdx ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[cDimIdx] = subPixelOptimize(point[cDimIdx], 1);\n        return point;\n      }\n    }\n\n    function largeProgress(params, data) {\n      // Structure: [sign, x, yhigh, ylow, sign, x, yhigh, ylow, ...]\n      var points = new LargeArr(params.count * 5);\n      var offset = 0;\n      var point;\n      var tmpIn = [];\n      var tmpOut = [];\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = data.get(cDim, dataIndex);\n        var openVal = data.get(openDim, dataIndex);\n        var closeVal = data.get(closeDim, dataIndex);\n        var lowestVal = data.get(lowestDim, dataIndex);\n        var highestVal = data.get(highestDim, dataIndex);\n\n        if (isNaN(axisDimVal) || isNaN(lowestVal) || isNaN(highestVal)) {\n          points[offset++] = NaN;\n          offset += 4;\n          continue;\n        }\n\n        points[offset++] = getSign(data, dataIndex, openVal, closeVal, closeDim);\n        tmpIn[cDimIdx] = axisDimVal;\n        tmpIn[vDimIdx] = lowestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[0] : NaN;\n        points[offset++] = point ? point[1] : NaN;\n        tmpIn[vDimIdx] = highestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[1] : NaN;\n      }\n\n      data.setLayout('largePoints', points);\n    }\n  }\n};\n\nfunction getSign(data, dataIndex, openVal, closeVal, closeDim) {\n  var sign;\n\n  if (openVal > closeVal) {\n    sign = -1;\n  } else if (openVal < closeVal) {\n    sign = 1;\n  } else {\n    sign = dataIndex > 0 // If close === open, compare with close of last record\n    ? data.get(closeDim, dataIndex - 1) <= closeVal ? 1 : -1 : // No record of previous, set to be positive\n    1;\n  }\n\n  return sign;\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SliderZoomModel\");\n\nrequire(\"./dataZoom/SliderZoomView\");\n\nrequire(\"./dataZoom/InsideZoomModel\");\n\nrequire(\"./dataZoom/InsideZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./legend\");\n\nrequire(\"./legend/ScrollableLegendModel\");\n\nrequire(\"./legend/ScrollableLegendView\");\n\nrequire(\"./legend/scrollableLegendAction\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"./RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar geoSourceManager = require(\"../../coord/geo/geoSourceManager\");\n\nvar _component = require(\"../../util/component\");\n\nvar getUID = _component.getUID;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, regionsGroup, api, fromView) {\n  regionsGroup.off('click');\n  regionsGroup.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    regionsGroup.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    regionsGroup.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, regionsGroup);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, regionsGroup) {\n  // FIXME\n  regionsGroup.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {string}\n   * @private\n   */\n\n  this.uid = getUID('ec_map_draw');\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n  /**\n   * @type {string}\n   */\n\n  this._mapName;\n  /**\n   * @type {boolean}\n   */\n\n  this._initialized;\n  /**\n   * @type {module:zrender/container/Group}\n   */\n\n  group.add(this._regionsGroup = new graphic.Group());\n  /**\n   * @type {module:zrender/container/Group}\n   */\n\n  group.add(this._backgroundGroup = new graphic.Group());\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n\n    this._updateBackground(geo);\n\n    var regionsGroup = this._regionsGroup;\n    var group = this.group;\n    var scale = geo.scale;\n    var transform = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!regionsGroup.childAt(0) || payload) {\n      group.attr(transform);\n    } else {\n      graphic.updateProps(group, transform, mapOrGeoModel);\n    }\n\n    regionsGroup.removeAll();\n    var itemStyleAccessPath = ['itemStyle'];\n    var hoverItemStyleAccessPath = ['emphasis', 'itemStyle'];\n    var labelAccessPath = ['label'];\n    var hoverLabelAccessPath = ['emphasis', 'label'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          // FIXME\n          // label rotation is not support yet in geo or regions of series-map\n          // that has no data. The rotation will be effected by this `scale`.\n          // So needed to change to RectText?\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          componentIndex: mapOrGeoModel.componentIndex,\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      graphic.setHoverStyle(regionGroup, hoverItemStyle, {\n        hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')\n      });\n      regionsGroup.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, regionsGroup, api, fromView);\n    updateMapSelected(mapOrGeoModel, regionsGroup);\n  },\n  remove: function () {\n    this._regionsGroup.removeAll();\n\n    this._backgroundGroup.removeAll();\n\n    this._controller.dispose();\n\n    this._mapName && geoSourceManager.removeGraphic(this._mapName, this.uid);\n    this._mapName = null;\n    this._controllerHost = {};\n  },\n  _updateBackground: function (geo) {\n    var mapName = geo.map;\n\n    if (this._mapName !== mapName) {\n      zrUtil.each(geoSourceManager.makeGraphic(mapName, this.uid), function (root) {\n        this._backgroundGroup.add(root);\n      }, this);\n    }\n\n    this._mapName = mapName;\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: e.dx,\n        dy: e.dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      }));\n\n      if (this._updateGroup) {\n        var scale = this.group.scale;\n\n        this._regionsGroup.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual encoding for sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n\n    if (nodes.length) {\n      var minValue = Infinity;\n      var maxValue = -Infinity;\n      zrUtil.each(nodes, function (node) {\n        var nodeValue = node.getLayout().value;\n\n        if (nodeValue < minValue) {\n          minValue = nodeValue;\n        }\n\n        if (nodeValue > maxValue) {\n          maxValue = nodeValue;\n        }\n      });\n      zrUtil.each(nodes, function (node) {\n        var mapping = new VisualMapping({\n          type: 'color',\n          mappingMethod: 'linear',\n          dataExtent: [minValue, maxValue],\n          visual: seriesModel.get('color')\n        });\n        var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n        node.setVisual('color', mapValueToColor); // If set itemStyle.normal.color\n\n        var itemModel = node.getModel();\n        var customColor = itemModel.get('itemStyle.color');\n\n        if (customColor != null) {\n          node.setVisual('color', customColor);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup; // FIXME: support be 'auto' adapt to size number text length,\n    // e.g., '3/12345' should not overlap with the control arrow button.\n\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize, isFirstRender) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n    // If first rendering, `contentGroup.position` is [0, 0], which\n    // does not make sense and may cause unexepcted animation if adopted.\n\n    if (!isFirstRender) {\n      contentPos[orientIdx] = contentGroup.position[orientIdx];\n    } // Layout container group based on 0.\n\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    var scrollDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var xy = XY[orientIdx];\n\n    var targetItemIndex = this._findTargetItemIndex(scrollDataIndex);\n\n    var children = contentGroup.children();\n    var targetItem = children[targetItemIndex];\n    var itemCount = children.length;\n    var pCount = !itemCount ? 0 : 1;\n    var result = {\n      contentPosition: contentGroup.position.slice(),\n      pageCount: pCount,\n      pageIndex: pCount - 1,\n      pagePrevDataIndex: null,\n      pageNextDataIndex: null\n    };\n\n    if (!targetItem) {\n      return result;\n    }\n\n    var targetItemInfo = getItemInfo(targetItem);\n    result.contentPosition[orientIdx] = -targetItemInfo.s; // Strategy:\n    // (1) Always align based on the left/top most item.\n    // (2) It is user-friendly that the last item shown in the\n    // current window is shown at the begining of next window.\n    // Otherwise if half of the last item is cut by the window,\n    // it will have no chance to display entirely.\n    // (3) Consider that item size probably be different, we\n    // have calculate pageIndex by size rather than item index,\n    // and we can not get page index directly by division.\n    // (4) The window is to narrow to contain more than\n    // one item, we should make sure that the page can be fliped.\n\n    for (var i = targetItemIndex + 1, winStartItemInfo = targetItemInfo, winEndItemInfo = targetItemInfo, currItemInfo = null; i <= itemCount; ++i) {\n      currItemInfo = getItemInfo(children[i]);\n\n      if ( // Half of the last item is out of the window.\n      !currItemInfo && winEndItemInfo.e > winStartItemInfo.s + containerRectSize || // If the current item does not intersect with the window, the new page\n      // can be started at the current item or the last item.\n      currItemInfo && !intersect(currItemInfo, winStartItemInfo.s)) {\n        if (winEndItemInfo.i > winStartItemInfo.i) {\n          winStartItemInfo = winEndItemInfo;\n        } else {\n          // e.g., when page size is smaller than item size.\n          winStartItemInfo = currItemInfo;\n        }\n\n        if (winStartItemInfo) {\n          if (result.pageNextDataIndex == null) {\n            result.pageNextDataIndex = winStartItemInfo.i;\n          }\n\n          ++result.pageCount;\n        }\n      }\n\n      winEndItemInfo = currItemInfo;\n    }\n\n    for (var i = targetItemIndex - 1, winStartItemInfo = targetItemInfo, winEndItemInfo = targetItemInfo, currItemInfo = null; i >= -1; --i) {\n      currItemInfo = getItemInfo(children[i]);\n\n      if ( // If the the end item does not intersect with the window started\n      // from the current item, a page can be settled.\n      (!currItemInfo || !intersect(winEndItemInfo, currItemInfo.s)) && // e.g., when page size is smaller than item size.\n      winStartItemInfo.i < winEndItemInfo.i) {\n        winEndItemInfo = winStartItemInfo;\n\n        if (result.pagePrevDataIndex == null) {\n          result.pagePrevDataIndex = winStartItemInfo.i;\n        }\n\n        ++result.pageCount;\n        ++result.pageIndex;\n      }\n\n      winStartItemInfo = currItemInfo;\n    }\n\n    return result;\n\n    function getItemInfo(el) {\n      if (el) {\n        var itemRect = el.getBoundingRect();\n        var start = itemRect[xy] + el.position[orientIdx];\n        return {\n          s: start,\n          e: start + itemRect[wh],\n          i: el.__legendDataIndex\n        };\n      }\n    }\n\n    function intersect(itemInfo, winStart) {\n      return itemInfo.e >= winStart && itemInfo.s <= winStart + containerRectSize;\n    }\n  },\n  _findTargetItemIndex: function (targetDataIndex) {\n    var index;\n    var contentGroup = this.getContentGroup();\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child, idx) {\n        if (child.__legendDataIndex === targetDataIndex) {\n          index = idx;\n        }\n      });\n    } else {\n      index = 0;\n    }\n\n    return index;\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor module:echarts/coord/parallel/ParallelAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n */\nvar ParallelAxis = function (dim, scale, coordExtent, axisType, axisIndex) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.axisIndex = axisIndex;\n};\n\nParallelAxis.prototype = {\n  constructor: ParallelAxis,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/parallel/AxisModel}\n   */\n  model: null,\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  }\n};\nzrUtil.inherits(ParallelAxis, Axis);\nvar _default = ParallelAxis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    if (data.length === 0) {\n      sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n    }\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Line = require(\"./Line\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar curveUtil = require(\"zrender/lib/core/curve\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n});\n/**\n * Register the visual encoding if this modules required.\n */\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./effectScatter/EffectScatterSeries\");\n\nrequire(\"./effectScatter/EffectScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(visualSymbol('effectScatter', 'circle'));\necharts.registerLayout(layoutPoints('effectScatter'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n/**\n * @public\n * @static\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {Array.<number>} [width, height]\n */\n\nvar getSymbolSize = SymbolClz.getSymbolSize = function (data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n};\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color, keepAspect);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\n\n    this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var liftZ = data.getItemVisual(idx, 'liftZ');\n  var z2Origin = symbolPath.__z2Origin;\n\n  if (liftZ != null) {\n    if (z2Origin == null) {\n      symbolPath.__z2Origin = symbolPath.z2;\n      symbolPath.z2 += liftZ;\n    }\n  } else if (z2Origin != null) {\n    symbolPath.z2 = z2Origin;\n    symbolPath.__z2Origin = null;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  symbolPath.__symbolOriginalScale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    // Note: consider `off`, should use static function here.\n    symbolPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n\nfunction onMouseOver() {\n  // see comment in `graphic.isInEmphasis`\n  !graphic.isInEmphasis(this) && onEmphasis.call(this);\n}\n\nfunction onMouseOut() {\n  // see comment in `graphic.isInEmphasis`\n  !graphic.isInEmphasis(this) && onNormal.call(this);\n}\n\nfunction onEmphasis() {\n  // Do not support this hover animation util some scenario required.\n  // Animation can only be supported in hover layer when using `el.incremetal`.\n  if (this.incremental || this.useHoverLayer) {\n    return;\n  }\n\n  var scale = this.__symbolOriginalScale;\n  var ratio = scale[1] / scale[0];\n  this.animateTo({\n    scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n  }, 400, 'elasticOut');\n}\n\nfunction onNormal() {\n  if (this.incremental || this.useHoverLayer) {\n    return;\n  }\n\n  this.animateTo({\n    scale: this.__symbolOriginalScale\n  }, 400, 'elasticOut');\n}\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function (seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle');\n      var hoverAreaStyleModel = itemModel.getModel('emphasis.areaStyle');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: data.get(data.dimensions[symbolPath.__dimIdx], idx),\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      function onEmphasis() {\n        polygon.attr('ignore', hoverPolygonIgnore);\n      }\n\n      function onNormal() {\n        polygon.attr('ignore', polygonIgnore);\n      }\n\n      itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n      itemGroup.on('emphasis', onEmphasis).on('mouseover', onEmphasis).on('normal', onNormal).on('mouseout', onNormal);\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i].coord\n        },\n        silent: true\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    if (!ticksCoords.length) {\n      return;\n    }\n\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0].coord;\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i].coord,\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i].coord;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./scatter/ScatterSeries\");\n\nrequire(\"./scatter/ScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import * as zrUtil from 'zrender/src/core/util';\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('scatter', 'circle'));\necharts.registerLayout(layoutPoints('scatter')); // echarts.registerProcessor(function (ecModel, api) {\n//     ecModel.eachSeriesByType('scatter', function (seriesModel) {\n//         var data = seriesModel.getData();\n//         var coordSys = seriesModel.coordinateSystem;\n//         if (coordSys.type !== 'geo') {\n//             return;\n//         }\n//         var startPt = coordSys.pointToData([0, 0]);\n//         var endPt = coordSys.pointToData([api.getWidth(), api.getHeight()]);\n//         var dims = zrUtil.map(coordSys.dimensions, function (dim) {\n//             return data.mapDimension(dim);\n//         });\n//         var range = {};\n//         range[dims[0]] = [Math.min(startPt[0], endPt[0]), Math.max(startPt[0], endPt[0])];\n//         range[dims[1]] = [Math.min(startPt[1], endPt[1]), Math.max(startPt[1], endPt[1])];\n//         data.selectRange(range);\n//     });\n// });","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"../axisDefault\");\n\nvar Model = require(\"../../model/Model\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function () {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisLabel: axisLabel,\n        // Competitable with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordsOffsetMap = {\n  '南海诸岛': [32, 80],\n  // 全国\n  '广东': [0, -10],\n  '香港': [10, 5],\n  '澳门': [-10, 10],\n  //'北京': [-10, 0],\n  '天津': [5, 5]\n};\n\nfunction _default(mapType, region) {\n  if (mapType === 'china') {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.center;\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n    }\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect',\n\n  /**\n   * @override\n   */\n  getProgressive: function () {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  },\n\n  /**\n   * @override\n   */\n  getProgressiveThreshold: function () {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    if (!this.isBlank()) {\n      // Note that if no data, ordinalMeta.categories is an empty array.\n      return this._ordinalMeta.categories[n];\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  getOrdinalMeta: function () {\n    return this._ordinalMeta;\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'end'\n    },\n    lineStyle: {\n      type: 'dashed'\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar SKIP_PROPS = ['color', 'color0', 'borderColor', 'borderColor0'];\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    this._isLargeDraw ? this._renderLarge(seriesModel) : this._renderNormal(seriesModel);\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    this._isLargeDraw ? this._incrementalRenderLarge(params, seriesModel) : this._incrementalRenderNormal(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var isSimpleBox = data.getLayout('isSimpleBox'); // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var el;\n        var itemLayout = data.getItemLayout(newIdx);\n        el = createNormalBox(itemLayout, newIdx, true);\n        graphic.initProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n        setBoxCommon(el, data, newIdx, isSimpleBox);\n        group.add(el);\n        data.setItemGraphicEl(newIdx, el);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!el) {\n        el = createNormalBox(itemLayout, newIdx);\n      } else {\n        graphic.updateProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n      }\n\n      setBoxCommon(el, data, newIdx, isSimpleBox);\n      group.add(el);\n      data.setItemGraphicEl(newIdx, el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderNormal: function (params, seriesModel) {\n    var data = seriesModel.getData();\n    var isSimpleBox = data.getLayout('isSimpleBox');\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var el;\n      var itemLayout = data.getItemLayout(dataIndex);\n      el = createNormalBox(itemLayout, dataIndex);\n      setBoxCommon(el, data, dataIndex, isSimpleBox);\n      el.incremental = true;\n      this.group.add(el);\n    }\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  remove: function (ecModel) {\n    this._clear();\n  },\n  _clear: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: zrUtil.noop\n});\nvar NormalBoxPath = Path.extend({\n  type: 'normalCandlestickBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    var ends = shape.points;\n\n    if (this.__simpleBox) {\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[6][0], ends[6][1]);\n    } else {\n      ctx.moveTo(ends[0][0], ends[0][1]);\n      ctx.lineTo(ends[1][0], ends[1][1]);\n      ctx.lineTo(ends[2][0], ends[2][1]);\n      ctx.lineTo(ends[3][0], ends[3][1]);\n      ctx.closePath();\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[5][0], ends[5][1]);\n      ctx.moveTo(ends[6][0], ends[6][1]);\n      ctx.lineTo(ends[7][0], ends[7][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, dataIndex, isInit) {\n  var ends = itemLayout.ends;\n  return new NormalBoxPath({\n    shape: {\n      points: isInit ? transInit(ends, itemLayout) : ends\n    },\n    z2: 100\n  });\n}\n\nfunction setBoxCommon(el, data, dataIndex, isSimpleBox) {\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var color = data.getItemVisual(dataIndex, 'color');\n  var borderColor = data.getItemVisual(dataIndex, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.strokeNoScale = true;\n  el.style.fill = color;\n  el.style.stroke = borderColor;\n  el.__simpleBox = isSimpleBox;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[1] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar LargeBoxPath = Path.extend({\n  type: 'largeCandlestickBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n\n    for (var i = 0; i < points.length;) {\n      if (this.__sign === points[i++]) {\n        var x = points[i++];\n        ctx.moveTo(x, points[i++]);\n        ctx.lineTo(x, points[i++]);\n      } else {\n        i += 3;\n      }\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  var data = seriesModel.getData();\n  var largePoints = data.getLayout('largePoints');\n  var elP = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: 1\n  });\n  group.add(elP);\n  var elN = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: -1\n  });\n  group.add(elN);\n  setLargeStyle(1, elP, seriesModel, data);\n  setLargeStyle(-1, elN, seriesModel, data);\n\n  if (incremental) {\n    elP.incremental = true;\n    elN.incremental = true;\n  }\n}\n\nfunction setLargeStyle(sign, el, seriesModel, data) {\n  var suffix = sign > 0 ? 'P' : 'N';\n  var borderColor = data.getVisual('borderColor' + suffix) || data.getVisual('color' + suffix); // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = seriesModel.getModel(NORMAL_ITEM_STYLE_PATH).getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor; // No different\n  // el.style.lineWidth = .5;\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    } else {\n      // clipPath is used in first-time animation, so remove it when otherwise. See: #8994\n      group.removeClipPath();\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Polar = require(\"./Polar\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./PolarModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Axis scale\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = parsePercent(polarModel.get('radius'), size);\n  radiusAxis.inverse ? radiusAxis.setExtent(radius, 0) : radiusAxis.setExtent(0, radius);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      zrUtil.each(data.mapDimension('radius', true), function (dim) {\n        radiusAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n      zrUtil.each(data.mapDimension('angle', true), function (dim) {\n        angleAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function (ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  // FIXME\n  // Revert becuase it brings bar progressive bug.\n  // The complete fix will be added in the next version.\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var lastStackCoords = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var cx = seriesModel.coordinateSystem.cx;\n    var cy = seriesModel.coordinateSystem.cy;\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var valueAxisStart = valueAxis.getExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n      // Only ordinal axis can be stacked.\n\n      if (stacked) {\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle; // radial sector\n\n      if (valueAxis.dim === 'radius') {\n        var radiusSpan = valueAxis.dataToRadius(value) - valueAxisStart;\n        var angle = baseAxis.dataToAngle(baseValue);\n\n        if (Math.abs(radiusSpan) < barMinHeight) {\n          radiusSpan = (radiusSpan < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        r0 = baseCoord;\n        r = baseCoord + radiusSpan;\n        startAngle = angle - columnOffset;\n        endAngle = startAngle - columnWidth;\n        stacked && (lastStackCoords[stackId][baseValue][sign] = r);\n      } // tangential sector\n      else {\n          // angleAxis must be clamped.\n          var angleSpan = valueAxis.dataToAngle(value, true) - valueAxisStart;\n          var radius = baseAxis.dataToRadius(baseValue);\n\n          if (Math.abs(angleSpan) < barMinAngle) {\n            angleSpan = (angleSpan < 0 ? -1 : 1) * barMinAngle;\n          }\n\n          r0 = radius + columnOffset;\n          r = r0 + columnWidth;\n          startAngle = baseCoord;\n          endAngle = baseCoord + angleSpan; // if the previous stack is at the end of the ring,\n          // add a round to differentiate it from origin\n          // var extent = angleAxis.getExtent();\n          // var stackCoord = angle;\n          // if (stackCoord === extent[0] && value > 0) {\n          //     stackCoord = extent[1];\n          // }\n          // else if (stackCoord === extent[1] && value < 0) {\n          //     stackCoord = extent[0];\n          // }\n\n          stacked && (lastStackCoords[stackId][baseValue][sign] = endAngle);\n        }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        // Consider that positive angle is anti-clockwise,\n        // while positive radian of sector is clockwise\n        startAngle: -startAngle * Math.PI / 180,\n        endAngle: -endAngle * Math.PI / 180\n      });\n    }\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar Model = require(\"../../model/Model\");\n\nvar selectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"./geoCreator\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\n   * @type {module:echarts/coord/geo/Geo}\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function (option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    // If svg used, aspectScale is 1 by default.\n    // aspectScale: 0.75,\n    aspectScale: null,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      show: false,\n      color: '#000'\n    },\n    itemStyle: {\n      // color: 各异,\n      borderWidth: 0.5,\n      borderColor: '#444',\n      color: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label.' + status + '.formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import * as axisHelper from './axisHelper';\nvar _default = {\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Create data struct and define tree view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar _default = SeriesModel.extend({\n  type: 'series.tree',\n  layoutInfo: null,\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n  layoutMode: 'box',\n\n  /**\n   * Init a tree data structure from data in option series\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var treeOption = {};\n    treeOption.leaves = leaves;\n    var tree = Tree.createTree(root, this, treeOption);\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex); // Add item.collapsed != null, because users can collapse node original in the series.data.\n\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  },\n\n  /**\n   * Make the configuration 'orient' backward compatibly, with 'horizontal = LR', 'vertical = TB'.\n   * @returns {string} orient\n   */\n  getOrient: function () {\n    var orient = this.get('orient');\n\n    if (orient === 'horizontal') {\n      orient = 'LR';\n    } else if (orient === 'vertical') {\n      orient = 'TB';\n    }\n\n    return orient;\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    roam: false,\n    // true | false | 'move' | 'scale', see module:component/helper/RoamController.\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.4,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // The orient of orthoginal layout, can be setted to 'LR', 'TB', 'RL', 'BT'.\n    // and the backward compatibility configuration 'horizontal = LR', 'vertical = TB'.\n    orient: 'LR',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      color: '#ccc',\n      width: 1.5,\n      curveness: 0.5\n    },\n    itemStyle: {\n      color: 'lightsteelblue',\n      borderColor: '#c23531',\n      borderWidth: 1.5\n    },\n    label: {\n      show: true,\n      color: '#555'\n    },\n    leaves: {\n      label: {\n        show: true\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 1000\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embeded for some of the code in this file:\n* The \"scaleLevels\" was originally copied from \"d3.js\" with some\n* modifications made for this project.\n* (See more details in the comment on the definition of \"scaleLevels\" below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n});\n/**\n * This implementation was originally copied from \"d3.js\"\n * <https://github.com/d3/d3/blob/b516d77fb8566b576088e73410437494717ada26/src/time/scale.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n */\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 70], // 10w\n['quarter', ONE_DAY * 95], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    symbol: 'emptyCircle',\n    symbolSize: 4,\n    symbolRotate: null,\n    showSymbol: true,\n    // `false`: follow the label interval strategy.\n    // `true`: show all symbols.\n    // `'auto'`: If possible, show all symbols, otherwise\n    //           follow the label interval strategy.\n    showAllSymbol: 'auto',\n    // Whether to connect break point.\n    connectNulls: false,\n    // Sampling for large data. Can be: 'average', 'max', 'min', 'sum'.\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Component = require(\"../../model/Component\");\n\nrequire(\"./AxisModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = Component.extend({\n  type: 'parallel',\n  dependencies: ['parallelAxis'],\n\n  /**\n   * @type {module:echarts/coord/parallel/Parallel}\n   */\n  coordinateSystem: null,\n\n  /**\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * Coresponding to dimensions.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n  parallelAxisIndex: null,\n  layoutMode: 'box',\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // 'horizontal' or 'vertical'\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    // FIXME '10%' ?\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    // 'mousemove' or 'click'\n    parallelAxisDefault: null\n  },\n\n  /**\n   * @override\n   */\n  init: function () {\n    Component.prototype.init.apply(this, arguments);\n    this.mergeOption({});\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  },\n\n  /**\n   * Whether series or axis is in this coordinate system.\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\n   * @param {module:echarts/model/Global} ecModel\n   */\n  contains: function (model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  },\n  setAxisExpand: function (opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        this.option[name] = opt[name];\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _initDimensions: function () {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar layout = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embeded for some of the code in this file:\n* The tree layoutHelper implementation was originally copied from\n* \"d3.js\"(https://github.com/d3/d3-hierarchy) with\n* some modifications made for this project.\n* (see more details in the comment of the specific method below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the licence of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n */\n\n/**\n * Initialize all computational message for following algorithm.\n *\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree.\n */\nfunction init(root) {\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n *\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param {Function} separation\n */\n\n\nfunction firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * Computes all real x-coordinates by summing up the modifiers recursively.\n *\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\n\nfunction separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate.\n *\n * @param  {number} x\n * @param  {number} y\n * @return {Object}\n */\n\n\nfunction radialCoordinate(x, y) {\n  var radialCoor = {};\n  x -= Math.PI / 2;\n  radialCoor.x = y * Math.cos(x);\n  radialCoor.y = y * Math.sin(x);\n  return radialCoor;\n}\n/**\n * Get the layout position of the whole view.\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n *\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n *\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @param  {Function} separation\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n *\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n *\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n *\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * Shifts the current subtree rooted at wr.\n * This is done by increasing prelim(w+) and modifier(w+) by shift.\n *\n * @param  {module:echarts/data/Tree~TreeNode} wl\n * @param  {module:echarts/data/Tree~TreeNode} wr\n * @param  {number} shift [description]\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n */\n\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}\n\nexports.init = init;\nexports.firstWalk = firstWalk;\nexports.secondWalk = secondWalk;\nexports.separation = separation;\nexports.radialCoordinate = radialCoordinate;\nexports.getViewRect = getViewRect;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\nvar Z2_EMPHASIS_LIFT = 1;\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, path.getBoundingRect());\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke !== 'none';\n} // Most lifted color are duplicated.\n\n\nvar liftedColorMap = zrUtil.createHashMap();\nvar liftedColorCount = 0;\n\nfunction liftColor(color) {\n  if (typeof color !== 'string') {\n    return color;\n  }\n\n  var liftedColor = liftedColorMap.get(color);\n\n  if (!liftedColor) {\n    liftedColor = colorTool.lift(color, -0.1);\n\n    if (liftedColorCount < 10000) {\n      liftedColorMap.set(color, liftedColor);\n      liftedColorCount++;\n    }\n  }\n\n  return liftedColor;\n}\n\nfunction cacheElementStl(el) {\n  if (!el.__hoverStlDirty) {\n    return;\n  }\n\n  el.__hoverStlDirty = false;\n  var hoverStyle = el.__hoverStl;\n\n  if (!hoverStyle) {\n    el.__cachedNormalStl = el.__cachedNormalZ2 = null;\n    return;\n  }\n\n  var normalStyle = el.__cachedNormalStl = {};\n  el.__cachedNormalZ2 = el.z2;\n  var elStyle = el.style;\n\n  for (var name in hoverStyle) {\n    // See comment in `doSingleEnterHover`.\n    if (hoverStyle[name] != null) {\n      normalStyle[name] = elStyle[name];\n    }\n  } // Always cache fill and stroke to normalStyle for lifting color.\n\n\n  normalStyle.fill = elStyle.fill;\n  normalStyle.stroke = elStyle.stroke;\n}\n\nfunction doSingleEnterHover(el) {\n  var hoverStl = el.__hoverStl;\n\n  if (!hoverStl || el.__highlighted) {\n    return;\n  }\n\n  var useHoverLayer = el.useHoverLayer;\n  el.__highlighted = useHoverLayer ? 'layer' : 'plain';\n  var zr = el.__zr;\n\n  if (!zr && useHoverLayer) {\n    return;\n  }\n\n  var elTarget = el;\n  var targetStyle = el.style;\n\n  if (useHoverLayer) {\n    elTarget = zr.addHover(el);\n    targetStyle = elTarget.style;\n  }\n\n  rollbackDefaultTextStyle(targetStyle);\n\n  if (!useHoverLayer) {\n    cacheElementStl(elTarget);\n  } // styles can be:\n  // {\n  //    label: {\n  //        show: false,\n  //        position: 'outside',\n  //        fontSize: 18\n  //    },\n  //    emphasis: {\n  //        label: {\n  //            show: true\n  //        }\n  //    }\n  // },\n  // where properties of `emphasis` may not appear in `normal`. We previously use\n  // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n  // But consider rich text and setOption in merge mode, it is impossible to cover\n  // all properties in merge. So we use merge mode when setting style here, where\n  // only properties that is not `null/undefined` can be set. The disadventage:\n  // null/undefined can not be used to remove style any more in `emphasis`.\n\n\n  targetStyle.extendFrom(hoverStl);\n  setDefaultHoverFillStroke(targetStyle, hoverStl, 'fill');\n  setDefaultHoverFillStroke(targetStyle, hoverStl, 'stroke');\n  applyDefaultTextStyle(targetStyle);\n\n  if (!useHoverLayer) {\n    el.dirty(false);\n    el.z2 += Z2_EMPHASIS_LIFT;\n  }\n}\n\nfunction setDefaultHoverFillStroke(targetStyle, hoverStyle, prop) {\n  if (!hasFillOrStroke(hoverStyle[prop]) && hasFillOrStroke(targetStyle[prop])) {\n    targetStyle[prop] = liftColor(targetStyle[prop]);\n  }\n}\n\nfunction doSingleLeaveHover(el) {\n  var highlighted = el.__highlighted;\n\n  if (!highlighted) {\n    return;\n  }\n\n  el.__highlighted = false;\n\n  if (highlighted === 'layer') {\n    el.__zr && el.__zr.removeHover(el);\n  } else if (highlighted) {\n    var style = el.style;\n    var normalStl = el.__cachedNormalStl;\n\n    if (normalStl) {\n      rollbackDefaultTextStyle(style); // Consider null/undefined value, should use\n      // `setStyle` but not `extendFrom(stl, true)`.\n\n      el.setStyle(normalStl);\n      applyDefaultTextStyle(style);\n    } // `__cachedNormalZ2` will not be reset if calling `setElementHoverStyle`\n    // when `el` is on emphasis state. So here by comparing with 1, we try\n    // hard to make the bug case rare.\n\n\n    var normalZ2 = el.__cachedNormalZ2;\n\n    if (normalZ2 != null && el.z2 - normalZ2 === Z2_EMPHASIS_LIFT) {\n      el.z2 = normalZ2;\n    }\n  }\n}\n\nfunction traverseCall(el, method) {\n  el.isGroup ? el.traverse(function (child) {\n    !child.isGroup && method(child);\n  }) : method(el);\n}\n/**\n * Set hover style (namely \"emphasis style\") of element, based on the current\n * style of the given `el`.\n * This method should be called after all of the normal styles have been adopted\n * to the `el`. See the reason on `setHoverStyle`.\n *\n * @param {module:zrender/Element} el Should not be `zrender/container/Group`.\n * @param {Object|boolean} [hoverStl] The specified hover style.\n *        If set as `false`, disable the hover style.\n *        Similarly, The `el.hoverStyle` can alse be set\n *        as `false` to disable the hover style.\n *        Otherwise, use the default hover style if not provided.\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false] See `graphic.setAsHoverStyleTrigger`\n */\n\n\nfunction setElementHoverStyle(el, hoverStl) {\n  // For performance consideration, it might be better to make the \"hover style\" only the\n  // difference properties from the \"normal style\", but not a entire copy of all styles.\n  hoverStl = el.__hoverStl = hoverStl !== false && (hoverStl || {});\n  el.__hoverStlDirty = true; // FIXME\n  // It is not completely right to save \"normal\"/\"emphasis\" flag on elements.\n  // It probably should be saved on `data` of series. Consider the cases:\n  // (1) A highlighted elements are moved out of the view port and re-enter\n  // again by dataZoom.\n  // (2) call `setOption` and replace elements totally when they are highlighted.\n\n  if (el.__highlighted) {\n    // Consider the case:\n    // The styles of a highlighted `el` is being updated. The new \"emphasis style\"\n    // should be adapted to the `el`. Notice here new \"normal styles\" should have\n    // been set outside and the cached \"normal style\" is out of date.\n    el.__cachedNormalStl = null; // Do not clear `__cachedNormalZ2` here, because setting `z2` is not a constraint\n    // of this method. In most cases, `z2` is not set and hover style should be able\n    // to rollback. Of course, that would bring bug, but only in a rare case, see\n    // `doSingleLeaveHover` for details.\n\n    doSingleLeaveHover(el);\n    doSingleEnterHover(el);\n  }\n}\n/**\n * Emphasis (called by API) has higher priority than `mouseover`.\n * When element has been called to be entered emphasis, mouse over\n * should not trigger the highlight effect (for example, animation\n * scale) again, and `mouseout` should not downplay the highlight\n * effect. So the listener of `mouseover` and `mouseout` should\n * check `isInEmphasis`.\n *\n * @param {module:zrender/Element} el\n * @return {boolean}\n */\n\n\nfunction isInEmphasis(el) {\n  return el && el.__isEmphasisEntered;\n}\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasisEntered && traverseCall(this, doSingleEnterHover);\n}\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasisEntered && traverseCall(this, doSingleLeaveHover);\n}\n\nfunction enterEmphasis() {\n  this.__isEmphasisEntered = true;\n  traverseCall(this, doSingleEnterHover);\n}\n\nfunction leaveEmphasis() {\n  this.__isEmphasisEntered = false;\n  traverseCall(this, doSingleLeaveHover);\n}\n/**\n * Set hover style (namely \"emphasis style\") of element,\n * based on the current style of the given `el`.\n *\n * (1)\n * **CONSTRAINTS** for this method:\n * <A> This method MUST be called after all of the normal styles having been adopted\n * to the `el`.\n * <B> The input `hoverStyle` (that is, \"emphasis style\") MUST be the subset of the\n * \"normal style\" having been set to the el.\n * <C> `color` MUST be one of the \"normal styles\" (because color might be lifted as\n * a default hover style).\n *\n * The reason: this method treat the current style of the `el` as the \"normal style\"\n * and cache them when enter/update the \"emphasis style\". Consider the case: the `el`\n * is in \"emphasis\" state and `setOption`/`dispatchAction` trigger the style updating\n * logic, where the el should shift from the original emphasis style to the new\n * \"emphasis style\" and should be able to \"downplay\" back to the new \"normal style\".\n *\n * Indeed, it is error-prone to make a interface has so many constraints, but I have\n * not found a better solution yet to fit the backward compatibility, performance and\n * the current programming style.\n *\n * (2)\n * Call the method for a \"root\" element once. Do not call it for each descendants.\n * If the descendants elemenets of a group has itself hover style different from the\n * root group, we can simply mount the style on `el.hoverStyle` for them, but should\n * not call this method for them.\n *\n * @param {module:zrender/Element} el\n * @param {Object|boolean} [hoverStyle] See `graphic.setElementHoverStyle`.\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false] See `graphic.setAsHoverStyleTrigger`.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.isGroup ? el.traverse(function (child) {\n    // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n    // Often used when item group has a label element and it's hoverStyle is different\n    !child.isGroup && setElementHoverStyle(child, child.hoverStyle || hoverStyle);\n  }) : setElementHoverStyle(el, el.hoverStyle || hoverStyle);\n  setAsHoverStyleTrigger(el, opt);\n}\n/**\n * @param {Object|boolean} [opt] If `false`, means disable trigger.\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conveniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setAsHoverStyleTrigger(el, opt) {\n  var disable = opt === false;\n  el.__hoverSilentOnTouch = opt != null && opt.hoverSilentOnTouch; // Simple optimize, since this method might be\n  // called for each elements of a group in some cases.\n\n  if (!disable || el.__hoverStyleTrigger) {\n    var method = disable ? 'off' : 'on'; // Duplicated function will be auto-ignored, see Eventful.js.\n\n    el[method]('mouseover', onElementMouseOver)[method]('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n    el[method]('emphasis', enterEmphasis)[method]('normal', leaveEmphasis);\n    el.__hoverStyleTrigger = !disable;\n  }\n}\n/**\n * See more info in `setTextStyleCommon`.\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * See more info in `setTextStyleCommon`.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle); // textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * See more info in `setTextStyleCommon`.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis); // textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * The uniform entry of set text style, that is, retrieve style definitions\n * from `model` and set to `textStyle` object.\n *\n * Never in merge mode, but in overwrite mode, that is, all of the text style\n * properties will be set. (Consider the states of normal and emphasis and\n * default value can be adopted, merge would make the logic too complicated\n * to manage.)\n *\n * The `textStyle` object can either be a plain object or an instance of\n * `zrender/src/graphic/Style`, and either be the style of normal or emphasis.\n * After this mothod called, the `textStyle` object can then be used in\n * `el.setStyle(textStyle)` or `el.hoverStyle = textStyle`.\n *\n * Default value will be adopted and `insideRollbackOpt` will be created.\n * See `applyDefaultTextStyle` `rollbackDefaultTextStyle` for more details.\n *\n * opt: {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth); // Save original textPosition, because style.textPosition will be repalced by\n  // real location (like [10, 30]) in zrender.\n\n  textStyle.insideRawTextPosition = textStyle.textPosition;\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      textStyle.insideRollbackOpt = opt;\n      applyDefaultTextStyle(textStyle);\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n/**\n * Give some default value to the input `textStyle` object, based on the current settings\n * in this `textStyle` object.\n *\n * The Scenario:\n * when text position is `inside` and `textFill` is not specified, we show\n * text border by default for better view. But it should be considered that text position\n * might be changed when hovering or being emphasis, where the `insideRollback` is used to\n * restore the style.\n *\n * Usage (& NOTICE):\n * When a style object (eithor plain object or instance of `zrender/src/graphic/Style`) is\n * about to be modified on its text related properties, `rollbackDefaultTextStyle` should\n * be called before the modification and `applyDefaultTextStyle` should be called after that.\n * (For the case that all of the text related properties is reset, like `setTextStyleCommon`\n * does, `rollbackDefaultTextStyle` is not needed to be called).\n */\n\n\nfunction applyDefaultTextStyle(textStyle) {\n  var opt = textStyle.insideRollbackOpt; // Only `insideRollbackOpt` created (in `setTextStyleCommon`),\n  // applyDefaultTextStyle works.\n\n  if (!opt || textStyle.textFill != null) {\n    return;\n  }\n\n  var useInsideStyle = opt.useInsideStyle;\n  var textPosition = textStyle.insideRawTextPosition;\n  var insideRollback;\n  var autoColor = opt.autoColor;\n\n  if (useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  } else if (autoColor != null) {\n    insideRollback = {\n      textFill: null\n    };\n    textStyle.textFill = autoColor;\n  } // Always set `insideRollback`, for clearing previous.\n\n\n  if (insideRollback) {\n    textStyle.insideRollback = insideRollback;\n  }\n}\n/**\n * Consider the case: in a scatter,\n * label: {\n *     normal: {position: 'inside'},\n *     emphasis: {position: 'top'}\n * }\n * In the normal state, the `textFill` will be set as '#fff' for pretty view (see\n * `applyDefaultTextStyle`), but when switching to emphasis state, the `textFill`\n * should be retured to 'autoColor', but not keep '#fff'.\n */\n\n\nfunction rollbackDefaultTextStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n    style.insideRollback = null;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  // FIXME: this way migth be incorrect when grpahic clipped by a corner.\n  // and when element have border.\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height); // If the total rect is cliped, nothing, including the border,\n  // should be painted. So return undefined.\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.Z2_EMPHASIS_LIFT = Z2_EMPHASIS_LIFT;\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setElementHoverStyle = setElementHoverStyle;\nexports.isInEmphasis = isInEmphasis;\nexports.setHoverStyle = setHoverStyle;\nexports.setAsHoverStyleTrigger = setAsHoverStyleTrigger;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar throttle = require(\"../../util/throttle\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar layout = require(\"../../util/layout\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function () {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        otherDim = seriesModel.getData().mapDimension(otherDim);\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function () {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   * @return {boolean} changed\n   */\n  _updateInterval: function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    var lastRange = this._range;\n    var range = this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n    return !lastRange || lastRange[0] !== range[0] || lastRange[1] !== range[1];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function (handleIndex, dx, dy) {\n    this._dragging = true; // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    var changed = this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime); // Avoid dispatch dataZoom repeatly but range not changed,\n    // which cause bad visual effect when progressive enabled.\n\n\n    changed && realtime && this._dispatchZoomAction();\n  },\n  _onDragEnd: function () {\n    this._dragging = false;\n\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\n    // drag end will cause the whole view rerender, which is unnecessary.\n\n\n    var realtime = this.dataZoomModel.get('realtime');\n    !realtime && this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    var changed = this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    changed && this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function () {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar Graph = require(\"../../data/Graph\");\n\nvar linkList = require(\"../../data/helper/linkList\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar createListFromArray = require(\"./createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(nodes, edges, seriesModel, directed, beforeLink) {\n  // ??? TODO\n  // support dataset?\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = seriesModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, seriesModel);\n  } else {\n    var coordSysCtor = CoordinateSystem.get(coordSys);\n    var coordDimensions = coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []; // FIXME: Some geo do not need `value` dimenson, whereas `calendar` needs\n    // `value` dimension, but graph need `value` dimension. It's better to\n    // uniform this behavior.\n\n    if (zrUtil.indexOf(coordDimensions, 'value') < 0) {\n      coordDimensions.concat(['value']);\n    }\n\n    var dimensionNames = createDimensions(nodes, {\n      coordDimensions: coordDimensions\n    });\n    nodeData = new List(dimensionNames, seriesModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], seriesModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar IndicatorAxis = require(\"./IndicatorAxis\");\n\nvar IntervalScale = require(\"../../scale/Interval\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _axisHelper = require(\"../axisHelper\");\n\nvar getScaleExtent = _axisHelper.getScaleExtent;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO clockwise\nfunction Radar(radarModel, ecModel, api) {\n  this._model = radarModel;\n  /**\n   * Radar dimensions\n   * @type {Array.<string>}\n   */\n\n  this.dimensions = [];\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n    var dim = 'indicator_' + idx;\n    var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n    indicatorAxis.model = indicatorModel;\n    indicatorModel.axis = indicatorAxis;\n    this.dimensions.push(dim);\n    return indicatorAxis;\n  }, this);\n  this.resize(radarModel, api);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cx;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cy;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r0;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.startAngle;\n}\n\nRadar.prototype.getIndicatorAxes = function () {\n  return this._indicatorAxes;\n};\n\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n};\n\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  var angle = indicatorAxis.angle;\n  var x = this.cx + coord * Math.cos(angle);\n  var y = this.cy - coord * Math.sin(angle);\n  return [x, y];\n};\n\nRadar.prototype.pointToData = function (pt) {\n  var dx = pt[0] - this.cx;\n  var dy = pt[1] - this.cy;\n  var radius = Math.sqrt(dx * dx + dy * dy);\n  dx /= radius;\n  dy /= radius;\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\n  // FIXME index can calculated directly\n\n  var minRadianDiff = Infinity;\n  var closestAxis;\n  var closestAxisIdx = -1;\n\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\n    var indicatorAxis = this._indicatorAxes[i];\n    var diff = Math.abs(radian - indicatorAxis.angle);\n\n    if (diff < minRadianDiff) {\n      closestAxis = indicatorAxis;\n      closestAxisIdx = i;\n      minRadianDiff = diff;\n    }\n  }\n\n  return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n};\n\nRadar.prototype.resize = function (radarModel, api) {\n  var center = radarModel.get('center');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180; // radius may be single value like `20`, `'80%'`, or array like `[10, '80%']`\n\n  var radius = radarModel.get('radius');\n\n  if (typeof radius === 'string' || typeof radius === 'number') {\n    radius = [0, radius];\n  }\n\n  this.r0 = numberUtil.parsePercent(radius[0], viewSize);\n  this.r = numberUtil.parsePercent(radius[1], viewSize);\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n    indicatorAxis.setExtent(this.r0, this.r);\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n    indicatorAxis.angle = angle;\n  }, this);\n};\n\nRadar.prototype.update = function (ecModel, api) {\n  var indicatorAxes = this._indicatorAxes;\n  var radarModel = this._model;\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n      return;\n    }\n\n    var data = radarSeries.getData();\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.unionExtentFromData(data, data.mapDimension(indicatorAxis.dim));\n    });\n  }, this);\n  var splitNumber = radarModel.get('splitNumber');\n\n  function increaseInterval(interval) {\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n    var f = interval / exp10;\n\n    if (f === 2) {\n      f = 5;\n    } else {\n      // f is 2 or 5\n      f *= 2;\n    }\n\n    return f * exp10;\n  } // Force all the axis fixing the maxSplitNumber.\n\n\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    var axisModel = indicatorAxis.model;\n    var scale = indicatorAxis.scale;\n    var fixedMin = axisModel.getMin();\n    var fixedMax = axisModel.getMax();\n    var interval = scale.getInterval();\n\n    if (fixedMin != null && fixedMax != null) {\n      // User set min, max, divide to get new interval\n      scale.setExtent(+fixedMin, +fixedMax);\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\n    } else if (fixedMin != null) {\n      var max; // User set min, expand extent on the other side\n\n      do {\n        max = fixedMin + interval * splitNumber;\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\n        // FIXME\n\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n    } else if (fixedMax != null) {\n      var min; // User set min, expand extent on the other side\n\n      do {\n        min = fixedMax - interval * splitNumber;\n        scale.setExtent(min, +fixedMax);\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n    } else {\n      var nicedSplitNumber = scale.getTicks().length - 1;\n\n      if (nicedSplitNumber > splitNumber) {\n        interval = increaseInterval(interval);\n      } // PENDING\n\n\n      var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n      var halfSplitNumber = Math.round(splitNumber / 2);\n      scale.setExtent(numberUtil.round(center - halfSplitNumber * interval), numberUtil.round(center + (splitNumber - halfSplitNumber) * interval));\n      scale.setInterval(interval);\n    }\n  });\n};\n/**\n * Radar dimensions is based on the data\n * @type {Array}\n */\n\n\nRadar.dimensions = [];\n\nRadar.create = function (ecModel, api) {\n  var radarList = [];\n  ecModel.eachComponent('radar', function (radarModel) {\n    var radar = new Radar(radarModel, ecModel, api);\n    radarList.push(radar);\n    radarModel.coordinateSystem = radar;\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\n    if (radarSeries.get('coordinateSystem') === 'radar') {\n      // Inject coordinate system\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n    }\n  });\n  return radarList;\n};\n\nCoordinateSystem.register('radar', Radar);\nvar _default = Radar;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./graph/GraphSeries\");\n\nrequire(\"./graph/GraphView\");\n\nrequire(\"./graph/graphAction\");\n\nvar categoryFilter = require(\"./graph/categoryFilter\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar categoryVisual = require(\"./graph/categoryVisual\");\n\nvar edgeVisual = require(\"./graph/edgeVisual\");\n\nvar simpleLayout = require(\"./graph/simpleLayout\");\n\nvar circularLayout = require(\"./graph/circularLayout\");\n\nvar forceLayout = require(\"./graph/forceLayout\");\n\nvar createView = require(\"./graph/createView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(visualSymbol('graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt, 'label', ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType, true);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function () {\n    return this._data;\n  },\n  setData: function (data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar layout = require(\"../../util/layout\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueDim = data.mapDimension('value');\n  var valueArr = data.mapArray(valueDim, function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent(valueDim);\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function (idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get(valueDim, idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var itemModel = data.getItemModel(idx);\n      var height = itemModel.get('itemStyle.height');\n\n      if (height == null) {\n        height = itemHeight;\n      } else {\n        height = parsePercent(height, viewRect.height);\n\n        if (sort === 'ascending') {\n          height = -height;\n        }\n      }\n\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + height);\n      y += height + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar _poly = require(\"../line/poly\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  The file used to draw themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function () {\n    this._layers = [];\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(opt, propName) {\n  // Check whether is not object (string\\null\\undefined ...)\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt, 'label');\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt, 'label'); // treemap\n\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\n\n  compatTextStyle(seriesOpt, 'edgeLabel');\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\n\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\n\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } else if (seriesOpt.type === 'tree') {\n    removeEC3NormalStatus(seriesOpt.leaves);\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/PiecewiseModel\");\n\nrequire(\"./visualMap/PiecewiseView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx, out) {\n      idx = idx - this._offset;\n      out = out || [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        out[i] = this._data[offset + i];\n      }\n\n      return out;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapping = require(\"./VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual solution, for consistent option specification.\n */\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return true;\n      }\n    }\n  }\n}\n/**\n * @param {Object} option\n * @param {Array.<string>} stateList\n * @param {Function} [supplementVisualOption]\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n */\n\n\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\n/**\n * @param {Object} thisOption\n * @param {Object} newOption\n * @param {Array.<string>} keys\n */\n\n\nfunction replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {module:echarts/data/List} list\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {object} [scope] Scope for getValueState\n * @param {string} [dimension] Concrete dimension, if used.\n */\n// ???! handle brush?\n\n\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return data.getItemVisual(dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    data.setItemVisual(dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem);\n  } else {\n    data.each([dimension], eachItem);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {number} [dim] dimension or dimension index.\n */\n\n\nfunction incrementalApplyVisual(stateList, visualMappings, getValueState, dim) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n\n  function progress(params, data) {\n    if (dim != null) {\n      dim = data.getDimension(dim);\n    }\n\n    function getVisual(key) {\n      return data.getItemVisual(dataIndex, key);\n    }\n\n    function setVisual(key, value) {\n      data.setItemVisual(dataIndex, key, value);\n    }\n\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n      if (rawDataItem && rawDataItem.visualMap === false) {\n        continue;\n      }\n\n      var value = dim != null ? data.get(dim, dataIndex, true) : dataIndex;\n      var valueState = getValueState(value);\n      var mappings = visualMappings[valueState];\n      var visualTypes = visualTypesMap[valueState];\n\n      for (var i = 0, len = visualTypes.length; i < len; i++) {\n        var type = visualTypes[i];\n        mappings[type] && mappings[type].applyVisual(value, getVisual, setVisual);\n      }\n    }\n  }\n\n  return {\n    progress: progress\n  };\n}\n\nexports.createVisualMappings = createVisualMappings;\nexports.replaceVisualOption = replaceVisualOption;\nexports.applyVisual = applyVisual;\nexports.incrementalApplyVisual = incrementalApplyVisual;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerProcessor({\n  // `dataZoomProcessor` will only be performed in needed series. Consider if\n  // there is a line series and a pie series, it is better not to update the\n  // line series if only pie series is needed to be updated.\n  getTargetSeries: function (ecModel) {\n    var seriesModelMap = createHashMap();\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        var axisProxy = dataZoomModel.getAxisProxy(dimNames.name, axisIndex);\n        each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\n          seriesModelMap.set(seriesModel.uid, seriesModel);\n        });\n      });\n    });\n    return seriesModelMap;\n  },\n  modifyOutputEnd: true,\n  // Consider appendData, where filter should be performed. Because data process is\n  // in block mode currently, it is not need to worry about that the overallProgress\n  // execute every frame.\n  overallReset: function (ecModel, api) {\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // We calculate window and reset axis here but not in model\n      // init stage and not after action dispatch handler, because\n      // reset should be called after seriesData.restoreData.\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel, api);\n      }); // Caution: data zoom filtering is order sensitive when using\n      // percent range and no min/max/scale set on axis.\n      // For example, we have dataZoom definition:\n      // [\n      //      {xAxisIndex: 0, start: 30, end: 70},\n      //      {yAxisIndex: 0, start: 20, end: 80}\n      // ]\n      // In this case, [20, 80] of y-dataZoom should be based on data\n      // that have filtered by x-dataZoom using range of [30, 70],\n      // but should not be based on full raw data. Thus sliding\n      // x-dataZoom will change both ranges of xAxis and yAxis,\n      // while sliding y-dataZoom will only change the range of yAxis.\n      // So we should filter x-axis after reset x-axis immediately,\n      // and then reset y-axis and filter y-axis.\n\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel, api);\n      });\n    });\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // Fullfill all of the range props so that user\n      // is able to get them from chart.getOption().\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n      var percentRange = axisProxy.getDataPercentWindow();\n      var valueRange = axisProxy.getDataValueWindow();\n      dataZoomModel.setRawRange({\n        start: percentRange[0],\n        end: percentRange[1],\n        startValue: valueRange[0],\n        endValue: valueRange[1]\n      }, true);\n    });\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"../coord/single/singleCreator\");\n\nrequire(\"./axis/SingleAxisView\");\n\nrequire(\"../coord/single/AxisModel\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/SingleAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.extendComponentView({\n  type: 'single'\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./brush/preprocessor\");\n\nrequire(\"./brush/visualEncoding\");\n\nrequire(\"./brush/BrushModel\");\n\nrequire(\"./brush/BrushView\");\n\nrequire(\"./brush/brushAction\");\n\nrequire(\"./toolbox/feature/Brush\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Brush component entry\n */\necharts.registerPreprocessor(preprocessor);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        }\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barPolar = require(\"../layout/barPolar\");\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./angleAxis\");\n\nrequire(\"./radiusAxis\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/PolarAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar borderColorQuery = ['itemStyle', 'borderColor'];\n\nfunction _default(ecModel, api) {\n  var globalColors = ecModel.get('color');\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      // Use name 'color' but not 'borderColor' for legend usage and\n      // visual coding from other component like dataRange.\n      color: seriesModel.get(borderColorQuery) || defaulColor\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        data.setItemVisual(idx, {\n          color: itemModel.get(borderColorQuery, true)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 3e3,\n    progressiveChunkMode: 'mod',\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Constant\nvar DEFAULT_BAR_BOUND = [20, 140];\nvar ContinuousModel = VisualMapModel.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    align: 'auto',\n    // 'auto', 'left', 'right', 'top', 'bottom'\n    calculable: false,\n    // This prop effect default component type determine,\n    // See echarts/component/visualMap/typeDefaulter.\n    range: null,\n    // selected range. In default case `range` is [min, max]\n    // and can auto change along with modification of min max,\n    // util use specifid a range.\n    realtime: true,\n    // Whether realtime update.\n    itemHeight: null,\n    // The length of the range control edge.\n    itemWidth: null,\n    // The length of the other side.\n    hoverLink: true,\n    // Enable hover highlight.\n    hoverLinkDataSize: null,\n    // The size of hovered data.\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\n    // If not specified, follow the value of `realtime`.\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\n    this.resetExtent();\n    this.resetVisual(function (mappingOption) {\n      mappingOption.mappingMethod = 'linear';\n      mappingOption.dataExtent = this.getExtent();\n    });\n\n    this._resetRange();\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  resetItemSize: function () {\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\n    var itemSize = this.itemSize;\n    this._orient === 'horizontal' && itemSize.reverse();\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n  },\n\n  /**\n   * @private\n   */\n  _resetRange: function () {\n    var dataExtent = this.getExtent();\n    var range = this.option.range;\n\n    if (!range || range.auto) {\n      // `range` should always be array (so we dont use other\n      // value like 'auto') for user-friend. (consider getOption).\n      dataExtent.auto = 1;\n      this.option.range = dataExtent;\n    } else if (zrUtil.isArray(range)) {\n      if (range[0] > range[1]) {\n        range.reverse();\n      }\n\n      range[0] = Math.max(range[0], dataExtent[0]);\n      range[1] = Math.min(range[1], dataExtent[1]);\n    }\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n    zrUtil.each(this.stateList, function (state) {\n      var symbolSize = this.option.controller[state].symbolSize;\n\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n        symbolSize[0] = 0; // For good looking.\n      }\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.range = selected.slice();\n\n    this._resetRange();\n  },\n\n  /**\n   * @public\n   */\n  getSelected: function () {\n    var dataExtent = this.getExtent();\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\n\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n    return dataInterval;\n  },\n\n  /**\n   * @override\n   */\n  getValueState: function (value) {\n    var range = this.option.range;\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n    // range[1] is processed likewise.\n\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\n  },\n\n  /**\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (range) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @implement\n   */\n  getVisualMeta: function (getColorVisual) {\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n    var stops = [];\n\n    function setStop(value, valueState) {\n      stops.push({\n        value: value,\n        color: getColorVisual(value, valueState)\n      });\n    } // Format to: outOfRange -- inRange -- outOfRange.\n\n\n    var iIdx = 0;\n    var oIdx = 0;\n    var iLen = iVals.length;\n    var oLen = oVals.length;\n\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n      if (oVals[oIdx] < iVals[iIdx]) {\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n      // If range is full, value beyond min, max will be clamped.\n      // make a singularity\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n      setStop(iVals[iIdx], 'inRange');\n    }\n\n    for (var first = 1; oIdx < oLen; oIdx++) {\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n        // make a singularity\n        if (first) {\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n          first = 0;\n        }\n\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    var stopsLen = stops.length;\n    return {\n      stops: stops,\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\n    };\n  }\n});\n\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\n  if (dataExtent[0] === dataExtent[1]) {\n    return dataExtent.slice();\n  } // When using colorHue mapping, it is not linear color any more.\n  // Moreover, canvas gradient seems not to be accurate linear.\n  // FIXME\n  // Should be arbitrary value 100? or based on pixel size?\n\n\n  var count = 200;\n  var step = (dataExtent[1] - dataExtent[0]) / count;\n  var value = dataExtent[0];\n  var stopValues = [];\n\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n    stopValues.push(value);\n    value += step;\n  }\n\n  stopValues.push(dataExtent[1]);\n  return stopValues;\n}\n\nvar _default = ContinuousModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (val) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(val);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average', 'median'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' || mlType === 'median' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var valueDataDim;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueDataDim = item.yAxis != null ? 'y' : 'x';\n      valueAxis = coordSys.getAxis(valueDataDim);\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueDataDim = axisInfo.valueDataDim;\n      valueAxis = axisInfo.valueAxis;\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueDataDim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  // updateLayout: function (markLineModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mlModel = seriesModel.markLineModel;\n  //         if (mlModel) {\n  //             var mlData = mlModel.getData();\n  //             var fromData = mlModel.__from;\n  //             var toData = mlModel.__to;\n  //             // Update visual and layout of from symbol and to symbol\n  //             fromData.each(function (idx) {\n  //                 updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n  //                 updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n  //             });\n  //             // Update layout of line\n  //             mlData.each(function (idx) {\n  //                 mlData.setItemLayout(idx, [\n  //                     fromData.getItemLayout(idx),\n  //                     toData.getItemLayout(idx)\n  //                 ]);\n  //             });\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout();\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./sankey/SankeySeries\");\n\nrequire(\"./sankey/SankeyView\");\n\nrequire(\"./sankey/sankeyAction\");\n\nvar sankeyLayout = require(\"./sankey/sankeyLayout\");\n\nvar sankeyVisual = require(\"./sankey/sankeyVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(sankeyLayout);\necharts.registerVisual(sankeyVisual);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _echarts = require(\"./lib/echarts\");\n\n(function () {\n  for (var key in _echarts) {\n    if (_echarts == null || !_echarts.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _echarts[key];\n  }\n})();\n\nvar _export = require(\"./lib/export\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\nrequire(\"./lib/component/dataset\");\n\nrequire(\"./lib/chart/line\");\n\nrequire(\"./lib/chart/bar\");\n\nrequire(\"./lib/chart/pie\");\n\nrequire(\"./lib/chart/scatter\");\n\nrequire(\"./lib/chart/radar\");\n\nrequire(\"./lib/chart/map\");\n\nrequire(\"./lib/chart/tree\");\n\nrequire(\"./lib/chart/treemap\");\n\nrequire(\"./lib/chart/graph\");\n\nrequire(\"./lib/chart/gauge\");\n\nrequire(\"./lib/chart/funnel\");\n\nrequire(\"./lib/chart/parallel\");\n\nrequire(\"./lib/chart/sankey\");\n\nrequire(\"./lib/chart/boxplot\");\n\nrequire(\"./lib/chart/candlestick\");\n\nrequire(\"./lib/chart/effectScatter\");\n\nrequire(\"./lib/chart/lines\");\n\nrequire(\"./lib/chart/heatmap\");\n\nrequire(\"./lib/chart/pictorialBar\");\n\nrequire(\"./lib/chart/themeRiver\");\n\nrequire(\"./lib/chart/sunburst\");\n\nrequire(\"./lib/chart/custom\");\n\nrequire(\"./lib/component/graphic\");\n\nrequire(\"./lib/component/grid\");\n\nrequire(\"./lib/component/legendScroll\");\n\nrequire(\"./lib/component/tooltip\");\n\nrequire(\"./lib/component/axisPointer\");\n\nrequire(\"./lib/component/polar\");\n\nrequire(\"./lib/component/geo\");\n\nrequire(\"./lib/component/parallel\");\n\nrequire(\"./lib/component/singleAxis\");\n\nrequire(\"./lib/component/brush\");\n\nrequire(\"./lib/component/calendar\");\n\nrequire(\"./lib/component/title\");\n\nrequire(\"./lib/component/dataZoom\");\n\nrequire(\"./lib/component/visualMap\");\n\nrequire(\"./lib/component/markPoint\");\n\nrequire(\"./lib/component/markLine\");\n\nrequire(\"./lib/component/markArea\");\n\nrequire(\"./lib/component/timeline\");\n\nrequire(\"./lib/component/toolbox\");\n\nrequire(\"zrender/lib/vml/vml\");\n\nrequire(\"zrender/lib/svg/svg\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"../Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 南海诸岛\nvar geoCoord = [126, 25];\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\n\nfor (var i = 0; i < points.length; i++) {\n  for (var k = 0; k < points[i].length; k++) {\n    points[i][k][0] /= 10.5;\n    points[i][k][1] /= -10.5 / 0.75;\n    points[i][k][0] += geoCoord[0];\n    points[i][k][1] += geoCoord[1];\n  }\n}\n\nfunction _default(mapType, regions) {\n  if (mapType === 'china') {\n    regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\n      return {\n        type: 'polygon',\n        exterior: exterior\n      };\n    }), geoCoord));\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar roams = require(\"./roams\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Hance the `throttle` util ensures to preserve command order,\n    // here simply updating range all the time will not cause missing\n    // any of the the roam change.\n\n    this._range = dataZoomModel.getPercentRange(); // Reset controllers.\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var getRange = {};\n        zrUtil.each(['pan', 'zoom', 'scrollMove'], function (eventName) {\n          getRange[eventName] = bind(roamHandlers[eventName], this, coordInfo, coordSysName);\n        }, this);\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function (e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          dataZoomModel: dataZoomModel,\n          getRange: getRange\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  }\n});\nvar roamHandlers = {\n  /**\n   * @this {module:echarts/component/dataZoom/InsideZoomView}\n   */\n  zoom: function (coordInfo, coordSysName, controller, e) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [e.originX, e.originY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    var scale = Math.max(1 / e.scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  },\n\n  /**\n   * @this {module:echarts/component/dataZoom/InsideZoomView}\n   */\n  pan: makeMover(function (range, axisModel, coordInfo, coordSysName, controller, e) {\n    var directionInfo = getDirectionInfo[coordSysName]([e.oldX, e.oldY], [e.newX, e.newY], axisModel, controller, coordInfo);\n    return directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n  }),\n\n  /**\n   * @this {module:echarts/component/dataZoom/InsideZoomView}\n   */\n  scrollMove: makeMover(function (range, axisModel, coordInfo, coordSysName, controller, e) {\n    var directionInfo = getDirectionInfo[coordSysName]([0, 0], [e.scrollDelta, e.scrollDelta], axisModel, controller, coordInfo);\n    return directionInfo.signal * (range[1] - range[0]) * e.scrollDelta;\n  })\n};\n\nfunction makeMover(getPercentDelta) {\n  return function (coordInfo, coordSysName, controller, e) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var percentDelta = getPercentDelta(range, axisModel, coordInfo, coordSysName, controller, e);\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  };\n}\n\nvar getDirectionInfo = {\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = require(\"../../data/Source\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar isNumeric = _number.isNumeric;\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth']; // index: +isHorizontal\n\nvar LAYOUT_ATTRS = [{\n  xy: 'x',\n  wh: 'width',\n  index: 0,\n  posDesc: ['left', 'right']\n}, {\n  xy: 'y',\n  wh: 'height',\n  index: 1,\n  posDesc: ['top', 'bottom']\n}];\nvar pathForLineWidth = new graphic.Circle();\nvar BarView = echarts.extendChartView({\n  type: 'pictorialBar',\n  render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = !!baseAxis.isHorizontal();\n    var coordSysRect = cartesian.grid.getRect();\n    var opt = {\n      ecSize: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      seriesModel: seriesModel,\n      coordSys: cartesian,\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\n      isHorizontal: isHorizontal,\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\n      categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\n    };\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = getItemModel(data, dataIndex);\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\n      var bar = createBar(data, opt, symbolMeta);\n      data.setItemGraphicEl(dataIndex, bar);\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).update(function (newIndex, oldIndex) {\n      var bar = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(bar);\n        return;\n      }\n\n      var itemModel = getItemModel(data, newIndex);\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\n\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\n        group.remove(bar);\n        data.setItemGraphicEl(newIndex, null);\n        bar = null;\n      }\n\n      if (bar) {\n        updateBar(bar, opt, symbolMeta);\n      } else {\n        bar = createBar(data, opt, symbolMeta, true);\n      }\n\n      data.setItemGraphicEl(newIndex, bar);\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\n\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).remove(function (dataIndex) {\n      var bar = oldData.getItemGraphicEl(dataIndex);\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\n    }).execute();\n    this._data = data;\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (bar) {\n          removeBar(data, bar.dataIndex, ecModel, bar);\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n}); // Set or calculate default value about symbol, and calculate layout info.\n\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\n  var layout = data.getItemLayout(dataIndex);\n  var symbolRepeat = itemModel.get('symbolRepeat');\n  var symbolClip = itemModel.get('symbolClip');\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\n  var symbolRotate = itemModel.get('symbolRotate');\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\n  var symbolMeta = {\n    dataIndex: dataIndex,\n    layout: layout,\n    itemModel: itemModel,\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\n    color: data.getItemVisual(dataIndex, 'color'),\n    symbolClip: symbolClip,\n    symbolRepeat: symbolRepeat,\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\n    symbolPatternSize: symbolPatternSize,\n    rotation: rotation,\n    animationModel: isAnimationEnabled ? itemModel : null,\n    hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\n    z2: itemModel.getShallow('z', true) || 0\n  };\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\n  var symbolSize = symbolMeta.symbolSize;\n  var symbolOffset = itemModel.get('symbolOffset');\n\n  if (zrUtil.isArray(symbolOffset)) {\n    symbolOffset = [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])];\n  }\n\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\n  return symbolMeta;\n} // bar length can be negative.\n\n\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\n  var valueDim = opt.valueDim;\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\n  var boundingLength;\n\n  if (zrUtil.isArray(symbolBoundingData)) {\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\n    boundingLength = symbolBoundingExtent[pxSignIdx];\n  } else if (symbolBoundingData != null) {\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\n  } else if (symbolRepeat) {\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\n  } else {\n    boundingLength = layout[valueDim.wh];\n  }\n\n  output.boundingLength = boundingLength;\n\n  if (symbolRepeat) {\n    output.repeatCutLength = layout[valueDim.wh];\n  }\n\n  output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\n}\n\nfunction convertToCoordOnAxis(axis, value) {\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\n} // Support ['100%', '100%']\n\n\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, output) {\n  var valueDim = opt.valueDim;\n  var categoryDim = opt.categoryDim;\n  var categorySize = Math.abs(layout[categoryDim.wh]);\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\n\n  if (zrUtil.isArray(symbolSize)) {\n    symbolSize = symbolSize.slice();\n  } else {\n    if (symbolSize == null) {\n      symbolSize = '100%';\n    }\n\n    symbolSize = [symbolSize, symbolSize];\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\n  // to complicated to calculate real percent value if considering scaled lineWidth.\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\n  // which can be tolerated in pictorial chart.\n\n\n  symbolSize[categoryDim.index] = parsePercent(symbolSize[categoryDim.index], categorySize);\n  symbolSize[valueDim.index] = parsePercent(symbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\n  output.symbolSize = symbolSize; // If x or y is less than zero, show reversed shape.\n\n  var symbolScale = output.symbolScale = [symbolSize[0] / symbolPatternSize, symbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\n\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\n}\n\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\n  // In symbols are drawn with scale, so do not need to care about the case that width\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\n  // be calculated.\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n\n  if (valueLineWidth) {\n    pathForLineWidth.attr({\n      scale: symbolScale.slice(),\n      rotation: rotation\n    });\n    pathForLineWidth.updateTransform();\n    valueLineWidth /= pathForLineWidth.getLineScale();\n    valueLineWidth *= symbolScale[opt.valueDim.index];\n  }\n\n  output.valueLineWidth = valueLineWidth;\n}\n\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output) {\n  var categoryDim = opt.categoryDim;\n  var valueDim = opt.valueDim;\n  var pxSign = output.pxSign;\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\n  // want symbols to rotate on its center, which should not be translated\n  // when rotating.\n\n  if (symbolRepeat) {\n    var absBoundingLength = Math.abs(boundingLength);\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\n    var hasEndGap = false;\n\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\n      hasEndGap = true;\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\n    }\n\n    symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\n    var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\n    // to ensure that all of the symbols will not be overflow the given area.\n\n    var endFix = hasEndGap ? 0 : symbolMargin * 2; // Both final repeatTimes and final symbolMargin area calculated based on\n    // boundingLength.\n\n    var repeatSpecified = isNumeric(symbolRepeat);\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\n    // entirely in the given layout area.\n\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\n    symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\n    uLenWithMargin = unitLength + symbolMargin * 2;\n    endFix = hasEndGap ? 0 : symbolMargin * 2; // Update repeatTimes when not all symbol will be shown.\n\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\n    }\n\n    pathLen = repeatTimes * uLenWithMargin - endFix;\n    output.repeatTimes = repeatTimes;\n    output.symbolMargin = symbolMargin;\n  }\n\n  var sizeFix = pxSign * (pathLen / 2);\n  var pathPosition = output.pathPosition = [];\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\n\n  if (symbolOffset) {\n    pathPosition[0] += symbolOffset[0];\n    pathPosition[1] += symbolOffset[1];\n  }\n\n  var bundlePosition = output.bundlePosition = [];\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\n  var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\n  var clipShape = output.clipShape = {}; // Consider that symbol may be overflow layout rect.\n\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\n  clipShape[valueDim.xy] = 0;\n  clipShape[valueDim.wh] = layout[valueDim.wh];\n}\n\nfunction createPath(symbolMeta) {\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\n  var path = createSymbol( // Consider texture img, make a big size.\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize, symbolMeta.color);\n  path.attr({\n    culling: true\n  });\n  path.type !== 'image' && path.setStyle({\n    strokeNoScale: true\n  });\n  return path;\n}\n\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var symbolSize = symbolMeta.symbolSize;\n  var valueLineWidth = symbolMeta.valueLineWidth;\n  var pathPosition = symbolMeta.pathPosition;\n  var valueDim = opt.valueDim;\n  var repeatTimes = symbolMeta.repeatTimes || 0;\n  var index = 0;\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\n  eachPath(bar, function (path) {\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n\n    if (index < repeatTimes) {\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\n    } else {\n      updateAttr(path, null, {\n        scale: [0, 0]\n      }, symbolMeta, isUpdate, function () {\n        bundle.remove(path);\n      });\n    }\n\n    updateHoverAnimation(path, symbolMeta);\n    index++;\n  });\n\n  for (; index < repeatTimes; index++) {\n    var path = createPath(symbolMeta);\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n    bundle.add(path);\n    var target = makeTarget(index);\n    updateAttr(path, {\n      position: target.position,\n      scale: [0, 0]\n    }, {\n      scale: target.scale,\n      rotation: target.rotation\n    }, symbolMeta, isUpdate); // FIXME\n    // If all emphasis/normal through action.\n\n    path.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n    updateHoverAnimation(path, symbolMeta);\n  }\n\n  function makeTarget(index) {\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\n    // Otherwise: i = index;\n\n    var pxSign = symbolMeta.pxSign;\n    var i = index;\n\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\n      i = repeatTimes - 1 - index;\n    }\n\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\n    return {\n      position: position,\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    };\n  }\n\n  function onMouseOver() {\n    eachPath(bar, function (path) {\n      path.trigger('emphasis');\n    });\n  }\n\n  function onMouseOut() {\n    eachPath(bar, function (path) {\n      path.trigger('normal');\n    });\n  }\n}\n\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var mainPath = bar.__pictorialMainPath;\n\n  if (!mainPath) {\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\n    bundle.add(mainPath);\n    updateAttr(mainPath, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: [0, 0],\n      rotation: symbolMeta.rotation\n    }, {\n      scale: symbolMeta.symbolScale.slice()\n    }, symbolMeta, isUpdate);\n    mainPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n  } else {\n    updateAttr(mainPath, null, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    }, symbolMeta, isUpdate);\n  }\n\n  updateHoverAnimation(mainPath, symbolMeta);\n\n  function onMouseOver() {\n    this.trigger('emphasis');\n  }\n\n  function onMouseOut() {\n    this.trigger('normal');\n  }\n} // bar rect is used for label.\n\n\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\n  var barRect = bar.__pictorialBarRect;\n\n  if (!barRect) {\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\n      z2: 2,\n      shape: rectShape,\n      silent: true,\n      style: {\n        stroke: 'transparent',\n        fill: 'transparent',\n        lineWidth: 0\n      }\n    });\n    bar.add(barRect);\n  } else {\n    updateAttr(barRect, null, {\n      shape: rectShape\n    }, symbolMeta, isUpdate);\n  }\n}\n\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\n  // If not clip, symbol will be remove and rebuilt.\n  if (symbolMeta.symbolClip) {\n    var clipPath = bar.__pictorialClipPath;\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\n    var valueDim = opt.valueDim;\n    var animationModel = symbolMeta.animationModel;\n    var dataIndex = symbolMeta.dataIndex;\n\n    if (clipPath) {\n      graphic.updateProps(clipPath, {\n        shape: clipShape\n      }, animationModel, dataIndex);\n    } else {\n      clipShape[valueDim.wh] = 0;\n      clipPath = new graphic.Rect({\n        shape: clipShape\n      });\n\n      bar.__pictorialBundle.setClipPath(clipPath);\n\n      bar.__pictorialClipPath = clipPath;\n      var target = {};\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\n        shape: target\n      }, animationModel, dataIndex);\n    }\n  }\n}\n\nfunction getItemModel(data, dataIndex) {\n  var itemModel = data.getItemModel(dataIndex);\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\n  itemModel.isAnimationEnabled = isAnimationEnabled;\n  return itemModel;\n}\n\nfunction getAnimationDelayParams(path) {\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\n  return {\n    index: path.__pictorialAnimationIndex,\n    count: path.__pictorialRepeatTimes\n  };\n}\n\nfunction isAnimationEnabled() {\n  // `animation` prop can be set on itemModel in pictorial bar chart.\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\n}\n\nfunction updateHoverAnimation(path, symbolMeta) {\n  path.off('emphasis').off('normal');\n  var scale = symbolMeta.symbolScale.slice();\n  symbolMeta.hoverAnimation && path.on('emphasis', function () {\n    this.animateTo({\n      scale: [scale[0] * 1.1, scale[1] * 1.1]\n    }, 400, 'elasticOut');\n  }).on('normal', function () {\n    this.animateTo({\n      scale: scale.slice()\n    }, 400, 'elasticOut');\n  });\n}\n\nfunction createBar(data, opt, symbolMeta, isUpdate) {\n  // bar is the main element for each data.\n  var bar = new graphic.Group(); // bundle is used for location and clip.\n\n  var bundle = new graphic.Group();\n  bar.add(bundle);\n  bar.__pictorialBundle = bundle;\n  bundle.attr('position', symbolMeta.bundlePosition.slice());\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\n  bar.__pictorialSymbolMeta = symbolMeta;\n  return bar;\n}\n\nfunction updateBar(bar, opt, symbolMeta) {\n  var animationModel = symbolMeta.animationModel;\n  var dataIndex = symbolMeta.dataIndex;\n  var bundle = bar.__pictorialBundle;\n  graphic.updateProps(bundle, {\n    position: symbolMeta.bundlePosition.slice()\n  }, animationModel, dataIndex);\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, true);\n  createOrUpdateClip(bar, opt, symbolMeta, true);\n}\n\nfunction removeBar(data, dataIndex, animationModel, bar) {\n  // Not show text when animating\n  var labelRect = bar.__pictorialBarRect;\n  labelRect && (labelRect.style.text = null);\n  var pathes = [];\n  eachPath(bar, function (path) {\n    pathes.push(path);\n  });\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\n\n  bar.__pictorialClipPath && (animationModel = null);\n  zrUtil.each(pathes, function (path) {\n    graphic.updateProps(path, {\n      scale: [0, 0]\n    }, animationModel, dataIndex, function () {\n      bar.parent && bar.parent.remove(bar);\n    });\n  });\n  data.setItemGraphicEl(dataIndex, null);\n}\n\nfunction getShapeStr(data, symbolMeta) {\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\n}\n\nfunction eachPath(bar, cb, context) {\n  // Do not use Group#eachChild, because it do not support remove.\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\n    el !== bar.__pictorialBarRect && cb.call(context, el);\n  });\n}\n\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\n\n  if (symbolMeta.symbolClip && !isUpdate) {\n    animationAttrs && el.attr(animationAttrs);\n  } else {\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\n  }\n}\n\nfunction updateCommon(bar, opt, symbolMeta) {\n  var color = symbolMeta.color;\n  var dataIndex = symbolMeta.dataIndex;\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  eachPath(bar, function (path) {\n    // PENDING setColor should be before setStyle!!!\n    path.setColor(color);\n    path.setStyle(zrUtil.defaults({\n      fill: color,\n      opacity: symbolMeta.opacity\n    }, normalStyle));\n    graphic.setHoverStyle(path, hoverStyle);\n    cursorStyle && (path.cursor = cursorStyle);\n    path.z2 = symbolMeta.z2;\n  });\n  var barRectHoverStyle = {};\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\n  var barRect = bar.__pictorialBarRect;\n  setLabel(barRect.style, barRectHoverStyle, itemModel, color, opt.seriesModel, dataIndex, barPositionOutside);\n  graphic.setHoverStyle(barRect, barRectHoverStyle);\n}\n\nfunction toIntTimes(times) {\n  var roundedTimes = Math.round(times); // Escapse accurate error\n\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\n}\n\nvar _default = BarView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar SunburstPiece = require(\"./SunburstPiece\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\nvar SunburstView = ChartView.extend({\n  type: 'sunburst',\n  init: function () {},\n  render: function (seriesModel, ecModel, api, payload) {\n    var that = this;\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var data = seriesModel.getData();\n    var virtualRoot = data.tree.root;\n    var newRoot = seriesModel.getViewRoot();\n    var group = this.group;\n    var renderLabelForZeroData = seriesModel.get('renderLabelForZeroData');\n    var newChildren = [];\n    newRoot.eachNode(function (node) {\n      newChildren.push(node);\n    });\n    var oldChildren = this._oldChildren || [];\n    dualTravel(newChildren, oldChildren);\n    renderRollUp(virtualRoot, newRoot);\n\n    if (payload && payload.highlight && payload.highlight.piece) {\n      var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n      payload.highlight.piece.onEmphasis(highlightPolicy);\n    } else if (payload && payload.unhighlight) {\n      var piece = this.virtualPiece;\n\n      if (!piece && virtualRoot.children.length) {\n        piece = virtualRoot.children[0].piece;\n      }\n\n      if (piece) {\n        piece.onNormal();\n      }\n    }\n\n    this._initEvents();\n\n    this._oldChildren = newChildren;\n\n    function dualTravel(newChildren, oldChildren) {\n      if (newChildren.length === 0 && oldChildren.length === 0) {\n        return;\n      }\n\n      new DataDiffer(oldChildren, newChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n\n      function getKey(node) {\n        return node.getId();\n      }\n\n      function processNode(newId, oldId) {\n        var newNode = newId == null ? null : newChildren[newId];\n        var oldNode = oldId == null ? null : oldChildren[oldId];\n        doRenderNode(newNode, oldNode);\n      }\n    }\n\n    function doRenderNode(newNode, oldNode) {\n      if (!renderLabelForZeroData && newNode && !newNode.getValue()) {\n        // Not render data with value 0\n        newNode = null;\n      }\n\n      if (newNode !== virtualRoot && oldNode !== virtualRoot) {\n        if (oldNode && oldNode.piece) {\n          if (newNode) {\n            // Update\n            oldNode.piece.updateData(false, newNode, 'normal', seriesModel, ecModel); // For tooltip\n\n            data.setItemGraphicEl(newNode.dataIndex, oldNode.piece);\n          } else {\n            // Remove\n            removeNode(oldNode);\n          }\n        } else if (newNode) {\n          // Add\n          var piece = new SunburstPiece(newNode, seriesModel, ecModel);\n          group.add(piece); // For tooltip\n\n          data.setItemGraphicEl(newNode.dataIndex, piece);\n        }\n      }\n    }\n\n    function removeNode(node) {\n      if (!node) {\n        return;\n      }\n\n      if (node.piece) {\n        group.remove(node.piece);\n        node.piece = null;\n      }\n    }\n\n    function renderRollUp(virtualRoot, viewRoot) {\n      if (viewRoot.depth > 0) {\n        // Render\n        if (that.virtualPiece) {\n          // Update\n          that.virtualPiece.updateData(false, virtualRoot, 'normal', seriesModel, ecModel);\n        } else {\n          // Add\n          that.virtualPiece = new SunburstPiece(virtualRoot, seriesModel, ecModel);\n          group.add(that.virtualPiece);\n        }\n\n        if (viewRoot.piece._onclickEvent) {\n          viewRoot.piece.off('click', viewRoot.piece._onclickEvent);\n        }\n\n        var event = function (e) {\n          that._rootToNode(viewRoot.parentNode);\n        };\n\n        viewRoot.piece._onclickEvent = event;\n        that.virtualPiece.on('click', event);\n      } else if (that.virtualPiece) {\n        // Remove\n        group.remove(that.virtualPiece);\n        that.virtualPiece = null;\n      }\n    }\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _initEvents: function () {\n    var that = this;\n\n    var event = function (e) {\n      var targetFound = false;\n      var viewRoot = that.seriesModel.getViewRoot();\n      viewRoot.eachNode(function (node) {\n        if (!targetFound && node.piece && node.piece.childAt(0) === e.target) {\n          var nodeClick = node.getModel().get('nodeClick');\n\n          if (nodeClick === 'rootToNode') {\n            that._rootToNode(node);\n          } else if (nodeClick === 'link') {\n            var itemModel = node.getModel();\n            var link = itemModel.get('link');\n\n            if (link) {\n              var linkTarget = itemModel.get('target', true) || '_blank';\n              window.open(link, linkTarget);\n            }\n          }\n\n          targetFound = true;\n        }\n      });\n    };\n\n    if (this.group._onclickEvent) {\n      this.group.off('click', this.group._onclickEvent);\n    }\n\n    this.group.on('click', event);\n    this.group._onclickEvent = event;\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (node) {\n    if (node !== this.seriesModel.getViewRoot()) {\n      this.api.dispatchAction({\n        type: ROOT_TO_NODE_ACTION,\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        targetNode: node\n      });\n    }\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var treeRoot = seriesModel.getData();\n    var itemLayout = treeRoot.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = SunburstView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar TimelineView = require(\"./TimelineView\");\n\nvar TimelineAxis = require(\"./TimelineAxis\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar PI = Math.PI;\n\nvar _default = TimelineView.extend({\n  type: 'timeline.slider',\n  init: function (ecModel, api) {\n    this.api = api;\n    /**\n     * @private\n     * @type {module:echarts/component/timeline/TimelineAxis}\n     */\n\n    this._axis;\n    /**\n     * @private\n     * @type {module:zrender/core/BoundingRect}\n     */\n\n    this._viewRect;\n    /**\n     * @type {number}\n     */\n\n    this._timer;\n    /**\n     * @type {module:zrender/Element}\n     */\n\n    this._currentPointer;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._labelGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (timelineModel, ecModel, api, payload) {\n    this.model = timelineModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    this.group.removeAll();\n\n    if (timelineModel.get('show', true)) {\n      var layoutInfo = this._layout(timelineModel, api);\n\n      var mainGroup = this._createGroup('mainGroup');\n\n      var labelGroup = this._createGroup('labelGroup');\n      /**\n       * @private\n       * @type {module:echarts/component/timeline/TimelineAxis}\n       */\n\n\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\n\n      timelineModel.formatTooltip = function (dataIndex) {\n        return encodeHTML(axis.scale.getLabel(dataIndex));\n      };\n\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\n      }, this);\n\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\n\n      this._position(layoutInfo, timelineModel);\n    }\n\n    this._doPlayStop();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearTimer();\n\n    this.group.removeAll();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearTimer();\n  },\n  _layout: function (timelineModel, api) {\n    var labelPosOpt = timelineModel.get('label.position');\n    var orient = timelineModel.get('orient');\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\n\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\n    } else if (isNaN(labelPosOpt)) {\n      labelPosOpt = {\n        horizontal: {\n          top: '-',\n          bottom: '+'\n        },\n        vertical: {\n          left: '-',\n          right: '+'\n        }\n      }[orient][labelPosOpt];\n    }\n\n    var labelAlignMap = {\n      horizontal: 'center',\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\n    };\n    var labelBaselineMap = {\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\n      vertical: 'middle'\n    };\n    var rotationMap = {\n      horizontal: 0,\n      vertical: PI / 2\n    }; // Position\n\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\n    var controlModel = timelineModel.getModel('controlStyle');\n    var showControl = controlModel.get('show', true);\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\n\n    var labelRotation = timelineModel.get('label.rotate') || 0;\n    labelRotation = labelRotation * PI / 180; // To radian.\n\n    var playPosition;\n    var prevBtnPosition;\n    var nextBtnPosition;\n    var axisExtent;\n    var controlPosition = controlModel.get('position', true);\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\n    var xLeft = 0;\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\n\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    } else {\n      // 'top' 'right'\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    }\n\n    axisExtent = [xLeft, xRight];\n\n    if (timelineModel.get('inverse')) {\n      axisExtent.reverse();\n    }\n\n    return {\n      viewRect: viewRect,\n      mainLength: mainLength,\n      orient: orient,\n      rotation: rotationMap[orient],\n      labelRotation: labelRotation,\n      labelPosOpt: labelPosOpt,\n      labelAlign: timelineModel.get('label.align') || labelAlignMap[orient],\n      labelBaseline: timelineModel.get('label.verticalAlign') || timelineModel.get('label.baseline') || labelBaselineMap[orient],\n      // Based on mainGroup.\n      playPosition: playPosition,\n      prevBtnPosition: prevBtnPosition,\n      nextBtnPosition: nextBtnPosition,\n      axisExtent: axisExtent,\n      controlSize: controlSize,\n      controlGap: controlGap\n    };\n  },\n  _position: function (layoutInfo, timelineModel) {\n    // Position is be called finally, because bounding rect is needed for\n    // adapt content to fill viewRect (auto adapt offset).\n    // Timeline may be not all in the viewRect when 'offset' is specified\n    // as a number, because it is more appropriate that label aligns at\n    // 'offset' but not the other edge defined by viewRect.\n    var mainGroup = this._mainGroup;\n    var labelGroup = this._labelGroup;\n    var viewRect = layoutInfo.viewRect;\n\n    if (layoutInfo.orient === 'vertical') {\n      // transform to horizontal, inverse rotate by left-top point.\n      var m = matrix.create();\n      var rotateOriginX = viewRect.x;\n      var rotateOriginY = viewRect.y + viewRect.height;\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\n      matrix.rotate(m, m, -PI / 2);\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\n      viewRect = viewRect.clone();\n      viewRect.applyTransform(m);\n    }\n\n    var viewBound = getBound(viewRect);\n    var mainBound = getBound(mainGroup.getBoundingRect());\n    var labelBound = getBound(labelGroup.getBoundingRect());\n    var mainPosition = mainGroup.position;\n    var labelsPosition = labelGroup.position;\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\n    var labelPosOpt = layoutInfo.labelPosOpt;\n\n    if (isNaN(labelPosOpt)) {\n      // '+' or '-'\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\n    } else {\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\n    }\n\n    mainGroup.attr('position', mainPosition);\n    labelGroup.attr('position', labelsPosition);\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\n    setOrigin(mainGroup);\n    setOrigin(labelGroup);\n\n    function setOrigin(targetGroup) {\n      var pos = targetGroup.position;\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\n    }\n\n    function getBound(rect) {\n      // [[xmin, xmax], [ymin, ymax]]\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\n    }\n\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\n    }\n  },\n  _createAxis: function (layoutInfo, timelineModel) {\n    var data = timelineModel.getData();\n    var axisType = timelineModel.get('axisType');\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType); // Customize scale. The `tickValue` is `dataIndex`.\n\n    scale.getTicks = function () {\n      return data.mapArray(['value'], function (value) {\n        return value;\n      });\n    };\n\n    var dataExtent = data.getDataExtent('value');\n    scale.setExtent(dataExtent[0], dataExtent[1]);\n    scale.niceTicks();\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\n    axis.model = timelineModel;\n    return axis;\n  },\n  _createGroup: function (name) {\n    var newGroup = this['_' + name] = new graphic.Group();\n    this.group.add(newGroup);\n    return newGroup;\n  },\n  _renderAxisLine: function (layoutInfo, group, axis, timelineModel) {\n    var axisExtent = axis.getExtent();\n\n    if (!timelineModel.get('lineStyle.show')) {\n      return;\n    }\n\n    group.add(new graphic.Line({\n      shape: {\n        x1: axisExtent[0],\n        y1: 0,\n        x2: axisExtent[1],\n        y2: 0\n      },\n      style: zrUtil.extend({\n        lineCap: 'round'\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\n      silent: true,\n      z2: 1\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisTick: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData(); // Show all ticks, despite ignoring strategy.\n\n    var ticks = axis.scale.getTicks(); // The value is dataIndex, see the costomized scale.\n\n    each(ticks, function (value) {\n      var tickCoord = axis.dataToCoord(value);\n      var itemModel = data.getItemModel(value);\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      var hoverStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var symbolOpt = {\n        position: [tickCoord, 0],\n        onclick: bind(this._changeTimeline, this, value)\n      };\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\n\n      if (itemModel.get('tooltip')) {\n        el.dataIndex = value;\n        el.dataModel = timelineModel;\n      } else {\n        el.dataIndex = el.dataModel = null;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisLabel: function (layoutInfo, group, axis, timelineModel) {\n    var labelModel = axis.getLabelModel();\n\n    if (!labelModel.get('show')) {\n      return;\n    }\n\n    var data = timelineModel.getData();\n    var labels = axis.getViewLabels();\n    each(labels, function (labelItem) {\n      // The tickValue is dataIndex, see the costomized scale.\n      var dataIndex = labelItem.tickValue;\n      var itemModel = data.getItemModel(dataIndex);\n      var normalLabelModel = itemModel.getModel('label');\n      var hoverLabelModel = itemModel.getModel('emphasis.label');\n      var tickCoord = axis.dataToCoord(labelItem.tickValue);\n      var textEl = new graphic.Text({\n        position: [tickCoord, 0],\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\n        onclick: bind(this._changeTimeline, this, dataIndex),\n        silent: false\n      });\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\n        text: labelItem.formattedLabel,\n        textAlign: layoutInfo.labelAlign,\n        textVerticalAlign: layoutInfo.labelBaseline\n      });\n      group.add(textEl);\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderControl: function (layoutInfo, group, axis, timelineModel) {\n    var controlSize = layoutInfo.controlSize;\n    var rotation = layoutInfo.rotation;\n    var itemStyle = timelineModel.getModel('controlStyle').getItemStyle();\n    var hoverStyle = timelineModel.getModel('emphasis.controlStyle').getItemStyle();\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\n    var playState = timelineModel.getPlayState();\n    var inverse = timelineModel.get('inverse', true);\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\n\n    function makeBtn(position, iconPath, onclick, willRotate) {\n      if (!position) {\n        return;\n      }\n\n      var opt = {\n        position: position,\n        origin: [controlSize / 2, 0],\n        rotation: willRotate ? -rotation : 0,\n        rectHover: true,\n        style: itemStyle,\n        onclick: onclick\n      };\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\n      group.add(btn);\n      graphic.setHoverStyle(btn, hoverStyle);\n    }\n  },\n  _renderCurrentPointer: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var currentIndex = timelineModel.getCurrentIndex();\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\n    var me = this;\n    var callback = {\n      onCreate: function (pointer) {\n        pointer.draggable = true;\n        pointer.drift = bind(me._handlePointerDrag, me);\n        pointer.ondragend = bind(me._handlePointerDragend, me);\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\n      },\n      onUpdate: function (pointer) {\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\n      }\n    }; // Reuse when exists, for animation and drag.\n\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\n  },\n  _handlePlayClick: function (nextState) {\n    this._clearTimer();\n\n    this.api.dispatchAction({\n      type: 'timelinePlayChange',\n      playState: nextState,\n      from: this.uid\n    });\n  },\n  _handlePointerDrag: function (dx, dy, e) {\n    this._clearTimer();\n\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\n  },\n  _handlePointerDragend: function (e) {\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\n  },\n  _pointerChangeTimeline: function (mousePos, trigger) {\n    var toCoord = this._toAxisCoord(mousePos)[0];\n\n    var axis = this._axis;\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\n    this._currentPointer.position[0] = toCoord;\n\n    this._currentPointer.dirty();\n\n    var targetDataIndex = this._findNearestTick(toCoord);\n\n    var timelineModel = this.model;\n\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\n      this._changeTimeline(targetDataIndex);\n    }\n  },\n  _doPlayStop: function () {\n    this._clearTimer();\n\n    if (this.model.getPlayState()) {\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\n    }\n\n    function handleFrame() {\n      // Do not cache\n      var timelineModel = this.model;\n\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\n    }\n  },\n  _toAxisCoord: function (vertex) {\n    var trans = this._mainGroup.getLocalTransform();\n\n    return graphic.applyTransform(vertex, trans, true);\n  },\n  _findNearestTick: function (axisCoord) {\n    var data = this.model.getData();\n    var dist = Infinity;\n    var targetDataIndex;\n    var axis = this._axis;\n    data.each(['value'], function (value, dataIndex) {\n      var coord = axis.dataToCoord(value);\n      var d = Math.abs(coord - axisCoord);\n\n      if (d < dist) {\n        dist = d;\n        targetDataIndex = dataIndex;\n      }\n    });\n    return targetDataIndex;\n  },\n  _clearTimer: function () {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  },\n  _changeTimeline: function (nextIndex) {\n    var currentIndex = this.model.getCurrentIndex();\n\n    if (nextIndex === '+') {\n      nextIndex = currentIndex + 1;\n    } else if (nextIndex === '-') {\n      nextIndex = currentIndex - 1;\n    }\n\n    this.api.dispatchAction({\n      type: 'timelineChange',\n      currentIndex: nextIndex,\n      from: this.uid\n    });\n  }\n});\n\nfunction getViewRect(model, api) {\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }, model.get('padding'));\n}\n\nfunction makeIcon(timelineModel, objPath, rect, opts) {\n  var icon = graphic.makePath(timelineModel.get(objPath).replace(/^path:\\/\\//, ''), zrUtil.clone(opts || {}), new BoundingRect(rect[0], rect[1], rect[2], rect[3]), 'center');\n  return icon;\n}\n/**\n * Create symbol or update symbol\n * opt: basic position and event handlers\n */\n\n\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\n  var color = itemStyleModel.get('color');\n\n  if (!symbol) {\n    var symbolType = hostModel.get('symbol');\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\n    symbol.setStyle('strokeNoScale', true);\n    group.add(symbol);\n    callback && callback.onCreate(symbol);\n  } else {\n    symbol.setColor(color);\n    group.add(symbol); // Group may be new, also need to add.\n\n    callback && callback.onUpdate(symbol);\n  } // Style\n\n\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\n  symbol.setStyle(itemStyle); // Transform and events.\n\n  opt = zrUtil.merge({\n    rectHover: true,\n    z2: 100\n  }, opt, true);\n  var symbolSize = hostModel.get('symbolSize');\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n  symbolSize[0] /= 2;\n  symbolSize[1] /= 2;\n  opt.scale = symbolSize;\n  var symbolOffset = hostModel.get('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = opt.position = opt.position || [0, 0];\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = hostModel.get('symbolRotate');\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  symbol.attr(opt); // FIXME\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\n  // getBoundingRect will return wrong result.\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\n  // leverage performance and auto updateTransform)\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\n\n  symbol.updateTransform();\n  return symbol;\n}\n\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\n  if (pointer.dragging) {\n    return;\n  }\n\n  var pointerModel = timelineModel.getModel('checkpointStyle');\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\n\n  if (noAnimation || !pointerModel.get('animation', true)) {\n    pointer.attr({\n      position: [toCoord, 0]\n    });\n  } else {\n    pointer.stopAnimation(true);\n    pointer.animateTo({\n      position: [toCoord, 0]\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n\n    /* eslint-disable */\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n\n    /* eslint-enable */\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embeded for some of the code in this file:\n* The method \"quantile\" was copied from \"d3.js\".\n* (See more details in the comment of the method below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n/* eslint-disable */\n\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/* eslint-enable */\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * This code was copied from \"d3.js\"\n * <https://github.com/d3/d3/blob/9cc9a875e636a1dcf36cc1e07bdf77e1ad6e2c74/src/arrays/quantile.js>.\n * See the license statement at the head of this file.\n * @param {Array.<number>} ascArr\n */\n\n\nfunction quantile(ascArr, p) {\n  var H = (ascArr.length - 1) * p + 1;\n  var h = Math.floor(H);\n  var v = +ascArr[h - 1];\n  var e = H - h;\n  return e ? v + e * (ascArr[h] - v) : v;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.quantile = quantile;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = require(\"../../util/format\");\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\n\nvar _model = require(\"../../util/model\");\n\nvar getTooltipRenderMode = _model.getTooltipRenderMode;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    var tooltipModel = this.ecModel.getComponent('tooltip');\n    var renderModeOption = tooltipModel && tooltipModel.get('renderMode');\n    var renderMode = getTooltipRenderMode(renderModeOption);\n    var mainType = this.mainType;\n    var isSeries = mainType === 'series';\n    return {\n      componentType: mainType,\n      componentSubType: this.subType,\n      componentIndex: this.componentIndex,\n      seriesType: isSeries ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: isSeries ? this.id : null,\n      seriesName: isSeries ? this.name : null,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker({\n        color: color,\n        renderMode: renderMode\n      }),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'timelineChange',\n  event: 'timelineChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.currentIndex != null) {\n    timelineModel.setCurrentIndex(payload.currentIndex);\n\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\n      timelineModel.setPlayState(false);\n    }\n  } // Set normalized currentIndex to payload.\n\n\n  ecModel.resetOption('timeline');\n  return zrUtil.defaults({\n    currentIndex: timelineModel.option.currentIndex\n  }, payload);\n});\necharts.registerAction({\n  type: 'timelinePlayChange',\n  event: 'timelinePlayChanged',\n  update: 'update'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.playState != null) {\n    timelineModel.setPlayState(payload.playState);\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      generateCoord: 'value'\n    });\n  },\n  preventIncremental: function () {\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\n\n    if (coordSysCreator && coordSysCreator.dimensions) {\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\n    }\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar helper = require(\"./helper\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function () {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function (visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function () {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function (targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function (barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function (handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function (handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function (dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function (handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function (itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function (handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function () {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function () {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\n\n    this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function (e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var value = data.get(visualMapModel.getDataDimension(data), el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function () {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function () {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function () {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function (vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function (type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function (e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar dataStack = require(\"./processor/dataStack\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\nrequire(\"./component/dataset\");\n\nvar mapDataStorage = require(\"./coord/geo/mapDataStorage\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.2.1';\nvar dependencies = {\n  zrender: '4.0.6'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this, this._ecEventProcessor = new EventProcessor());\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.error('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToDataUrl();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    scheduler.restoreData(ecModel, payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n    // can be fetched when coord sys updating (consider the barGrid extent fix). But\n    // the drawback is the full coord info can not be fetched. Fortunately this full\n    // coord is not requied in stream mode updater currently.\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n  var excludeSeriesId = payload.excludeSeriesId;\n\n  if (excludeSeriesId != null) {\n    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));\n  } // If dispatchAction before setOption, do nothing.\n\n\n  ecModel && ecModel.eachComponent(condition, function (model) {\n    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {\n      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n    }\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    var handler = function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params;\n      var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\n\n      if (isGlobalOut) {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType, el) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        } // Contract: if params prepared in mouse event,\n      // these properties must be specified:\n      // {\n      //    componentType: string (component main type)\n      //    componentIndex: number\n      // }\n      // Otherwise event query can not work.\n\n\n      if (params) {\n        var componentType = params.componentType;\n        var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\n        // markLine/markPoint/markArea, the componentType is\n        // 'markLine'/'markPoint'/'markArea', but we should better\n        // enable them to be queried by seriesIndex, since their\n        // option is set in each series.\n\n        if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n          componentType = 'series';\n          componentIndex = params.seriesIndex;\n        }\n\n        var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n        var view = model && this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n        params.event = e;\n        params.type = eveName;\n        this._ecEventProcessor.eventInfo = {\n          targetEl: el,\n          packedEvent: params,\n          model: model,\n          view: view\n        };\n        this.trigger(eveName, params);\n      }\n    }; // Consider that some component (like tooltip, brush, ...)\n    // register zr event handler, but user event handler might\n    // do anything, such as call `setOption` or `dispatchAction`,\n    // which probably update any of the content and probably\n    // cause problem if it is called previous other inner handlers.\n\n\n    handler.zrEventfulCallAtLast = true;\n\n    this._zr.on(eveName, handler, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @class\n * Usage of query:\n * `chart.on('click', query, handler);`\n * The `query` can be:\n * + The component type query string, only `mainType` or `mainType.subType`,\n *   like: 'xAxis', 'series', 'xAxis.category' or 'series.line'.\n * + The component query object, like:\n *   `{seriesIndex: 2}`, `{seriesName: 'xx'}`, `{seriesId: 'some'}`,\n *   `{xAxisIndex: 2}`, `{xAxisName: 'xx'}`, `{xAxisId: 'some'}`.\n * + The data query object, like:\n *   `{dataIndex: 123}`, `{dataType: 'link'}`, `{name: 'some'}`.\n * + The other query object (cmponent customized query), like:\n *   `{element: 'some'}` (only available in custom series).\n *\n * Caveat: If a prop in the `query` object is `null/undefined`, it is the\n * same as there is no such prop in the `query` object.\n */\n\n\nfunction EventProcessor() {\n  // These info required: targetEl, packedEvent, model, view\n  this.eventInfo;\n}\n\nEventProcessor.prototype = {\n  constructor: EventProcessor,\n  normalizeQuery: function (query) {\n    var cptQuery = {};\n    var dataQuery = {};\n    var otherQuery = {}; // `query` is `mainType` or `mainType.subType` of component.\n\n    if (zrUtil.isString(query)) {\n      var condCptType = parseClassType(query); // `.main` and `.sub` may be ''.\n\n      cptQuery.mainType = condCptType.main || null;\n      cptQuery.subType = condCptType.sub || null;\n    } // `query` is an object, convert to {mainType, index, name, id}.\n    else {\n        // `xxxIndex`, `xxxName`, `xxxId`, `name`, `dataIndex`, `dataType` is reserved,\n        // can not be used in `compomentModel.filterForExposedEvent`.\n        var suffixes = ['Index', 'Name', 'Id'];\n        var dataKeys = {\n          name: 1,\n          dataIndex: 1,\n          dataType: 1\n        };\n        zrUtil.each(query, function (val, key) {\n          var reserved = false;\n\n          for (var i = 0; i < suffixes.length; i++) {\n            var propSuffix = suffixes[i];\n            var suffixPos = key.lastIndexOf(propSuffix);\n\n            if (suffixPos > 0 && suffixPos === key.length - propSuffix.length) {\n              var mainType = key.slice(0, suffixPos); // Consider `dataIndex`.\n\n              if (mainType !== 'data') {\n                cptQuery.mainType = mainType;\n                cptQuery[propSuffix.toLowerCase()] = val;\n                reserved = true;\n              }\n            }\n          }\n\n          if (dataKeys.hasOwnProperty(key)) {\n            dataQuery[key] = val;\n            reserved = true;\n          }\n\n          if (!reserved) {\n            otherQuery[key] = val;\n          }\n        });\n      }\n\n    return {\n      cptQuery: cptQuery,\n      dataQuery: dataQuery,\n      otherQuery: otherQuery\n    };\n  },\n  filter: function (eventType, query, args) {\n    // They should be assigned before each trigger call.\n    var eventInfo = this.eventInfo;\n\n    if (!eventInfo) {\n      return true;\n    }\n\n    var targetEl = eventInfo.targetEl;\n    var packedEvent = eventInfo.packedEvent;\n    var model = eventInfo.model;\n    var view = eventInfo.view; // For event like 'globalout'.\n\n    if (!model || !view) {\n      return true;\n    }\n\n    var cptQuery = query.cptQuery;\n    var dataQuery = query.dataQuery;\n    return check(cptQuery, model, 'mainType') && check(cptQuery, model, 'subType') && check(cptQuery, model, 'index', 'componentIndex') && check(cptQuery, model, 'name') && check(cptQuery, model, 'id') && check(dataQuery, packedEvent, 'name') && check(dataQuery, packedEvent, 'dataIndex') && check(dataQuery, packedEvent, 'dataType') && (!view.filterForExposedEvent || view.filterForExposedEvent(eventType, query.otherQuery, targetEl, packedEvent));\n\n    function check(query, host, prop, propOnHost) {\n      return query[prop] == null || host[propOnHost || prop] === query[prop];\n    }\n  },\n  afterTrigger: function () {\n    // Make sure the eventInfo wont be used in next trigger.\n    this.eventInfo = null;\n  }\n};\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Array.<Object>|Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example GeoJSON\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n *\n *     $.get('airport.svg', function (svg) {\n *         echarts.registerMap('airport', {\n *             svg: svg\n *         }\n *     });\n *\n *     echarts.registerMap('eu', [\n *         {svg: eu-topographic.svg},\n *         {geoJSON: eu.json}\n *     ])\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  mapDataStorage.registerMap(mapName, geoJson, specialAreas);\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  // For backward compatibility, only return the first one.\n  var records = mapDataStorage.retrieveMap(mapName);\n  return records && records[0] && {\n    geoJson: records[0].geoJSON,\n    specialAreas: records[0].specialAreas\n  };\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar TooltipRichContent = require(\"./TooltipRichContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar _model = require(\"../../util/model\");\n\nvar getTooltipRenderMode = _model.getTooltipRenderMode;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = tooltipModel.get('renderMode');\n    this._renderMode = getTooltipRenderMode(renderMode);\n    var tooltipContent;\n\n    if (this._renderMode === 'html') {\n      tooltipContent = new TooltipContent(api.getDom(), api);\n      this._newLine = '<br/>';\n    } else {\n      tooltipContent = new TooltipRichContent(api);\n      this._newLine = '\\n';\n    }\n\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    var renderMode = this._renderMode;\n    var newLine = this._newLine;\n    var markers = {};\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            var seriesTooltip = series.formatTooltip(dataIndex, true, null, renderMode);\n            var html;\n\n            if (zrUtil.isObject(seriesTooltip)) {\n              html = seriesTooltip.html;\n              var newMarkers = seriesTooltip.markers;\n              zrUtil.merge(markers, newMarkers);\n            } else {\n              html = seriesTooltip;\n            }\n\n            seriesDefaultHTML.push(html);\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n\n        if (renderMode !== 'html') {\n          singleDefaultHTML.push(seriesDefaultHTML.join(newLine));\n        } else {\n          singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + newLine : '') + seriesDefaultHTML.join(newLine));\n        }\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join(this._newLine + this._newLine);\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr, undefined, markers);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var seriesTooltip = dataModel.formatTooltip(dataIndex, false, dataType, this._renderMode);\n    var defaultHtml;\n    var markers;\n\n    if (zrUtil.isObject(seriesTooltip)) {\n      defaultHtml = seriesTooltip.html;\n      markers = seriesTooltip.markers;\n    } else {\n      defaultHtml = seriesTooltip;\n      markers = null;\n    }\n\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markers);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markers) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html, markers, tooltipModel);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html, markers, tooltipModel);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} [option]\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Single = require(\"./Single\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinate system creator.\n */\n\n/**\n * Create single coordinate system and inject it into seriesModel.\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Array.<module:echarts/coord/single/Single>}\n */\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = ecModel.queryComponents({\n        mainType: 'singleAxis',\n        index: seriesModel.get('singleAxisIndex'),\n        id: seriesModel.get('singleAxisId')\n      })[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nCoordinateSystem.register('single', {\n  create: create,\n  dimensions: Single.prototype.dimensions\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      show: true,\n      position: 'top'\n    },\n    itemStyle: {\n      // color and borderColor default to use color from series\n      // color: 'auto'\n      // borderColor: 'auto'\n      borderWidth: 0\n    },\n    emphasis: {\n      label: {\n        show: true,\n        position: 'top'\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Treemap action\n */\nvar noop = function () {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Sunburst action\n */\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\necharts.registerAction({\n  type: ROOT_TO_NODE_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [ROOT_TO_NODE_ACTION], model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\nvar HIGHLIGHT_ACTION = 'sunburstHighlight';\necharts.registerAction({\n  type: HIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleHighlight);\n\n  function handleHighlight(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [HIGHLIGHT_ACTION], model);\n\n    if (targetInfo) {\n      payload.highlight = targetInfo.node;\n    }\n  }\n});\nvar UNHIGHLIGHT_ACTION = 'sunburstUnhighlight';\necharts.registerAction({\n  type: UNHIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleUnhighlight);\n\n  function handleUnhighlight(model, index) {\n    payload.unhighlight = true;\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction Polyline(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createPolyline(lineData, idx, seriesScope);\n}\n\nvar polylineProto = Polyline.prototype;\n\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\n  // var seriesModel = lineData.hostModel;\n  var points = lineData.getItemLayout(idx);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    }\n  });\n  this.add(line);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childAt(0);\n  var target = {\n    shape: {\n      points: lineData.getItemLayout(idx)\n    }\n  };\n  graphic.updateProps(line, target, seriesModel, idx);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var line = this.childAt(0);\n  var itemModel = lineData.getItemModel(idx);\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\n  if (!seriesScope || lineData.hasItemOption) {\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n  }\n\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle;\n  graphic.setHoverStyle(this);\n};\n\npolylineProto.updateLayout = function (lineData, idx) {\n  var polyline = this.childAt(0);\n  polyline.setShape('points', lineData.getItemLayout(idx));\n};\n\nzrUtil.inherits(Polyline, graphic.Group);\nvar _default = Polyline;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  var rangeInfo = coordSys.getRangeInfo();\n  return {\n    coordSys: {\n      type: 'calendar',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      cellWidth: coordSys.getCellWidth(),\n      cellHeight: coordSys.getCellHeight(),\n      rangeInfo: {\n        start: rangeInfo.start,\n        end: rangeInfo.end,\n        weeks: rangeInfo.weeks,\n        dayCount: rangeInfo.allDay\n      }\n    },\n    api: {\n      coord: function (data, clamp) {\n        return coordSys.dataToPoint(data, clamp);\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar EffectSymbol = require(\"../helper/EffectSymbol\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'effectScatter',\n  init: function () {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data);\n    this.group.add(effectSymbolDraw.group);\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    this.group.dirty();\n    var res = pointsLayout().reset(seriesModel);\n\n    if (res.progress) {\n      res.progress({\n        start: 0,\n        end: data.count()\n      }, data);\n    }\n\n    this._symbolDraw.updateLayout(data);\n  },\n  _updateGroupTransform: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.getRoamTransform) {\n      this.group.transform = matrix.clone(coordSys.getRoamTransform());\n      this.group.decomposeTransform();\n    }\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar HeatmapLayer = require(\"./HeatmapLayer\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function (seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    this._incrementalDisplayable = null;\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(seriesModel, api, 0, seriesModel.getData().count());\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys) {\n      this._renderOnCartesianAndCalendar(seriesModel, api, params.start, params.end, true);\n    }\n  },\n  _renderOnCartesianAndCalendar: function (seriesModel, api, start, end, incremental) {\n    var coordSys = seriesModel.coordinateSystem;\n    var width;\n    var height;\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      width = xAxis.getBandWidth();\n      height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle';\n    var hoverItemStyleQuery = 'emphasis.itemStyle';\n    var labelQuery = 'label';\n    var hoverLabelQuery = 'emphasis.label';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel(labelQuery);\n    var hoverLabelModel = seriesModel.getModel(hoverLabelQuery);\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [data.mapDimension('x'), data.mapDimension('y'), data.mapDimension('value')] : [data.mapDimension('time'), data.mapDimension('value')];\n\n    for (var idx = start; idx < end; idx++) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          continue;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          continue;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      rect.incremental = incremental; // PENDING\n\n      if (incremental) {\n        // Rect must use hover layer if it's incremental.\n        rect.useHoverLayer = true;\n      }\n\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    }\n  },\n  _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform();\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var dims = [data.mapDimension('lng'), data.mapDimension('lat'), data.mapDimension('value')];\n    var points = data.mapArray(dims, function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar curveTool = require(\"zrender/lib/core/curve\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol !== 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol !== 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol !== 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol !== 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // 'line' 'shadow' 'cross' 'none'.\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n\n      /* eslint-disable */\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n\n      /* eslint-enable */\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _roamHelper = require(\"./roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {string} [componentType=series]\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateTransform'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\n    // So the center and zoom must be in sync. Include the series not selected by legend\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true] The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\n   * @param {Object} [opt.moveOnMouseMove=true] The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\n   * @param {Object} [opt.moveOnMouseWheel=false] The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      // By default, wheel do not trigger move.\n      moveOnMouseWheel: false,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.isMiddleOrRightButtonOnMouseUpDown(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (!this._dragging || !isAvailableBehavior('moveOnMouseMove', e, this._opt) || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  trigger(this, 'pan', 'moveOnMouseMove', e, {\n    dx: dx,\n    dy: dy,\n    oldX: oldX,\n    oldY: oldY,\n    newX: x,\n    newY: y\n  });\n}\n\nfunction mouseup(e) {\n  if (!eventTool.isMiddleOrRightButtonOnMouseUpDown(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  var shouldZoom = isAvailableBehavior('zoomOnMouseWheel', e, this._opt);\n  var shouldMove = isAvailableBehavior('moveOnMouseWheel', e, this._opt);\n  var wheelDelta = e.wheelDelta;\n  var absWheelDeltaDelta = Math.abs(wheelDelta);\n  var originX = e.offsetX;\n  var originY = e.offsetY; // wheelDelta maybe -0 in chrome mac.\n\n  if (wheelDelta === 0 || !shouldZoom && !shouldMove) {\n    return;\n  } // If both `shouldZoom` and `shouldMove` is true, trigger\n  // their event both, and the final behavior is determined\n  // by event listener themselves.\n\n\n  if (shouldZoom) {\n    // Convenience:\n    // Mac and VM Windows on Mac: scroll up: zoom out.\n    // Windows: scroll up: zoom in.\n    // FIXME: Should do more test in different environment.\n    // wheelDelta is too complicated in difference nvironment\n    // (https://developer.mozilla.org/en-US/docs/Web/Events/mousewheel),\n    // although it has been normallized by zrender.\n    // wheelDelta of mouse wheel is bigger than touch pad.\n    var factor = absWheelDeltaDelta > 3 ? 1.4 : absWheelDeltaDelta > 1 ? 1.2 : 1.1;\n    var scale = wheelDelta > 0 ? factor : 1 / factor;\n    checkPointerAndTrigger(this, 'zoom', 'zoomOnMouseWheel', e, {\n      scale: scale,\n      originX: originX,\n      originY: originY\n    });\n  }\n\n  if (shouldMove) {\n    // FIXME: Should do more test in different environment.\n    var absDelta = Math.abs(wheelDelta); // wheelDelta of mouse wheel is bigger than touch pad.\n\n    var scrollDelta = (wheelDelta > 0 ? 1 : -1) * (absDelta > 3 ? 0.4 : absDelta > 1 ? 0.15 : 0.05);\n    checkPointerAndTrigger(this, 'scrollMove', 'moveOnMouseWheel', e, {\n      scrollDelta: scrollDelta,\n      originX: originX,\n      originY: originY\n    });\n  }\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var scale = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  checkPointerAndTrigger(this, 'zoom', null, e, {\n    scale: scale,\n    originX: e.pinchX,\n    originY: e.pinchY\n  });\n}\n\nfunction checkPointerAndTrigger(controller, eventName, behaviorToCheck, e, contollerEvent) {\n  if (controller.pointerChecker && controller.pointerChecker(e, contollerEvent.originX, contollerEvent.originY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    trigger(controller, eventName, behaviorToCheck, e, contollerEvent);\n  }\n}\n\nfunction trigger(controller, eventName, behaviorToCheck, e, contollerEvent) {\n  // Also provide behavior checker for event listener, for some case that\n  // multiple components share one listener.\n  contollerEvent.isAvailableBehavior = zrUtil.bind(isAvailableBehavior, null, behaviorToCheck, e);\n  controller.trigger(eventName, contollerEvent);\n} // settings: {\n//     zoomOnMouseWheel\n//     moveOnMouseMove\n//     moveOnMouseWheel\n// }\n// The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\n\n\nfunction isAvailableBehavior(behaviorToCheck, e, settings) {\n  var setting = settings[behaviorToCheck];\n  return !behaviorToCheck || setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar DataZoomView = require(\"./DataZoomView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SingleAxis = require(\"./SingleAxis\");\n\nvar axisHelper = require(\"../axisHelper\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinates system.\n */\n\n/**\n * Create a single coordinates system.\n *\n * @param {module:echarts/coord/single/AxisModel} axisModel\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction Single(axisModel, ecModel, api) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.dimension = 'single';\n  /**\n   * Add it just for draw tooltip.\n   *\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = ['single'];\n  /**\n   * @private\n   * @type {module:echarts/coord/single/SingleAxis}.\n   */\n\n  this._axis = null;\n  /**\n   * @private\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n\n  this._init(axisModel, ecModel, api);\n  /**\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n\n\n  this.model = axisModel;\n}\n\nSingle.prototype = {\n  type: 'singleAxis',\n  axisPointerEnabled: true,\n  constructor: Single,\n\n  /**\n   * Initialize single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @private\n   */\n  _init: function (axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data = seriesModel.getData();\n        each(data.mapDimension(this.dimension, true), function (dim) {\n          this._axis.scale.unionExtentFromData(data, dim);\n        }, this);\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  },\n\n  /**\n   * Resize the single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  resize: function (axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _adjustAxis: function () {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.reverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  },\n\n  /**\n   * @param  {module:echarts/coord/single/SingleAxis} axis\n   * @param  {number} coordBase\n   */\n  _updateAxisTransform: function (axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  },\n\n  /**\n   * Get axis.\n   *\n   * @return {module:echarts/coord/single/SingleAxis}\n   */\n  getAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * Get axis, add it just for draw tooltip.\n   *\n   * @return {[type]} [description]\n   */\n  getBaseAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._axis];\n  },\n\n  /**\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function () {\n    return {\n      baseAxes: [this.getAxis()]\n    };\n  },\n\n  /**\n   * If contain point.\n   *\n   * @param  {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  },\n\n  /**\n   * Convert the series data to concrete point.\n   *\n   * @param  {number|Array.<number>} val\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  }\n};\nvar _default = Single;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar parseGeoJson = require(\"./parseGeoJson\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar fixNanhai = require(\"./fix/nanhai\");\n\nvar fixTextCoord = require(\"./fix/textCoord\");\n\nvar fixGeoCoord = require(\"./fix/geoCoord\");\n\nvar fixDiaoyuIsland = require(\"./fix/diaoyuIsland\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Built-in GEO fixer.\nvar inner = makeInner();\nvar _default = {\n  /**\n   * @param {string} mapName\n   * @param {Object} mapRecord {specialAreas, geoJSON}\n   * @return {Object} {regions, boundingRect}\n   */\n  load: function (mapName, mapRecord) {\n    var parsed = inner(mapRecord).parsed;\n\n    if (parsed) {\n      return parsed;\n    }\n\n    var specialAreas = mapRecord.specialAreas || {};\n    var geoJSON = mapRecord.geoJSON;\n    var regions; // https://jsperf.com/try-catch-performance-overhead\n\n    try {\n      regions = geoJSON ? parseGeoJson(geoJSON) : [];\n    } catch (e) {\n      throw new Error('Invalid geoJson format\\n' + e.message);\n    }\n\n    each(regions, function (region) {\n      var regionName = region.name;\n      fixTextCoord(mapName, region);\n      fixGeoCoord(mapName, region);\n      fixDiaoyuIsland(mapName, region); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        region.transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    });\n    fixNanhai(mapName, regions);\n    return inner(mapRecord).parsed = {\n      regions: regions,\n      boundingRect: getBoundingRect(regions)\n    };\n  }\n};\n\nfunction getBoundingRect(regions) {\n  var rect;\n\n  for (var i = 0; i < regions.length; i++) {\n    var regionRect = regions[i].getBoundingRect();\n    rect = rect || regionRect.clone();\n    rect.union(regionRect);\n  }\n\n  return rect;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  // For legend.\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var isLargeRender = seriesModel.pipelineContext.large;\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      colorP: getColor(1, seriesModel),\n      colorN: getColor(-1, seriesModel),\n      borderColorP: getBorderColor(1, seriesModel),\n      borderColorN: getBorderColor(-1, seriesModel)\n    }); // Only visible series has each data be visual encoded\n\n    if (ecModel.isSeriesFiltered(seriesModel)) {\n      return;\n    }\n\n    return !isLargeRender && {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var itemModel = data.getItemModel(dataIndex);\n        var sign = data.getItemLayout(dataIndex).sign;\n        data.setItemVisual(dataIndex, {\n          color: getColor(sign, itemModel),\n          borderColor: getBorderColor(sign, itemModel)\n        });\n      }\n    }\n\n    function getColor(sign, model) {\n      return model.get(sign > 0 ? positiveColorQuery : negativeColorQuery);\n    }\n\n    function getBorderColor(sign, model) {\n      return model.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery);\n    }\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    }\n\n    option.data = dataOpt;\n    return createListSimply(this, ['value']);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      color: 'auto'\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\nvar geoSourceManager = require(\"../../coord/geo/geoSourceManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  getInitialData: function (option) {\n    var data = createListSimply(this, ['value']);\n    var valueDim = data.mapDimension('value');\n    var dataNameMap = zrUtil.createHashMap();\n    var selectTargetList = [];\n    var toAppendNames = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      var name = data.getName(i);\n      dataNameMap.set(name, true);\n      selectTargetList.push({\n        name: name,\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    var geoSource = geoSourceManager.load(this.getMapType(), this.option.nameMap);\n    zrUtil.each(geoSource.regions, function (region) {\n      var name = region.name;\n\n      if (!dataNameMap.get(name)) {\n        selectTargetList.push({\n          name: name\n        });\n        toAppendNames.push(name);\n      }\n    });\n    this.updateSelectedMap(selectTargetList); // Complete data with missing regions. The consequent processes (like visual\n    // map and render) can not be performed without a \"full data\". For example,\n    // find `dataIndex` by name.\n\n    data.appendValues([], toAppendNames);\n    return data;\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function () {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  // _fillOption: function (option, mapName) {\n  // Shallow clone\n  // option = zrUtil.extend({}, option);\n  // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\n  // return option;\n  // },\n  getRawValue: function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    var data = this.getData();\n    return data.get(data.mapDimension('value'), dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n      var valueDim = data.mapDimension('value');\n\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function (dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      show: false,\n      color: '#000'\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      borderWidth: 0.5,\n      borderColor: '#444',\n      areaColor: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    }\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NodeHighlightPolicy = {\n  NONE: 'none',\n  // not downplay others\n  DESCENDANT: 'descendant',\n  ANCESTOR: 'ancestor',\n  SELF: 'self'\n};\nvar DEFAULT_SECTOR_Z = 2;\nvar DEFAULT_TEXT_Z = 4;\n/**\n * Sunburstce of Sunburst including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction SunburstPiece(node, seriesModel, ecModel) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: DEFAULT_SECTOR_Z\n  });\n  sector.seriesIndex = seriesModel.seriesIndex;\n  var text = new graphic.Text({\n    z2: DEFAULT_TEXT_Z,\n    silent: node.getModel('label').get('silent')\n  });\n  this.add(sector);\n  this.add(text);\n  this.updateData(true, node, 'normal', seriesModel, ecModel); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar SunburstPieceProto = SunburstPiece.prototype;\n\nSunburstPieceProto.updateData = function (firstCreate, node, state, seriesModel, ecModel) {\n  this.node = node;\n  node.piece = this;\n  seriesModel = seriesModel || this._seriesModel;\n  ecModel = ecModel || this._ecModel;\n  var sector = this.childAt(0);\n  sector.dataIndex = node.dataIndex;\n  var itemModel = node.getModel();\n  var layout = node.getLayout(); // if (!layout) {\n  //     console.log(node.getLayout());\n  // }\n\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n  var visualColor = getNodeColor(node, seriesModel, ecModel);\n  fillDefaultColor(node, seriesModel, visualColor);\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle();\n  var style;\n\n  if (state === 'normal') {\n    style = normalStyle;\n  } else {\n    var stateStyle = itemModel.getModel(state + '.itemStyle').getItemStyle();\n    style = zrUtil.merge(stateStyle, normalStyle);\n  }\n\n  style = zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: style.fill || visualColor\n  }, style);\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    sector.shape.r = layout.r0;\n    graphic.updateProps(sector, {\n      shape: {\n        r: layout.r\n      }\n    }, seriesModel, node.dataIndex);\n    sector.useStyle(style);\n  } else if (typeof style.fill === 'object' && style.fill.type || typeof sector.style.fill === 'object' && sector.style.fill.type) {\n    // Disable animation for gradient since no interpolation method\n    // is supported for gradient\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel);\n    sector.useStyle(style);\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape,\n      style: style\n    }, seriesModel);\n  }\n\n  this._updateLabel(seriesModel, visualColor, state);\n\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle);\n\n  if (firstCreate) {\n    var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n\n    this._initEvents(sector, node, seriesModel, highlightPolicy);\n  }\n\n  this._seriesModel = seriesModel || this._seriesModel;\n  this._ecModel = ecModel || this._ecModel;\n};\n\nSunburstPieceProto.onEmphasis = function (highlightPolicy) {\n  var that = this;\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      if (that.node === n) {\n        n.piece.updateData(false, n, 'emphasis');\n      } else if (isNodeHighlighted(n, that.node, highlightPolicy)) {\n        n.piece.childAt(0).trigger('highlight');\n      } else if (highlightPolicy !== NodeHighlightPolicy.NONE) {\n        n.piece.childAt(0).trigger('downplay');\n      }\n    }\n  });\n};\n\nSunburstPieceProto.onNormal = function () {\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      n.piece.updateData(false, n, 'normal');\n    }\n  });\n};\n\nSunburstPieceProto.onHighlight = function () {\n  this.updateData(false, this.node, 'highlight');\n};\n\nSunburstPieceProto.onDownplay = function () {\n  this.updateData(false, this.node, 'downplay');\n};\n\nSunburstPieceProto._updateLabel = function (seriesModel, visualColor, state) {\n  var itemModel = this.node.getModel();\n  var normalModel = itemModel.getModel('label');\n  var labelModel = state === 'normal' || state === 'emphasis' ? normalModel : itemModel.getModel(state + '.label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var text = zrUtil.retrieve(seriesModel.getFormattedLabel(this.node.dataIndex, 'normal', null, null, 'label'), this.node.name);\n\n  if (getLabelAttr('show') === false) {\n    text = '';\n  }\n\n  var layout = this.node.getLayout();\n  var labelMinAngle = labelModel.get('minAngle');\n\n  if (labelMinAngle == null) {\n    labelMinAngle = normalModel.get('minAngle');\n  }\n\n  labelMinAngle = labelMinAngle / 180 * Math.PI;\n  var angle = layout.endAngle - layout.startAngle;\n\n  if (labelMinAngle != null && Math.abs(angle) < labelMinAngle) {\n    // Not displaying text when angle is too small\n    text = '';\n  }\n\n  var label = this.childAt(1);\n  graphic.setLabelStyle(label.style, label.hoverStyle || {}, normalModel, labelHoverModel, {\n    defaultText: labelModel.getShallow('show') ? text : null,\n    autoColor: visualColor,\n    useInsideStyle: true\n  });\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var r;\n  var labelPosition = getLabelAttr('position');\n  var labelPadding = getLabelAttr('distance') || 0;\n  var textAlign = getLabelAttr('align');\n\n  if (labelPosition === 'outside') {\n    r = layout.r + labelPadding;\n    textAlign = midAngle > Math.PI / 2 ? 'right' : 'left';\n  } else {\n    if (!textAlign || textAlign === 'center') {\n      r = (layout.r + layout.r0) / 2;\n      textAlign = 'center';\n    } else if (textAlign === 'left') {\n      r = layout.r0 + labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'right';\n      }\n    } else if (textAlign === 'right') {\n      r = layout.r - labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'left';\n      }\n    }\n  }\n\n  label.attr('style', {\n    text: text,\n    textAlign: textAlign,\n    textVerticalAlign: getLabelAttr('verticalAlign') || 'middle',\n    opacity: getLabelAttr('opacity')\n  });\n  var textX = r * dx + layout.cx;\n  var textY = r * dy + layout.cy;\n  label.attr('position', [textX, textY]);\n  var rotateType = getLabelAttr('rotate');\n  var rotate = 0;\n\n  if (rotateType === 'radial') {\n    rotate = -midAngle;\n\n    if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (rotateType === 'tangential') {\n    rotate = Math.PI / 2 - midAngle;\n\n    if (rotate > Math.PI / 2) {\n      rotate -= Math.PI;\n    } else if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (typeof rotateType === 'number') {\n    rotate = rotateType * Math.PI / 180;\n  }\n\n  label.attr('rotation', rotate);\n\n  function getLabelAttr(name) {\n    var stateAttr = labelModel.get(name);\n\n    if (stateAttr == null) {\n      return normalModel.get(name);\n    } else {\n      return stateAttr;\n    }\n  }\n};\n\nSunburstPieceProto._initEvents = function (sector, node, seriesModel, highlightPolicy) {\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  var that = this;\n\n  var onEmphasis = function () {\n    that.onEmphasis(highlightPolicy);\n  };\n\n  var onNormal = function () {\n    that.onNormal();\n  };\n\n  var onDownplay = function () {\n    that.onDownplay();\n  };\n\n  var onHighlight = function () {\n    that.onHighlight();\n  };\n\n  if (seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal).on('downplay', onDownplay).on('highlight', onHighlight);\n  }\n};\n\nzrUtil.inherits(SunburstPiece, graphic.Group);\nvar _default = SunburstPiece;\n/**\n * Get node color\n *\n * @param {TreeNode} node the node to get color\n * @param {module:echarts/model/Series} seriesModel series\n * @param {module:echarts/model/Global} ecModel echarts defaults\n */\n\nfunction getNodeColor(node, seriesModel, ecModel) {\n  // Color from visualMap\n  var visualColor = node.getVisual('color');\n  var visualMetaList = node.getVisual('visualMeta');\n\n  if (!visualMetaList || visualMetaList.length === 0) {\n    // Use first-generation color if has no visualMap\n    visualColor = null;\n  } // Self color or level color\n\n\n  var color = node.getModel('itemStyle').get('color');\n\n  if (color) {\n    return color;\n  } else if (visualColor) {\n    // Color mapping\n    return visualColor;\n  } else if (node.depth === 0) {\n    // Virtual root node\n    return ecModel.option.color[0];\n  } else {\n    // First-generation color\n    var length = ecModel.option.color.length;\n    color = ecModel.option.color[getRootId(node) % length];\n  }\n\n  return color;\n}\n/**\n * Get index of root in sorted order\n *\n * @param {TreeNode} node current node\n * @return {number} index in root\n */\n\n\nfunction getRootId(node) {\n  var ancestor = node;\n\n  while (ancestor.depth > 1) {\n    ancestor = ancestor.parentNode;\n  }\n\n  var virtualRoot = node.getAncestors()[0];\n  return zrUtil.indexOf(virtualRoot.children, ancestor);\n}\n\nfunction isNodeHighlighted(node, activeNode, policy) {\n  if (policy === NodeHighlightPolicy.NONE) {\n    return false;\n  } else if (policy === NodeHighlightPolicy.SELF) {\n    return node === activeNode;\n  } else if (policy === NodeHighlightPolicy.ANCESTOR) {\n    return node === activeNode || node.isAncestorOf(activeNode);\n  } else {\n    return node === activeNode || node.isDescendantOf(activeNode);\n  }\n} // Fix tooltip callback function params.color incorrect when pick a default color\n\n\nfunction fillDefaultColor(node, seriesModel, color) {\n  var data = seriesModel.getData();\n  data.setItemVisual(node.dataIndex, 'color', color);\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Uint8Array */\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar dataFormatMixin = require(\"../model/mixin/dataFormat\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data && !zrUtil.isTypedArray(data)) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.modifyOutputEnd) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @param {string} [renderMode='html'] valid values: 'html' and 'richText'.\n   *                                     'html' is used for rendering tooltip in extra DOM form, and the result\n   *                                     string is used as DOM HTML content.\n   *                                     'richText' is used for rendering tooltip in rich text form, for those where\n   *                                     DOM operation is not supported.\n   * @return {Object} formatted tooltip with `html` and `markers`\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType, renderMode) {\n    var series = this;\n    renderMode = renderMode || 'html';\n    var newLine = renderMode === 'html' ? '<br/>' : '\\n';\n    var isRichText = renderMode === 'richText';\n    var markers = {};\n    var markerId = 0;\n\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var markName = 'sub' + series.seriesIndex + 'at' + markerId;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem',\n          renderMode: renderMode,\n          markerId: markName\n        });\n        var dimHeadStr = typeof dimHead === 'string' ? dimHead : dimHead.content;\n        var valStr = (vertially ? dimHeadStr + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n\n        if (isRichText) {\n          markers[markName] = color;\n          ++markerId;\n        }\n      }\n\n      var newLine = vertially ? isRichText ? '\\n' : '<br/>' : '';\n      var content = newLine + result.join(newLine || ', ');\n      return {\n        renderMode: renderMode,\n        content: content,\n        style: markers\n      };\n    }\n\n    function formatSingleValue(val) {\n      // return encodeHTML(addCommas(val));\n      return {\n        renderMode: renderMode,\n        content: encodeHTML(addCommas(val)),\n        style: markers\n      };\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var content = formattedValue.content;\n    var markName = series.seriesIndex + 'at' + markerId;\n    var colorEl = getTooltipMarker({\n      color: color,\n      type: 'item',\n      renderMode: renderMode,\n      markerId: markName\n    });\n    markers[markName] = color;\n    ++markerId;\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (!modelUtil.isNameSpecified(this)) {\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? newLine : ': ') : '';\n    var colorStr = typeof colorEl === 'string' ? colorEl : colorEl.content;\n    var html = !multipleSeries ? seriesName + colorStr + (name ? encodeHTML(name) + ': ' + content : content) : colorStr + seriesName + content;\n    return {\n      html: html,\n      markers: markers\n    };\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  Using layout algorithm transform the raw data to layout information.\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\n * The layout information about themeriver\n *\n * @param {module:echarts/data/List} data  data in the series\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\n * @param {number} height  value used to compute every series height\n */\n\n\nfunction themeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var timeDim = data.mapDimension('single');\n  var valueDim = data.mapDimension('value');\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get(timeDim, idx));\n      pt[1] = data.get(valueDim, idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\n * Compute the baseLine of the rawdata\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\n *\n * @param  {Array.<Array>} data  the points in each layer\n * @return {Object}\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n  var temp;\n  var base = {};\n\n  for (var i = 0; i < pointNum; ++i) {\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  base.y0 = y0;\n  base.max = max;\n  return base;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./visualMapContinuous\");\n\nrequire(\"./visualMapPiecewise\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var colorList = seriesModel.get('color');\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var areaColor = itemStyleModel.get('areaColor');\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\n    seriesModel.getData().setVisual({\n      'areaColor': areaColor,\n      'color': color\n    });\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/radar/Radar\");\n\nrequire(\"../coord/radar/RadarModel\");\n\nrequire(\"./radar/RadarView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {Object} dataZoomInfo.getRange\n * @param {Function} dataZoomInfo.getRange.pan\n * @param {Function} dataZoomInfo.getRange.zoom\n * @param {Function} dataZoomInfo.getRange.scrollMove\n * @param {boolean} dataZoomInfo.dataZoomModel\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.dataZoomModel.get('throttle', true), 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  zrUtil.each(['pan', 'zoom', 'scrollMove'], function (eventName) {\n    controller.on(eventName, function (event) {\n      var batch = [];\n      zrUtil.each(newRecord.dataZoomInfos, function (info) {\n        // Check whether the behaviors (zoomOnMouseWheel, moveOnMouseMove,\n        // moveOnMouseWheel, ...) enabled.\n        if (!event.isAvailableBehavior(info.dataZoomModel.option)) {\n          return;\n        }\n\n        var method = (info.getRange || {})[eventName];\n        var range = method && method(newRecord.controller, event);\n        !info.dataZoomModel.get('disabled', true) && range && batch.push({\n          dataZoomId: info.dataZoomId,\n          start: range[0],\n          end: range[1]\n        });\n      });\n      batch.length && newRecord.dispatchAction(batch);\n    });\n  });\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType; // DO NOT use reserved word (true, false, undefined) as key literally. Even if encapsulated\n  // as string, it is probably revert to reserved word by compress tool. See #7411.\n\n  var prefix = 'type_';\n  var typePriority = {\n    'type_true': 2,\n    'type_move': 1,\n    'type_false': 0,\n    'type_undefined': -1\n  };\n  var preventDefaultMouseMove = true;\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var dataZoomModel = dataZoomInfo.dataZoomModel;\n    var oneType = dataZoomModel.get('disabled', true) ? false : dataZoomModel.get('zoomLock', true) ? 'move' : true;\n\n    if (typePriority[prefix + oneType] > typePriority[prefix + controlType]) {\n      controlType = oneType;\n    } // Prevent default move event by default. If one false, do not prevent. Otherwise\n    // users may be confused why it does not work when multiple insideZooms exist.\n\n\n    preventDefaultMouseMove &= dataZoomModel.get('preventDefaultMouseMove', true);\n  });\n  return {\n    controlType: controlType,\n    opt: {\n      // RoamController will enable all of these functionalities,\n      // and the final behavior is determined by its event listener\n      // provided by each inside zoom.\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      moveOnMouseWheel: true,\n      preventDefaultMouseMove: !!preventDefaultMouseMove\n    }\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.generateCoordId = generateCoordId;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (typeof targetNode === 'string') {\n      targetNode = root.getNodeById(targetNode);\n    }\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _forceHelper = require(\"./forceHelper\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = require(\"../../util/number\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./GridModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  }); // Key: axisDim_axisIndex, value: boolean, whether onZero target.\n\n  var onZeroRecords = {};\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis, onZeroRecords);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis, onZeroRecords);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis, onZeroRecords) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxisOnZeroOf ? [otherAxisOnZeroOf] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxisOnZeroOf;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxisOnZeroOf = otherAxes[onZeroAxisIndex];\n    }\n  } else {\n    // Find the first available other axis.\n    for (var idx in otherAxes) {\n      if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx]) // Consider that two Y axes on one value axis,\n      // if both onZero, the two Y axes overlap.\n      && !onZeroRecords[getOnZeroRecordKey(otherAxes[idx])]) {\n        otherAxisOnZeroOf = otherAxes[idx];\n        break;\n      }\n    }\n  }\n\n  if (otherAxisOnZeroOf) {\n    onZeroRecords[getOnZeroRecordKey(otherAxisOnZeroOf)] = true;\n  }\n\n  function getOnZeroRecordKey(axis) {\n    return axis.dim + '_' + axis.index;\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  The file used to draw sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar SankeyShape = graphic.extendShape({\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    cpx2: 0,\n    cpy2: 0,\n    extent: 0,\n    orient: ''\n  },\n  buildPath: function (ctx, shape) {\n    var extent = shape.extent;\n    var orient = shape.orient;\n\n    if (orient === 'vertical') {\n      ctx.moveTo(shape.x1, shape.y1);\n      ctx.bezierCurveTo(shape.cpx1, shape.cpy1, shape.cpx2, shape.cpy2, shape.x2, shape.y2);\n      ctx.lineTo(shape.x2 + extent, shape.y2);\n      ctx.bezierCurveTo(shape.cpx2 + extent, shape.cpy2, shape.cpx1 + extent, shape.cpy1, shape.x1 + extent, shape.y1);\n    } else {\n      ctx.moveTo(shape.x1, shape.y1);\n      ctx.bezierCurveTo(shape.cpx1, shape.cpy1, shape.cpx2, shape.cpy2, shape.x2, shape.y2);\n      ctx.lineTo(shape.x2, shape.y2 + extent);\n      ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + extent, shape.cpx1, shape.cpy1 + extent, shape.x1, shape.y1 + extent);\n    }\n\n    ctx.closePath();\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'sankey',\n\n  /**\n   * @private\n   * @type {module:echarts/chart/sankey/SankeySeries}\n   */\n  _model: null,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _focusAdjacencyDisabled: false,\n  render: function (seriesModel, ecModel, api) {\n    var sankeyView = this;\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo; // view width\n\n    var width = layoutInfo.width; // view height\n\n    var height = layoutInfo.height;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    var orient = seriesModel.get('orient');\n    this._model = seriesModel;\n    group.removeAll();\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyShape();\n      curve.dataIndex = edge.dataIndex;\n      curve.seriesIndex = seriesModel.seriesIndex;\n      curve.dataType = 'edge';\n      var lineStyleModel = edge.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var node1Model = edge.node1.getModel();\n      var dragX1 = node1Model.get('localX');\n      var dragY1 = node1Model.get('localY');\n      var n2Layout = edge.node2.getLayout();\n      var node2Model = edge.node2.getModel();\n      var dragX2 = node2Model.get('localX');\n      var dragY2 = node2Model.get('localY');\n      var edgeLayout = edge.getLayout();\n      var x1;\n      var y1;\n      var x2;\n      var y2;\n      var cpx1;\n      var cpy1;\n      var cpx2;\n      var cpy2;\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      curve.shape.orient = orient;\n\n      if (orient === 'vertical') {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + edgeLayout.sy;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + n1Layout.dy;\n        x2 = (dragX2 != null ? dragX2 * width : n2Layout.x) + edgeLayout.ty;\n        y2 = dragY2 != null ? dragY2 * height : n2Layout.y;\n        cpx1 = x1;\n        cpy1 = y1 * (1 - curvature) + y2 * curvature;\n        cpx2 = x2;\n        cpy2 = y1 * curvature + y2 * (1 - curvature);\n      } else {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + n1Layout.dx;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + edgeLayout.sy;\n        x2 = dragX2 != null ? dragX2 * width : n2Layout.x;\n        y2 = (dragY2 != null ? dragY2 * height : n2Layout.y) + edgeLayout.ty;\n        cpx1 = x1 * (1 - curvature) + x2 * curvature;\n        cpy1 = y1;\n        cpx2 = x1 * curvature + x2 * (1 - curvature);\n        cpy2 = y2;\n      }\n\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          break;\n      }\n\n      graphic.setHoverStyle(curve, edge.getModel('emphasis.lineStyle').getItemStyle());\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n    }); // Generate a rect for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var dragX = itemModel.get('localX');\n      var dragY = itemModel.get('localY');\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var rect = new graphic.Rect({\n        shape: {\n          x: dragX != null ? dragX * width : layout.x,\n          y: dragY != null ? dragY * height : layout.y,\n          width: layout.dx,\n          height: layout.dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle()\n      });\n      var hoverStyle = node.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id,\n        isRectText: true\n      });\n      rect.setStyle('fill', node.getVisual('color'));\n      graphic.setHoverStyle(rect, hoverStyle);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      rect.dataType = 'node';\n    });\n    nodeData.eachItemGraphicEl(function (el, dataIndex) {\n      var itemModel = nodeData.getItemModel(dataIndex);\n\n      if (itemModel.get('draggable')) {\n        el.drift = function (dx, dy) {\n          sankeyView._focusAdjacencyDisabled = true;\n          this.shape.x += dx;\n          this.shape.y += dy;\n          this.dirty();\n          api.dispatchAction({\n            type: 'dragNode',\n            seriesId: seriesModel.id,\n            dataIndex: nodeData.getRawIndex(dataIndex),\n            localX: this.shape.x / width,\n            localY: this.shape.y / height\n          });\n        };\n\n        el.ondragend = function () {\n          sankeyView._focusAdjacencyDisabled = false;\n        };\n\n        el.draggable = true;\n        el.cursor = 'move';\n      }\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.off('mouseover').on('mouseover', function () {\n          if (!sankeyView._focusAdjacencyDisabled) {\n            api.dispatchAction({\n              type: 'focusNodeAdjacency',\n              seriesId: seriesModel.id,\n              dataIndex: el.dataIndex\n            });\n          }\n        });\n        el.off('mouseout').on('mouseout', function () {\n          if (!sankeyView._focusAdjacencyDisabled) {\n            api.dispatchAction({\n              type: 'unfocusNodeAdjacency',\n              seriesId: seriesModel.id\n            });\n          }\n        });\n      }\n    });\n    edgeData.eachItemGraphicEl(function (el, dataIndex) {\n      var edgeModel = edgeData.getItemModel(dataIndex);\n\n      if (edgeModel.get('focusNodeAdjacency')) {\n        el.off('mouseover').on('mouseover', function () {\n          if (!sankeyView._focusAdjacencyDisabled) {\n            api.dispatchAction({\n              type: 'focusNodeAdjacency',\n              seriesId: seriesModel.id,\n              edgeDataIndex: el.dataIndex\n            });\n          }\n        });\n        el.off('mouseout').on('mouseout', function () {\n          if (!sankeyView._focusAdjacencyDisabled) {\n            api.dispatchAction({\n              type: 'unfocusNodeAdjacency',\n              seriesId: seriesModel.id\n            });\n          }\n        });\n      }\n    });\n\n    if (!this._data && seriesModel.get('animation')) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  },\n  dispose: function () {},\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var itemModel = data.getItemModel(dataIndex);\n    var edgeDataIndex = payload.edgeDataIndex;\n\n    if (dataIndex == null && edgeDataIndex == null) {\n      return;\n    }\n\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      var focusNodeAdj = itemModel.get('focusNodeAdjacency');\n\n      if (focusNodeAdj === 'outEdges') {\n        zrUtil.each(node.outEdges, function (edge) {\n          if (edge.dataIndex < 0) {\n            return;\n          }\n\n          fadeInItem(edge, lineOpacityPath);\n          fadeInItem(edge.node2, nodeOpacityPath);\n        });\n      } else if (focusNodeAdj === 'inEdges') {\n        zrUtil.each(node.inEdges, function (edge) {\n          if (edge.dataIndex < 0) {\n            return;\n          }\n\n          fadeInItem(edge, lineOpacityPath);\n          fadeInItem(edge.node1, nodeOpacityPath);\n        });\n      } else if (focusNodeAdj === 'allEdges') {\n        zrUtil.each(node.edges, function (edge) {\n          if (edge.dataIndex < 0) {\n            return;\n          }\n\n          fadeInItem(edge, lineOpacityPath);\n          fadeInItem(edge.node1, nodeOpacityPath);\n          fadeInItem(edge.node2, nodeOpacityPath);\n        });\n      }\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getGraph();\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  }\n}); // Add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\n\nvar mapDataStorage = require(\"./mapDataStorage\");\n\nvar geoJSONLoader = require(\"./geoJSONLoader\");\n\nvar geoSVGLoader = require(\"./geoSVGLoader\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar loaders = {\n  geoJSON: geoJSONLoader,\n  svg: geoSVGLoader\n};\nvar _default = {\n  /**\n   * @param {string} mapName\n   * @param {Object} nameMap\n   * @return {Object} source {regions, regionsMap, nameCoordMap, boundingRect}\n   */\n  load: function (mapName, nameMap) {\n    var regions = [];\n    var regionsMap = createHashMap();\n    var nameCoordMap = createHashMap();\n    var boundingRect;\n    var mapRecords = retrieveMap(mapName);\n    each(mapRecords, function (record) {\n      var singleSource = loaders[record.type].load(mapName, record);\n      each(singleSource.regions, function (region) {\n        var regionName = region.name; // Try use the alias in geoNameMap\n\n        if (nameMap && nameMap.hasOwnProperty(regionName)) {\n          region = region.cloneShallow(regionName = nameMap[regionName]);\n        }\n\n        regions.push(region);\n        regionsMap.set(regionName, region);\n        nameCoordMap.set(regionName, region.center);\n      });\n      var rect = singleSource.boundingRect;\n\n      if (rect) {\n        boundingRect ? boundingRect.union(rect) : boundingRect = rect.clone();\n      }\n    });\n    return {\n      regions: regions,\n      regionsMap: regionsMap,\n      nameCoordMap: nameCoordMap,\n      // FIXME Always return new ?\n      boundingRect: boundingRect || new BoundingRect(0, 0, 0, 0)\n    };\n  },\n\n  /**\n   * @param {string} mapName\n   * @param {string} hostKey For cache.\n   * @return {Array.<module:zrender/Element>} Roots.\n   */\n  makeGraphic: makeInvoker('makeGraphic'),\n\n  /**\n   * @param {string} mapName\n   * @param {string} hostKey For cache.\n   */\n  removeGraphic: makeInvoker('removeGraphic')\n};\n\nfunction makeInvoker(methodName) {\n  return function (mapName, hostKey) {\n    var mapRecords = retrieveMap(mapName);\n    var results = [];\n    each(mapRecords, function (record) {\n      var method = loaders[record.type][methodName];\n      method && results.push(method(mapName, record, hostKey));\n    });\n    return results;\n  };\n}\n\nfunction mapNotExistsError(mapName) {}\n\nfunction retrieveMap(mapName) {\n  var mapRecords = mapDataStorage.retrieveMap(mapName) || [];\n  return mapRecords;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./heatmap/HeatmapSeries\");\n\nrequire(\"./heatmap/HeatmapView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n    /**\n     * If first rendering, `contentGroup.position` is [0, 0], which\n     * does not make sense and may cause unexepcted animation if adopted.\n     * @private\n     * @type {boolean}\n     */\n\n    this._isFirstRender = true;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    var isFirstRender = this._isFirstRender;\n    this._isFirstRender = false;\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize, isFirstRender); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel.name, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel.name, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // Should not specify the series name, consider legend controls\n            // more than one pie series.\n            .on('mouseover', curry(dispatchHighlightAction, null, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, null, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType === 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  },\n\n  /**\n   * @protected\n   */\n  remove: function () {\n    this.getContentGroup().removeAll();\n    this._isFirstRender = true;\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n/**\n * @param {Object} option\n * @param {string} [option.type] See visualHandlers.\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n *                                              required when mappingMethod is 'linear'\n * @param {Array.<Object>=} [option.pieceList] [\n *                                             {value: someValue},\n *                                             {interval: [min1, max1], visual: {...}},\n *                                             {interval: [min2, max2]}\n *                                             ],\n *                                            required when mappingMethod is 'piecewise'.\n *                                            Visual for only each piece can be specified.\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n *                                            required when mappingMethod is 'category'.\n *                                            If no option.categories, categories is set\n *                                            as [0, 1, 2, ...].\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n * @param {(Array|Object|*)} [option.visual]  Visual data.\n *                                            when mappingMethod is 'category',\n *                                            visual data can be array or object\n *                                            (like: {cate1: '#222', none: '#fff'})\n *                                            or primary types (which represents\n *                                            defualt category visual), otherwise visual\n *                                            can be array or primary (which will be\n *                                            normalized to array).\n *\n */\n\nvar VisualMapping = function (option) {\n  var mappingMethod = option.mappingMethod;\n  var visualType = option.type;\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n\n  var thisOption = this.option = zrUtil.clone(option);\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.type = visualType;\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.mappingMethod = mappingMethod;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._normalizeData = normalizers[mappingMethod];\n  var visualHandler = visualHandlers[visualType];\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.applyVisual = visualHandler.applyVisual;\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.getColorMapper = visualHandler.getColorMapper;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._doMap = visualHandler._doMap[mappingMethod];\n\n  if (mappingMethod === 'piecewise') {\n    normalizeVisualRange(thisOption);\n    preprocessForPiecewise(thisOption);\n  } else if (mappingMethod === 'category') {\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\n    // which need no more preprocess except normalize visual.\n    : normalizeVisualRange(thisOption, true);\n  } else {\n    // mappingMethod === 'linear' or 'fixed'\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n    normalizeVisualRange(thisOption);\n  }\n};\n\nVisualMapping.prototype = {\n  constructor: VisualMapping,\n  mapValueToVisual: function (value) {\n    var normalized = this._normalizeData(value);\n\n    return this._doMap(normalized, value);\n  },\n  getNormalizer: function () {\n    return zrUtil.bind(this._normalizeData, this);\n  }\n};\nvar visualHandlers = VisualMapping.visualHandlers = {\n  color: {\n    applyVisual: makeApplyVisual('color'),\n\n    /**\n     * Create a mapper function\n     * @return {Function}\n     */\n    getColorMapper: function () {\n      var thisOption = this.option;\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\n        !isNormalized && (value = this._normalizeData(value));\n        return doMapCategory.call(this, value);\n      } : function (value, isNormalized, out) {\n        // If output rgb array\n        // which will be much faster and useful in pixel manipulation\n        var returnRGBArray = !!out;\n        !isNormalized && (value = this._normalizeData(value));\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\n      }, this);\n    },\n    _doMap: {\n      linear: function (normalized) {\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n      },\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  colorHue: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, value);\n  }),\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, value);\n  }),\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, null, value);\n  }),\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyAlpha(color, value);\n  }),\n  opacity: {\n    applyVisual: makeApplyVisual('opacity'),\n    _doMap: makeDoMap([0, 1])\n  },\n  liftZ: {\n    applyVisual: makeApplyVisual('liftZ'),\n    _doMap: {\n      linear: doMapFixed,\n      category: doMapFixed,\n      piecewise: doMapFixed,\n      fixed: doMapFixed\n    }\n  },\n  symbol: {\n    applyVisual: function (value, getter, setter) {\n      var symbolCfg = this.mapValueToVisual(value);\n\n      if (zrUtil.isString(symbolCfg)) {\n        setter('symbol', symbolCfg);\n      } else if (isObject(symbolCfg)) {\n        for (var name in symbolCfg) {\n          if (symbolCfg.hasOwnProperty(name)) {\n            setter(name, symbolCfg[name]);\n          }\n        }\n      }\n    },\n    _doMap: {\n      linear: doMapToArray,\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = doMapToArray.call(this, normalized);\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  symbolSize: {\n    applyVisual: makeApplyVisual('symbolSize'),\n    _doMap: makeDoMap([0, 1])\n  }\n};\n\nfunction preprocessForPiecewise(thisOption) {\n  var pieceList = thisOption.pieceList;\n  thisOption.hasSpecialVisual = false;\n  zrUtil.each(pieceList, function (piece, index) {\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\n    // a visual range, so it does not need to be normalized.\n\n    if (piece.visual != null) {\n      thisOption.hasSpecialVisual = true;\n    }\n  });\n}\n\nfunction preprocessForSpecifiedCategory(thisOption) {\n  // Hash categories.\n  var categories = thisOption.categories;\n  var visual = thisOption.visual;\n  var categoryMap = thisOption.categoryMap = {};\n  each(categories, function (cate, index) {\n    categoryMap[cate] = index;\n  }); // Process visual map input.\n\n  if (!zrUtil.isArray(visual)) {\n    var visualArr = [];\n\n    if (zrUtil.isObject(visual)) {\n      each(visual, function (v, cate) {\n        var index = categoryMap[cate];\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n      });\n    } else {\n      // Is primary type, represents default visual.\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n    }\n\n    visual = setVisualToOption(thisOption, visualArr);\n  } // Remove categories that has no visual,\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n\n\n  for (var i = categories.length - 1; i >= 0; i--) {\n    if (visual[i] == null) {\n      delete categoryMap[categories[i]];\n      categories.pop();\n    }\n  }\n}\n\nfunction normalizeVisualRange(thisOption, isCategory) {\n  var visual = thisOption.visual;\n  var visualArr = [];\n\n  if (zrUtil.isObject(visual)) {\n    each(visual, function (v) {\n      visualArr.push(v);\n    });\n  } else if (visual != null) {\n    visualArr.push(visual);\n  }\n\n  var doNotNeedPair = {\n    color: 1,\n    symbol: 1\n  };\n\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\n    // Do not care visualArr.length === 0, which is illegal.\n    visualArr[1] = visualArr[0];\n  }\n\n  setVisualToOption(thisOption, visualArr);\n}\n\nfunction makePartialColorVisualHandler(applyValue) {\n  return {\n    applyVisual: function (value, getter, setter) {\n      value = this.mapValueToVisual(value); // Must not be array value\n\n      setter('color', applyValue(getter('color'), value));\n    },\n    _doMap: makeDoMap([0, 1])\n  };\n}\n\nfunction doMapToArray(normalized) {\n  var visual = this.option.visual;\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\n}\n\nfunction makeApplyVisual(visualType) {\n  return function (value, getter, setter) {\n    setter(visualType, this.mapValueToVisual(value));\n  };\n}\n\nfunction doMapCategory(normalized) {\n  var visual = this.option.visual;\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\n}\n\nfunction doMapFixed() {\n  return this.option.visual[0];\n}\n\nfunction makeDoMap(sourceExtent) {\n  return {\n    linear: function (normalized) {\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\n    },\n    category: doMapCategory,\n    piecewise: function (normalized, value) {\n      var result = getSpecifiedVisual.call(this, value);\n\n      if (result == null) {\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\n      }\n\n      return result;\n    },\n    fixed: doMapFixed\n  };\n}\n\nfunction getSpecifiedVisual(value) {\n  var thisOption = this.option;\n  var pieceList = thisOption.pieceList;\n\n  if (thisOption.hasSpecialVisual) {\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n    var piece = pieceList[pieceIndex];\n\n    if (piece && piece.visual) {\n      return piece.visual[this.type];\n    }\n  }\n}\n\nfunction setVisualToOption(thisOption, visualArr) {\n  thisOption.visual = visualArr;\n\n  if (thisOption.type === 'color') {\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\n      return zrColor.parse(item);\n    });\n  }\n\n  return visualArr;\n}\n/**\n * Normalizers by mapping methods.\n */\n\n\nvar normalizers = {\n  linear: function (value) {\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\n  },\n  piecewise: function (value) {\n    var pieceList = this.option.pieceList;\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n\n    if (pieceIndex != null) {\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n    }\n  },\n  category: function (value) {\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\n\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n  },\n  fixed: zrUtil.noop\n};\n/**\n * List available visual types.\n *\n * @public\n * @return {Array.<string>}\n */\n\nVisualMapping.listVisualTypes = function () {\n  var visualTypes = [];\n  zrUtil.each(visualHandlers, function (handler, key) {\n    visualTypes.push(key);\n  });\n  return visualTypes;\n};\n/**\n * @public\n */\n\n\nVisualMapping.addVisualHandler = function (name, handler) {\n  visualHandlers[name] = handler;\n};\n/**\n * @public\n */\n\n\nVisualMapping.isValidType = function (visualType) {\n  return visualHandlers.hasOwnProperty(visualType);\n};\n/**\n * Convinent method.\n * Visual can be Object or Array or primary type.\n *\n * @public\n */\n\n\nVisualMapping.eachVisual = function (visual, callback, context) {\n  if (zrUtil.isObject(visual)) {\n    zrUtil.each(visual, callback, context);\n  } else {\n    callback.call(context, visual);\n  }\n};\n\nVisualMapping.mapVisual = function (visual, callback, context) {\n  var isPrimary;\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\n  VisualMapping.eachVisual(visual, function (v, key) {\n    var newVal = callback.call(context, v, key);\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\n  });\n  return newVisual;\n};\n/**\n * @public\n * @param {Object} obj\n * @return {Object} new object containers visual values.\n *                 If no visuals, return null.\n */\n\n\nVisualMapping.retrieveVisuals = function (obj) {\n  var ret = {};\n  var hasVisual;\n  obj && each(visualHandlers, function (h, visualType) {\n    if (obj.hasOwnProperty(visualType)) {\n      ret[visualType] = obj[visualType];\n      hasVisual = true;\n    }\n  });\n  return hasVisual ? ret : null;\n};\n/**\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n *\n * @public\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n * @return {Array.<string>} Sorted visual types.\n */\n\n\nVisualMapping.prepareVisualTypes = function (visualTypes) {\n  if (isObject(visualTypes)) {\n    var types = [];\n    each(visualTypes, function (item, type) {\n      types.push(type);\n    });\n    visualTypes = types;\n  } else if (zrUtil.isArray(visualTypes)) {\n    visualTypes = visualTypes.slice();\n  } else {\n    return [];\n  }\n\n  visualTypes.sort(function (type1, type2) {\n    // color should be front of colorSaturation, colorAlpha, ...\n    // symbol and symbolSize do not matter.\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\n  });\n  return visualTypes;\n};\n/**\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n * Other visuals are only depends on themself.\n *\n * @public\n * @param {string} visualType1\n * @param {string} visualType2\n * @return {boolean}\n */\n\n\nVisualMapping.dependsOn = function (visualType1, visualType2) {\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\n};\n/**\n * @param {number} value\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n *                         Always from small to big.\n * @param {boolean} [findClosestWhenOutside=false]\n * @return {number} index\n */\n\n\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n  var possibleI;\n  var abs = Infinity; // value has the higher priority.\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var pieceValue = pieceList[i].value;\n\n    if (pieceValue != null) {\n      if (pieceValue === value // FIXME\n      // It is supposed to compare value according to value type of dimension,\n      // but currently value type can exactly be string or number.\n      // Compromise for numeric-like string (like '12'), especially\n      // in the case that visualMap.categories is ['22', '33'].\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(pieceValue, i);\n    }\n  }\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var piece = pieceList[i];\n    var interval = piece.interval;\n    var close = piece.close;\n\n    if (interval) {\n      if (interval[0] === -Infinity) {\n        if (littleThan(close[1], value, interval[1])) {\n          return i;\n        }\n      } else if (interval[1] === Infinity) {\n        if (littleThan(close[0], interval[0], value)) {\n          return i;\n        }\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(interval[0], i);\n      findClosestWhenOutside && updatePossible(interval[1], i);\n    }\n  }\n\n  if (findClosestWhenOutside) {\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\n  }\n\n  function updatePossible(val, index) {\n    var newAbs = Math.abs(val - value);\n\n    if (newAbs < abs) {\n      abs = newAbs;\n      possibleI = index;\n    }\n  }\n};\n\nfunction littleThan(close, a, b) {\n  return close ? a <= b : a < b;\n}\n\nvar _default = VisualMapping;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function () {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n    /**\n     * @type {boolean}\n     */\n\n    this._initialized;\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n    data.diff(oldData).add(add).update(update).remove(remove).execute();\n\n    function add(newDataIndex) {\n      var line = addEl(data, dataGroup, newDataIndex, dimensions, coordSys);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    } // First create\n\n\n    if (!this._initialized) {\n      this._initialized = true;\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._initialized = true;\n    this._data = null;\n\n    this._dataGroup.removeAll();\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n\n    for (var dataIndex = taskParams.start; dataIndex < taskParams.end; dataIndex++) {\n      var line = addEl(data, this._dataGroup, dataIndex, dimensions, coordSys);\n      line.incremental = true;\n      updateElCommon(line, data, dataIndex, seriesScope);\n    }\n  },\n  dispose: function () {},\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(data.mapDimension(dimName), dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n  return line;\n}\n\nfunction makeSeriesScope(seriesModel) {\n  var smooth = seriesModel.get('smooth', true);\n  smooth === true && (smooth = DEFAULT_SMOOTH);\n  return {\n    lineStyle: seriesModel.getModel('lineStyle').getLineStyle(),\n    smooth: smooth != null ? smooth : DEFAULT_SMOOTH\n  };\n}\n\nfunction updateElCommon(el, data, dataIndex, seriesScope) {\n  var lineStyle = seriesScope.lineStyle;\n\n  if (data.hasItemOption) {\n    var lineStyleModel = data.getItemModel(dataIndex).getModel('lineStyle');\n    lineStyle = lineStyleModel.getLineStyle();\n  }\n\n  el.useStyle(lineStyle);\n  var elStyle = el.style;\n  elStyle.fill = null; // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n\n  elStyle.stroke = data.getItemVisual(dataIndex, 'color'); // lineStyle.opacity have been set to itemVisual in parallelVisual.\n\n  elStyle.opacity = data.getItemVisual(dataIndex, 'opacity');\n  seriesScope.smooth && (el.shape.smooth = seriesScope.smooth);\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual mapping.\n */\nvar visualDefault = {\n  /**\n   * @public\n   */\n  get: function (visualType, key, isCategory) {\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\n  }\n};\nvar defaultOption = {\n  color: {\n    active: ['#006edd', '#e0ffff'],\n    inactive: ['rgba(0,0,0,0)']\n  },\n  colorHue: {\n    active: [0, 360],\n    inactive: [0, 0]\n  },\n  colorSaturation: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  colorLightness: {\n    active: [0.9, 0.5],\n    inactive: [0, 0]\n  },\n  colorAlpha: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  opacity: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  symbol: {\n    active: ['circle', 'roundRect', 'diamond'],\n    inactive: ['none']\n  },\n  symbolSize: {\n    active: [10, 50],\n    inactive: [0, 0]\n  }\n};\nvar _default = visualDefault;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar Source = require(\"./Source\");\n\nvar _dataProvider = require(\"./helper/dataProvider\");\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float64Array, Int32Array, Uint32Array, Uint16Array */\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar INDEX_NOT_FOUND = -1; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof Float64Array === UNDEFINED ? Array : Float64Array,\n  'int': typeof Int32Array === UNDEFINED ? Array : Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n}; // Caution: MUST not use `new CtorUint32Array(arr, 0, len)`, because the Ctor of array is\n// different from the Ctor of typed array.\n\nvar CtorUint32Array = typeof Uint32Array === UNDEFINED ? Array : Uint32Array;\nvar CtorInt32Array = typeof Int32Array === UNDEFINED ? Array : Int32Array;\nvar CtorUint16Array = typeof Uint16Array === UNDEFINED ? Array : Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\nvar CLONE_PROPERTIES = ['_extent', '_approximateExtent', '_rawExtent'];\n\nfunction transferProperties(target, source) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(source.__wrappedMethods || []), function (propName) {\n    if (source.hasOwnProperty(propName)) {\n      target[propName] = source[propName];\n    }\n  });\n  target.__wrappedMethods = source.__wrappedMethods;\n  zrUtil.each(CLONE_PROPERTIES, function (propName) {\n    target[propName] = zrUtil.clone(source[propName]);\n  });\n  target._calculationInfo = zrUtil.extend(source._calculationInfo);\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *          createInvertedIndices: <boolean>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter;\n  this._dimValueGetterArrayRows = defaultDimValueGetters.arrayRows; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n/**\n * Caution: Can be only called on raw data (before `this._indices` created).\n */\n\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n/**\n * Caution: Can be only called on raw data (before `this._indices` created).\n * This method does not modify `rawData` (`dataProvider`), but only\n * add values to storage.\n *\n * The final count will be increased by `Math.max(values.length, names.length)`.\n *\n * @param {Array.<Array.<*>>} values That is the SourceType: 'arrayRows', like\n *        [\n *            [12, 33, 44],\n *            [NaN, 43, 1],\n *            ['-', 'asdf', 0]\n *        ]\n *        Each item is exaclty cooresponding to a dimension.\n * @param {Array.<string>} [names]\n */\n\n\nlistProto.appendValues = function (values, names) {\n  var chunkSize = this._chunkSize;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimLen = dimensions.length;\n  var rawExtent = this._rawExtent;\n  var start = this.count();\n  var end = start + Math.max(values.length, names ? names.length : 0);\n  var originalChunkCount = this._chunkCount;\n\n  for (var i = 0; i < dimLen; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    prepareChunks(storage, this._dimensionInfos[dim], chunkSize, originalChunkCount, end);\n    this._chunkCount = storage[dim].length;\n  }\n\n  var emptyDataItem = new Array(dimLen);\n\n  for (var idx = start; idx < end; idx++) {\n    var sourceIdx = idx - start;\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimLen; k++) {\n      var dim = dimensions[k];\n\n      var val = this._dimValueGetterArrayRows(values[sourceIdx] || emptyDataItem, dim, sourceIdx, k);\n\n      storage[dim][chunkIndex][chunkOffset] = val;\n      var dimRawExtent = rawExtent[dim];\n      val < dimRawExtent[0] && (dimRawExtent[0] = val);\n      val > dimRawExtent[1] && (dimRawExtent[1] = val);\n    }\n\n    if (names) {\n      this._nameList[idx] = names[sourceIdx];\n    }\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimLen = dimensions.length;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var originalChunkCount = this._chunkCount;\n\n  for (var i = 0; i < dimLen; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    prepareChunks(storage, dimInfo, chunkSize, originalChunkCount, end);\n    this._chunkCount = storage[dim].length;\n  }\n\n  var dataItem = new Array(dimLen);\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    dataItem = rawData.getItem(idx, dataItem); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimLen; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n      var dimRawExtent = rawExtent[dim];\n      val < dimRawExtent[0] && (dimRawExtent[0] = val);\n      val > dimRawExtent[1] && (dimRawExtent[1] = val);\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && name == null) {\n        // If dataItem is {name: ...}, it has highest priority.\n        // That is appropriate for many common cases.\n        if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        } else if (nameDimIdx != null) {\n          var nameDim = dimensions[nameDimIdx];\n          var nameDimChunk = storage[nameDim][chunkIndex];\n\n          if (nameDimChunk) {\n            name = nameDimChunk[chunkOffset];\n            var ordinalMeta = dimensionInfoMap[nameDim].ordinalMeta;\n\n            if (ordinalMeta && ordinalMeta.categories.length) {\n              name = ordinalMeta.categories[name];\n            }\n          }\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareChunks(storage, dimInfo, chunkSize, chunkCount, end) {\n  var DataCtor = dataCtors[dimInfo.type];\n  var lastChunkIndex = chunkCount - 1;\n  var dim = dimInfo.name;\n  var resizeChunkArray = storage[dim][lastChunkIndex];\n\n  if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n    var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n    // within the initial chunkSize.\n\n    for (var j = 0; j < resizeChunkArray.length; j++) {\n      newStore[j] = resizeChunkArray[j];\n    }\n\n    storage[dim][lastChunkIndex] = newStore;\n  } // Create new chunks.\n\n\n  for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n    storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n  }\n}\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorInt32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as INDEX_NOT_FOUND.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = INDEX_NOT_FOUND;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n}\n\nfunction getRawValueFromStore(list, dimIndex, rawIndex) {\n  var val;\n\n  if (dimIndex != null) {\n    var chunkSize = list._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = list.dimensions[dimIndex];\n    var chunk = list._storage[dim][chunkIndex];\n\n    if (chunk) {\n      val = chunk[chunkOffset];\n      var ordinalMeta = list._dimensionInfos[dim].ordinalMeta;\n\n      if (ordinalMeta && ordinalMeta.categories.length) {\n        val = ordinalMeta.categories[val];\n      }\n    }\n  }\n\n  return val;\n}\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  var newIndices;\n  var indices = this._indices;\n\n  if (indices) {\n    var Ctor = indices.constructor;\n    var thisCount = this._count; // `new Array(a, b, c)` is different from `new Uint32Array(a, b, c)`.\n\n    if (Ctor === Array) {\n      newIndices = new Ctor(thisCount);\n\n      for (var i = 0; i < thisCount; i++) {\n        newIndices[i] = indices[i];\n      }\n    } else {\n      newIndices = new Ctor(indices.buffer, 0, thisCount);\n    }\n  } else {\n    var Ctor = getIndicesCtor(this);\n    var newIndices = new Ctor(this.count());\n\n    for (var i = 0; i < newIndices.length; i++) {\n      newIndices[i] = i;\n    }\n  }\n\n  return newIndices;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Get median of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getMedian = function (dim\n/*, stack */\n) {\n  var dimDataArray = []; // map all data of one dimension\n\n  this.each(dim, function (val, idx) {\n    if (!isNaN(val)) {\n      dimDataArray.push(val);\n    }\n  }); // TODO\n  // Use quick select?\n  // immutability & sort\n\n  var sortedDimDataArray = [].concat(dimDataArray).sort(function (a, b) {\n    return a - b;\n  });\n  var len = this.count(); // calculate median\n\n  return len === 0 ? 0 : len % 2 === 1 ? sortedDimDataArray[(len - 1) / 2] : (sortedDimDataArray[len / 2] + sortedDimDataArray[len / 2 - 1]) / 2;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return INDEX_NOT_FOUND;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i\n    /*, stack */\n    );\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || getRawValueFromStore(this, this._nameDimIdx, rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = getRawValueFromStore(list, list._idDimIdx, rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices) {\n    // Extreme optimization for common case. About 2x faster in chrome.\n    var idx = 0;\n\n    if (dimSize === 1) {\n      var dimStorage = this._storage[dimensions[0]];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i]; // NaN will not be filtered. Consider the case, in line chart, empty\n          // value indicates the line should be broken. But for the case like\n          // scatter plot, a data item with empty value will not be rendered,\n          // but the axis extent may be effected if some other dim of the data\n          // item has value. Fortunately it is not a significant negative effect.\n\n          if (val >= min && val <= max || isNaN(val)) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    } else if (dimSize === 2) {\n      var dimStorage = this._storage[dim0];\n      var dimStorage2 = this._storage[dimensions[1]];\n      var min2 = range[dimensions[1]][0];\n      var max2 = range[dimensions[1]][1];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var chunkStorage2 = dimStorage2[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n          var val2 = chunkStorage2[i]; // Do not filter NaN, see comment above.\n\n          if ((val >= min && val <= max || isNaN(val)) && (val2 >= min2 && val2 <= max2 || isNaN(val2))) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    }\n  }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i);\n\n        var val = this._getFast(dim0, rawIndex); // Do not filter NaN, see comment above.\n\n\n        if (val >= min && val <= max || isNaN(val)) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k];\n\n          var val = this._getFast(dim, rawIndex); // Do not filter NaN, see comment above.\n\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      // Notice that we do not reset invertedIndicesMap here, becuase\n      // there is no scenario of mapping or sampling ordinal dimension.\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        list._rawExtent[dim] = getInitialExtent();\n        list._extent[dim] = null;\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    var triggerEvent = titleModel.get('triggerEvent', true);\n    textEl.silent = !link && !triggerEvent;\n    subTextEl.silent = !sublink && !triggerEvent;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    textEl.eventData = subTextEl.eventData = triggerEvent ? {\n      componentType: 'title',\n      componentIndex: titleModel.componentIndex\n    } : null;\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\nvar _default = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n\n    function progress(params, lineData) {\n      var lineCoords = [];\n\n      if (isLarge) {\n        var points;\n        var segCount = params.end - params.start;\n\n        if (isPolyline) {\n          var totalCoordsCount = 0;\n\n          for (var i = params.start; i < params.end; i++) {\n            totalCoordsCount += seriesModel.getLineCoordsCount(i);\n          }\n\n          points = new Float32Array(segCount + totalCoordsCount * 2);\n        } else {\n          points = new Float32Array(segCount * 4);\n        }\n\n        var offset = 0;\n        var pt = [];\n\n        for (var i = params.start; i < params.end; i++) {\n          var len = seriesModel.getLineCoords(i, lineCoords);\n\n          if (isPolyline) {\n            points[offset++] = len;\n          }\n\n          for (var k = 0; k < len; k++) {\n            pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n            points[offset++] = pt[0];\n            points[offset++] = pt[1];\n          }\n        }\n\n        lineData.setLayout('linesPoints', points);\n      } else {\n        for (var i = params.start; i < params.end; i++) {\n          var itemModel = lineData.getItemModel(i);\n          var len = seriesModel.getLineCoords(i, lineCoords);\n          var pts = [];\n\n          if (isPolyline) {\n            for (var j = 0; j < len; j++) {\n              pts.push(coordSys.dataToPoint(lineCoords[j]));\n            }\n          } else {\n            pts[0] = coordSys.dataToPoint(lineCoords[0]);\n            pts[1] = coordSys.dataToPoint(lineCoords[1]);\n            var curveness = itemModel.get('lineStyle.curveness');\n\n            if (+curveness) {\n              pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n            }\n          }\n\n          lineData.setItemLayout(i, pts);\n        }\n      }\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  var timelineOpt = option && option.timeline;\n\n  if (!zrUtil.isArray(timelineOpt)) {\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\n  }\n\n  zrUtil.each(timelineOpt, function (opt) {\n    if (!opt) {\n      return;\n    }\n\n    compatibleEC2(opt);\n  });\n}\n\nfunction compatibleEC2(opt) {\n  var type = opt.type;\n  var ec2Types = {\n    'number': 'value',\n    'time': 'time'\n  }; // Compatible with ec2\n\n  if (ec2Types[type]) {\n    opt.axisType = ec2Types[type];\n    delete opt.type;\n  }\n\n  transferItem(opt);\n\n  if (has(opt, 'controlPosition')) {\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\n\n    if (!has(controlStyle, 'position')) {\n      controlStyle.position = opt.controlPosition;\n    }\n\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\n      controlStyle.show = false;\n      delete controlStyle.position;\n    }\n\n    delete opt.controlPosition;\n  }\n\n  zrUtil.each(opt.data || [], function (dataItem) {\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\n        // In ec2, using name as value.\n        dataItem.value = dataItem.name;\n      }\n\n      transferItem(dataItem);\n    }\n  });\n}\n\nfunction transferItem(opt) {\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\n\n  var label = opt.label || opt.label || {};\n  var labelNormal = label.normal || (label.normal = {});\n  var excludeLabelAttr = {\n    normal: 1,\n    emphasis: 1\n  };\n  zrUtil.each(label, function (value, name) {\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\n      labelNormal[name] = value;\n    }\n  });\n\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\n    label.emphasis = itemStyleEmphasis.label;\n    delete itemStyleEmphasis.label;\n  }\n}\n\nfunction has(obj, attr) {\n  return obj.hasOwnProperty(attr);\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor  module:echarts/coord/single/SingleAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar SingleAxis = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   * - 'category'\n   * - 'value'\n   * - 'time'\n   * - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   *  @type {string}\n   */\n\n  this.position = position || 'bottom';\n  /**\n   * Axis orient\n   *  - 'horizontal'\n   *  - 'vertical'\n   * @type {[type]}\n   */\n\n  this.orient = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\n   * Axis model\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n  model: null,\n\n  /**\n   * Judge the orient of the axis.\n   * @return {boolean}\n   */\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\n   * Convert the local coord(processed by dataToCoord())\n   * to global coord(concrete pixel coord).\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toGlobalCoord: null,\n\n  /**\n   * Convert the global coord to local coord.\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./map/MapSeries\");\n\nrequire(\"./map/MapView\");\n\nrequire(\"../action/geoRoam\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nvar mapSymbolLayout = require(\"./map/mapSymbolLayout\");\n\nvar mapVisual = require(\"./map/mapVisual\");\n\nvar mapDataStatistic = require(\"./map/mapDataStatistic\");\n\nvar backwardCompat = require(\"./map/backwardCompat\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(mapSymbolLayout);\necharts.registerVisual(mapVisual);\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\necharts.registerPreprocessor(backwardCompat);\ncreateDataSelectAction('map', [{\n  type: 'mapToggleSelect',\n  event: 'mapselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'mapSelect',\n  event: 'mapselected',\n  method: 'select'\n}, {\n  type: 'mapUnSelect',\n  event: 'mapunselected',\n  method: 'unSelect'\n}]);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.effectScatter',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    // When to show the effect, option: 'render'|'emphasis'\n    showEffectOn: 'render',\n    // Ripple effect config\n    rippleEffect: {\n      period: 4,\n      // Scale of ripple\n      scale: 2.5,\n      // Brush type can be fill or stroke\n      brushType: 'fill'\n    },\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10 // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    // large: false,\n    // Available when large is true\n    // largeThreshold: 2000,\n    // itemStyle: {\n    //     opacity: 1\n    // }\n\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var valueIdx = this.__valueIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[this.__valueIdx] = points[i + valueIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var valueIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - valueIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __valueIdx: valueIdx\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar prepareLayoutBarSeries = _barGrid.prepareLayoutBarSeries;\nvar makeColumnLayout = _barGrid.makeColumnLayout;\nvar retrieveColumnLayout = _barGrid.retrieveColumnLayout;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max) || scaleType === 'ordinal' && !scale.getOrdinalMeta().categories.length); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n    var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);\n    var isBaseAxisAndHasBarSeries;\n    zrUtil.each(barSeriesModels, function (seriesModel) {\n      isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n    });\n\n    if (isBaseAxisAndHasBarSeries) {\n      // Calculate placement of bars on axis\n      var barWidthAndOffset = makeColumnLayout(barSeriesModels); // Adjust axis min and max to account for overflow\n\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model, barWidthAndOffset) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Get bars on current base axis and calculate min and max overflow\n\n  var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {Function} Label formatter function.\n *         param: {number} tickValue,\n *         param: {number} idx, the index in all ticks.\n *                         If category axis, this param is not requied.\n *         return: {string} label string.\n */\n\n\nfunction makeLabelFormatter(axis) {\n  var labelFormatter = axis.getLabelModel().get('formatter');\n  var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        // For category axis, get raw value; for numeric axis,\n        // get foramtted label like '1,333,444'.\n        val = axis.scale.getLabel(val);\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return labelFormatter;\n  } else if (typeof labelFormatter === 'function') {\n    return function (tickValue, idx) {\n      // The original intention of `idx` is \"the index of the tick in all ticks\".\n      // But the previous implementation of category axis do not consider the\n      // `axisLabel.interval`, which cause that, for example, the `interval` is\n      // `1`, then the ticks \"name5\", \"name7\", \"name9\" are displayed, where the\n      // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep\n      // the definition here for back compatibility.\n      if (categoryTickStart != null) {\n        idx = tickValue - categoryTickStart;\n      }\n\n      return labelFormatter(getAxisRawValue(axis, tickValue), idx);\n    };\n  } else {\n    return function (tick) {\n      return axis.scale.getLabel(tick);\n    };\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {module:zrender/core/BoundingRect} Be null/undefined if no labels.\n */\n\n\nfunction estimateLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var scale = axis.scale;\n\n  if (!axisModel.get('axisLabel.show') || scale.isBlank()) {\n    return;\n  }\n\n  var isCategory = axis.type === 'category';\n  var realNumberScaleTicks;\n  var tickCount;\n  var categoryScaleExtent = scale.getExtent(); // Optimize for large category data, avoid call `getTicks()`.\n\n  if (isCategory) {\n    tickCount = scale.count();\n  } else {\n    realNumberScaleTicks = scale.getTicks();\n    tickCount = realNumberScaleTicks.length;\n  }\n\n  var axisLabelModel = axis.getLabelModel();\n  var labelFormatter = makeLabelFormatter(axis);\n  var rect;\n  var step = 1; // Simple optimization for large amount of labels\n\n  if (tickCount > 40) {\n    step = Math.ceil(tickCount / 40);\n  }\n\n  for (var i = 0; i < tickCount; i += step) {\n    var tickValue = realNumberScaleTicks ? realNumberScaleTicks[i] : categoryScaleExtent[0] + i;\n    var label = labelFormatter(tickValue);\n    var unrotatedSingleRect = axisLabelModel.getTextRect(label);\n    var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n    rect ? rect.union(singleRect) : rect = singleRect;\n  }\n\n  return rect;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n/**\n * @param {module:echarts/src/model/Model} model axisLabelModel or axisTickModel\n * @return {number|String} Can be null|'auto'|number|function\n */\n\n\nfunction getOptionCategoryInterval(model) {\n  var interval = model.get('interval');\n  return interval == null ? 'auto' : interval;\n}\n/**\n * Set `categoryInterval` as 0 implicitly indicates that\n * show all labels reguardless of overlap.\n * @param {Object} axis axisModel.axis\n * @return {boolean}\n */\n\n\nfunction shouldShowAllLabels(axis) {\n  return axis.type === 'category' && getOptionCategoryInterval(axis.getLabelModel()) === 0;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.makeLabelFormatter = makeLabelFormatter;\nexports.getAxisRawValue = getAxisRawValue;\nexports.estimateLabelUnionRect = estimateLabelUnionRect;\nexports.getOptionCategoryInterval = getOptionCategoryInterval;\nexports.shouldShowAllLabels = shouldShowAllLabels;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = require(\"./task\");\n\nvar createTask = _task.createTask;\n\nvar _component = require(\"../util/component\");\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = require(\"../model/Global\");\n\nvar ExtensionAPI = require(\"../ExtensionAPI\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished; // Fix current processors in case that in some rear cases that\n  // processors might be registered after echarts instance created.\n  // Register processors incrementally for a echarts instance is\n  // not supported by this stream architecture.\n\n  var dataProcessorHandlers = this._dataProcessorHandlers = dataProcessorHandlers.slice();\n  var visualHandlers = this._visualHandlers = visualHandlers.slice();\n  this._allHandlers = dataProcessorHandlers.concat(visualHandlers);\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} payload\n */\n\nproto.restoreData = function (ecModel, payload) {\n  // TODO: Only restroe needed series and components, but not all components.\n  // Currently `restoreData` of all of the series and component will be called.\n  // But some independent components like `title`, `legend`, `graphic`, `toolbox`,\n  // `tooltip`, `axisPointer`, etc, do not need series refresh when `setOption`,\n  // and some components like coordinate system, axes, dataZoom, visualMap only\n  // need their target series refresh.\n  // (1) If we are implementing this feature some day, we should consider these cases:\n  // if a data processor depends on a component (e.g., dataZoomProcessor depends\n  // on the settings of `dataZoom`), it should be re-performed if the component\n  // is modified by `setOption`.\n  // (2) If a processor depends on sevral series, speicified by its `getTargetSeries`,\n  // it should be re-performed when the result array of `getTargetSeries` changed.\n  // We use `dependencies` to cover these issues.\n  // (3) How to update target series when coordinate system related components modified.\n  // TODO: simply the dirty mechanism? Check whether only the case here can set tasks dirty,\n  // and this case all of the tasks will be set as dirty.\n  ecModel.restoreData(payload); // Theoretically an overall task not only depends on each of its target series, but also\n  // depends on all of the series.\n  // The overall task is not in pipeline, and `ecModel.restoreData` only set pipeline tasks\n  // dirty. If `getTargetSeries` of an overall task returns nothing, we should also ensure\n  // that the overall task is set as dirty and to be performed, otherwise it probably cause\n  // state chaos. So we have to set dirty of all of the overall tasks manually, otherwise it\n  // probably cause state chaos (consider `dataZoomProcessor`).\n\n  this._stageTaskMap.each(function (taskRecord) {\n    var overallTask = taskRecord.overallTask;\n    overallTask && overallTask.dirty();\n  });\n}; // If seriesModel provided, incremental threshold is check by series data.\n\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.progressiveRender) && task.__idxInPipeline > pipeline.blockIndex;\n  var step = incremental ? pipeline.step : null;\n  var modDataCount = pCtx && pCtx.modDataCount;\n  var modBy = modDataCount != null ? Math.ceil(modDataCount / step) : null;\n  return {\n    step: step,\n    modBy: modBy,\n    modDataCount: modDataCount\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count(); // `progressiveRender` means that can render progressively in each\n  // animation frame. Note that some types of series do not provide\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\n  // use the term `incremental` but not `progressive` to describe the\n  // case that `chart.appendData`.\n\n  var progressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold'); // TODO: modDataCount should not updated if `appendData`, otherwise cause whole repaint.\n  // see `test/candlestick-large3.html`\n\n  var modDataCount = seriesModel.get('progressiveChunkMode') === 'mod' ? dataLen : null;\n  seriesModel.pipelineContext = pipeline.context = {\n    progressiveRender: progressiveRender,\n    modDataCount: modDataCount,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      blockIndex: -1,\n      step: Math.round(progressive || 700),\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function () {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each(this._allHandlers, function (handler) {\n    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (ecModel, payload, opt) {\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.blockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var modifyOutputEnd = stageHandler.modifyOutputEnd; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId);\n\n    if (!stub) {\n      stub = agentStubMap.set(pipelineId, createTask({\n        reset: stubReset,\n        onDirty: stubOnDirty\n      })); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n    }\n\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      modifyOutputEnd: modifyOutputEnd\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose(); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n  return resetDefines.length > 1 ? map(resetDefines, function (v, idx) {\n    return makeSeriesTaskProgress(idx);\n  }) : singleSeriesTaskProgress;\n}\n\nvar singleSeriesTaskProgress = makeSeriesTaskProgress(0);\n\nfunction makeSeriesTaskProgress(resetDefineIdx) {\n  return function (params, context) {\n    var data = context.data;\n    var resetDefine = context.resetDefines[resetDefineIdx];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  };\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  /* eslint-disable */\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n  /* eslint-enable */\n\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Polyline = require(\"./Polyline\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar EffectLine = require(\"./EffectLine\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:echarts/chart/helper/EffectLine}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar formatUtil = require(\"../../util/format\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar geoCoordMap = {\n  'Russia': [100, 60],\n  'United States': [-99, 38],\n  'United States of America': [-99, 38]\n};\n\nfunction _default(mapType, region) {\n  if (mapType === 'world') {\n    var geoCoord = geoCoordMap[region.name];\n\n    if (geoCoord) {\n      var cp = region.center;\n      cp[0] = geoCoord[0];\n      cp[1] = geoCoord[1];\n    }\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar _default = echarts.extendComponentView({\n  type: 'radar',\n  render: function (radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  },\n  _buildAxes: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  },\n  _buildSplitLineAndArea: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i].coord\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i].coord,\n              r: ticksRadius[i + 1].coord\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord.coord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {}\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColors[idx % splitAreaColors.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColors[idx % splitLineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"../component/singleAxis\");\n\nrequire(\"./themeRiver/ThemeRiverSeries\");\n\nrequire(\"./themeRiver/ThemeRiverView\");\n\nvar themeRiverLayout = require(\"./themeRiver/themeRiverLayout\");\n\nvar themeRiverVisual = require(\"./themeRiver/themeRiverVisual\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(themeRiverLayout);\necharts.registerVisual(themeRiverVisual);\necharts.registerProcessor(dataFilter('themeRiver'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransformable = new TransformDummy();\n  this._rawTransformable = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function (x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var rawTransform = this._rawTransformable;\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function (centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function () {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function () {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function () {\n    return this._roamTransformable.getLocalTransform();\n  },\n\n  /**\n   * Remove roam\n   */\n  _updateCenterAndZoom: function () {\n    // Must update after view transform updated\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\n    var roamTransform = this._roamTransformable;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, rawTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function () {\n    var roamTransformable = this._roamTransformable;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.parent = roamTransformable;\n    roamTransformable.updateTransform();\n    rawTransformable.updateTransform();\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n    this._rawTransform = rawTransformable.getLocalTransform();\n    this.invTransform = this.invTransform || [];\n    matrix.invert(this.invTransform, this.transform);\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function () {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    var transform = noRoam ? this._rawTransform : this.transform;\n    out = out || [];\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar View = require(\"../../coord/View\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file This file used to draw tree view.\n * @author Deqing Li(annong035@gmail.com)\n */\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    /**\n     * @private\n     * @type {module:echarts/componet/helper/RoamController}\n     */\n\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: this.group\n    };\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    this._updateViewCoordSys(seriesModel);\n\n    this._updateController(seriesModel, ecModel, api);\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.getOrient(),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // Create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // Update node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n      }\n    }).execute();\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n\n    this._updateNodeAndLinkScale(seriesModel);\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  _updateViewCoordSys: function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    data.each(function (idx) {\n      var layout = data.getItemLayout(idx);\n\n      if (layout && !isNaN(layout.x) && !isNaN(layout.y)) {\n        points.push([+layout.x, +layout.y]);\n      }\n    });\n    var min = [];\n    var max = [];\n    bbox.fromPoints(points, min, max); // If width or height is 0\n\n    if (max[0] - min[0] === 0) {\n      max[0] += 1;\n      min[0] -= 1;\n    }\n\n    if (max[1] - min[1] === 0) {\n      max[1] += 1;\n      min[1] -= 1;\n    }\n\n    var viewCoordSys = seriesModel.coordinateSystem = new View();\n    viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n    viewCoordSys.setBoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n    viewCoordSys.setCenter(seriesModel.get('center'));\n    viewCoordSys.setZoom(seriesModel.get('zoom')); // Here we use viewCoordSys just for computing the 'position' and 'scale' of the group\n\n    this.group.attr({\n      position: viewCoordSys.position,\n      scale: viewCoordSys.scale\n    });\n    this._viewCoordSys = viewCoordSys;\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }, this).on('zoom', function (e) {\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n\n      this._updateNodeAndLinkScale(seriesModel);\n    }, this);\n  },\n  _updateNodeAndLinkScale: function (seriesModel) {\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0,\n          strokeNoScale: true\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n  var x1;\n  var x2;\n  var y1;\n  var y2;\n\n  if (seriesScope.layout === 'radial') {\n    x1 = sourceLayout.rawX;\n    y1 = sourceLayout.rawY;\n    x2 = targetLayout.rawX;\n    y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    x1 = sourceLayout.x;\n    y1 = sourceLayout.y;\n    x2 = targetLayout.x;\n    y2 = targetLayout.y;\n\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n  }\n\n  return {\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2,\n    cpx1: cpx1,\n    cpy1: cpy1,\n    cpx2: cpx2,\n    cpy2: cpy2\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5 // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual encoding for themeRiver view\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var rawData = seriesModel.getRawData();\n    var colorList = seriesModel.get('color');\n    var idxMap = createHashMap();\n    data.each(function (idx) {\n      idxMap.set(data.getRawIndex(idx), idx);\n    });\n    rawData.each(function (rawIndex) {\n      var name = rawData.getName(rawIndex);\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\n      rawData.setItemVisual(rawIndex, 'color', color);\n      var idx = idxMap.get(rawIndex);\n\n      if (idx != null) {\n        data.setItemVisual(idx, 'color', color);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar concatArray = _util.concatArray;\nvar mergeAll = _util.mergeAll;\nvar map = _util.map;\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Uint32Array, Float64Array, Float32Array */\nvar Uint32Arr = typeof Uint32Array === 'undefined' ? Array : Uint32Array;\nvar Float64Arr = typeof Float64Array === 'undefined' ? Array : Float64Array;\n\nfunction compatEc2(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    seriesOpt.data = map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeries = SeriesModel.extend({\n  type: 'series.lines',\n  dependencies: ['grid', 'polar'],\n  visualColorAccessPath: 'lineStyle.color',\n  init: function (option) {\n    // The input data may be null/undefined.\n    option.data = option.data || []; // Not using preprocessor because mergeOption may not have series.type\n\n    compatEc2(option);\n\n    var result = this._processFlatCoordsArray(option.data);\n\n    this._flatCoords = result.flatCoords;\n    this._flatCoordsOffset = result.flatCoordsOffset;\n\n    if (result.flatCoords) {\n      option.data = new Float32Array(result.count);\n    }\n\n    LinesSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function (option) {\n    // The input data may be null/undefined.\n    option.data = option.data || [];\n    compatEc2(option);\n\n    if (option.data) {\n      // Only update when have option data to merge.\n      var result = this._processFlatCoordsArray(option.data);\n\n      this._flatCoords = result.flatCoords;\n      this._flatCoordsOffset = result.flatCoordsOffset;\n\n      if (result.flatCoords) {\n        option.data = new Float32Array(result.count);\n      }\n    }\n\n    LinesSeries.superApply(this, 'mergeOption', arguments);\n  },\n  appendData: function (params) {\n    var result = this._processFlatCoordsArray(params.data);\n\n    if (result.flatCoords) {\n      if (!this._flatCoords) {\n        this._flatCoords = result.flatCoords;\n        this._flatCoordsOffset = result.flatCoordsOffset;\n      } else {\n        this._flatCoords = concatArray(this._flatCoords, result.flatCoords);\n        this._flatCoordsOffset = concatArray(this._flatCoordsOffset, result.flatCoordsOffset);\n      }\n\n      params.data = new Float32Array(result.count);\n    }\n\n    this.getRawData().appendData(params.data);\n  },\n  _getCoordsFromItemModel: function (idx) {\n    var itemModel = this.getData().getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\n    return coords;\n  },\n  getLineCoordsCount: function (idx) {\n    if (this._flatCoordsOffset) {\n      return this._flatCoordsOffset[idx * 2 + 1];\n    } else {\n      return this._getCoordsFromItemModel(idx).length;\n    }\n  },\n  getLineCoords: function (idx, out) {\n    if (this._flatCoordsOffset) {\n      var offset = this._flatCoordsOffset[idx * 2];\n      var len = this._flatCoordsOffset[idx * 2 + 1];\n\n      for (var i = 0; i < len; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = this._flatCoords[offset + i * 2];\n        out[i][1] = this._flatCoords[offset + i * 2 + 1];\n      }\n\n      return len;\n    } else {\n      var coords = this._getCoordsFromItemModel(idx);\n\n      for (var i = 0; i < coords.length; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = coords[i][0];\n        out[i][1] = coords[i][1];\n      }\n\n      return coords.length;\n    }\n  },\n  _processFlatCoordsArray: function (data) {\n    var startOffset = 0;\n\n    if (this._flatCoords) {\n      startOffset = this._flatCoords.length;\n    } // Stored as a typed array. In format\n    // Points Count(2) | x | y | x | y | Points Count(3) | x |  y | x | y | x | y |\n\n\n    if (typeof data[0] === 'number') {\n      var len = data.length; // Store offset and len of each segment\n\n      var coordsOffsetAndLenStorage = new Uint32Arr(len);\n      var coordsStorage = new Float64Arr(len);\n      var coordsCursor = 0;\n      var offsetCursor = 0;\n      var dataCount = 0;\n\n      for (var i = 0; i < len;) {\n        dataCount++;\n        var count = data[i++]; // Offset\n\n        coordsOffsetAndLenStorage[offsetCursor++] = coordsCursor + startOffset; // Len\n\n        coordsOffsetAndLenStorage[offsetCursor++] = count;\n\n        for (var k = 0; k < count; k++) {\n          var x = data[i++];\n          var y = data[i++];\n          coordsStorage[coordsCursor++] = x;\n          coordsStorage[coordsCursor++] = y;\n\n          if (i > len) {}\n        }\n      }\n\n      return {\n        flatCoordsOffset: new Uint32Array(coordsOffsetAndLenStorage.buffer, 0, offsetCursor),\n        flatCoords: coordsStorage,\n        count: dataCount\n      };\n    }\n\n    return {\n      flatCoordsOffset: null,\n      flatCoords: null,\n      count: data.length\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    var lineData = new List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var html = [];\n    fromName != null && html.push(fromName);\n    toName != null && html.push(toName);\n    return encodeHTML(html.join(' > '));\n  },\n  preventIncremental: function () {\n    return !!this.get('effect.show');\n  },\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      return this.option.large ? 1e4 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      return this.option.large ? 2e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      // Animation delay. support callback\n      // delay: 0,\n      // If move with constant speed px/sec\n      // period will be ignored if this property is > 0,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      // Length of trail, 0 - 1\n      trailLength: 0.2 // Same with lineStyle.color\n      // color\n\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // If lines are polyline\n    // polyline not support curveness, label, animation\n    polyline: false,\n    label: {\n      show: false,\n      position: 'end' // distance: 5,\n      // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    lineStyle: {\n      opacity: 0.5\n    }\n  }\n});\nvar _default = LinesSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar layout = require(\"../../util/layout\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'visualMap',\n\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n  autoPositionValues: {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  },\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/visualMap/visualMapModel}\n     */\n\n    this.visualMapModel;\n  },\n\n  /**\n   * @protected\n   */\n  render: function (visualMapModel, ecModel, api, payload) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender.apply(this, arguments);\n  },\n\n  /**\n   * @protected\n   */\n  renderBackground: function (group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new graphic.Rect({\n      z2: -1,\n      // Lay background rect on the lowest layer.\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  },\n\n  /**\n   * @protected\n   * @param {number} targetValue can be Infinity or -Infinity\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param {Object} [opts]\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n  getControllerVisual: function (targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  },\n\n  /**\n   * @protected\n   */\n  positionGroup: function (group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  },\n\n  /**\n   * @protected\n   * @abstract\n   */\n  doRender: zrUtil.noop\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData; // Do not support update layout in incremental mode.\n\n  if (!lineData) {\n    return;\n  }\n\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n      lineData.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/ContinuousModel\");\n\nrequire(\"./visualMap/ContinuousView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar MapDraw = require(\"../helper/MapDraw\");\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'geo',\n  init: function (ecModel, api) {\n    var mapDraw = new MapDraw(api, true);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n  },\n  render: function (geoModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    this.group.silent = geoModel.get('silent');\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction IndicatorAxis(dim, scale, radiusExtent) {\n  Axis.call(this, dim, scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'value';\n  this.angle = 0;\n  /**\n   * Indicator name\n   * @type {string}\n   */\n\n  this.name = '';\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.model;\n}\n\nzrUtil.inherits(IndicatorAxis, Axis);\nvar _default = IndicatorAxis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Backward compat for radar chart in 2\nfunction _default(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nrequire(\"./AxisModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function (axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/RadiusAxisView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar View = require(\"../../coord/View\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Where to create the simple view coordinate system\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n// FIXME consider the case of merge option, where axes options are not exists.\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom; // FIXME: If add dataZoom when setOption in merge mode,\n      // no axis info to be added. See `test/dataZoom-extreme.html`\n\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices !== 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices !== 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar ComponentView = require(\"../../view/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkAreaModel\");\n\nrequire(\"./marker/MarkAreaView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label',\n    // FIXME\n    // Temporary solution for `focusNodeAdjacency`.\n    // line label do not use the opacity of lineStyle.\n    lineLabelOriginalOpacity: 1\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n    labelModel = itemModel.getModel('label');\n    hoverLabelModel = itemModel.getModel('emphasis.label');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var baseText; // FIXME: the logic below probably should be merged to `graphic.setLabelStyle`.\n\n  if (showLabel || hoverShowLabel) {\n    defaultLabelColor = visualColor || '#000';\n    baseText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\n\n    if (baseText == null) {\n      var rawVal = seriesModel.getRawValue(idx);\n      baseText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    }\n  }\n\n  var normalText = showLabel ? baseText : null;\n  var emphasisText = hoverShowLabel ? zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), baseText) : null;\n  var labelStyle = label.style; // Always set `textStyle` even if `normalStyle.text` is null, because default\n  // values have to be set on `normalStyle`.\n\n  if (normalText != null || emphasisText != null) {\n    graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  }\n\n  if (emphasisText != null) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * Get series list before filtered by type.\n   * FIXME: rename to getRawSeriesByType?\n   *\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  // PENDING\n  // NOT use `colorLayer` in theme if option has `color`\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar layoutUtil = require(\"../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// -------------\n// Preprocessor\n// -------------\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // info: custom info. enables user to mount some info on elements and use them\n    //      in event handlers. Update them only when user specified, otherwise, remain.\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   */\n  _updateElements: function (graphicModel) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n      var elOptionStyle = elOption.style;\n\n      if (elOption.type === 'text' && elOptionStyle) {\n        // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidth = elOption.width;\n        el.__ecGraphicHeight = elOption.height;\n        setEventData(el, graphicModel, elOption);\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap; // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: api.getWidth(),\n        height: api.getHeight()\n      } : {\n        // Like 'position:absolut' in css, default 0.\n        width: parentEl.__ecGraphicWidth || 0,\n        height: parentEl.__ecGraphicHeight || 0\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}\n\nfunction setEventData(el, graphicModel, elOption) {\n  var eventData = el.eventData; // Simple optimize for large amount of elements that no need event.\n\n  if (!el.silent && !el.ignore && !eventData) {\n    eventData = el.eventData = {\n      componentType: 'graphic',\n      componentIndex: graphicModel.componentIndex,\n      name: el.name\n    };\n  } // `elOption.info` enables user to mount some info on\n  // elements and use them in event handlers.\n\n\n  if (eventData) {\n    eventData.info = el.info;\n  }\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    // For legend.\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      var keepAspect = seriesModel.get('symbolKeepAspect');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize,\n        symbolKeepAspect: keepAspect\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n          var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n\n          if (itemSymbolKeepAspect != null) {\n            data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar groupData = _model.groupData;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file The layout algorithm of sankey view\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    var orient = seriesModel.get('orient');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations, orient);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations, orient) {\n  computeNodeBreadths(nodes, edges, nodeWidth, width, height, orient);\n  computeNodeDepths(nodes, edges, height, width, nodeGap, iterations, orient);\n  computeEdgeDepths(nodes, orient);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var value = Math.max(value1, value2);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node.\n *\n * Here we use Kahn algorithm to detect cycle when we traverse\n * the node to computer the initial x position.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, edges, nodeWidth, width, height, orient) {\n  // Used to mark whether the edge is deleted. if it is deleted,\n  // the value is 0, otherwise it is 1.\n  var remainEdges = []; // Storage each node's indegree.\n\n  var indegreeArr = []; //Used to storage the node with indegree is equal to 0.\n\n  var zeroIndegrees = [];\n  var nextNode = [];\n  var x = 0;\n  var kx = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    remainEdges[i] = 1;\n  }\n\n  for (i = 0; i < nodes.length; i++) {\n    indegreeArr[i] = nodes[i].inEdges.length;\n\n    if (indegreeArr[i] === 0) {\n      zeroIndegrees.push(nodes[i]);\n    }\n  }\n\n  while (zeroIndegrees.length) {\n    for (var idx = 0; idx < zeroIndegrees.length; idx++) {\n      var node = zeroIndegrees[idx];\n\n      if (orient === 'vertical') {\n        node.setLayout({\n          y: x\n        }, true);\n        node.setLayout({\n          dy: nodeWidth\n        }, true);\n      } else {\n        node.setLayout({\n          x: x\n        }, true);\n        node.setLayout({\n          dx: nodeWidth\n        }, true);\n      }\n\n      for (var oidx = 0; oidx < node.outEdges.length; oidx++) {\n        var edge = node.outEdges[oidx];\n        var indexEdge = edges.indexOf(edge);\n        remainEdges[indexEdge] = 0;\n        var targetNode = edge.node2;\n        var nodeIndex = nodes.indexOf(targetNode);\n\n        if (--indegreeArr[nodeIndex] === 0) {\n          nextNode.push(targetNode);\n        }\n      }\n    }\n\n    ++x;\n    zeroIndegrees = nextNode;\n    nextNode = [];\n  }\n\n  for (i = 0; i < remainEdges.length; i++) {}\n\n  moveSinksRight(nodes, x, orient);\n\n  if (orient === 'vertical') {\n    kx = (height - nodeWidth) / (x - 1);\n  } else {\n    kx = (width - nodeWidth) / (x - 1);\n  }\n\n  scaleNodeBreadths(nodes, kx, orient);\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} x  value (x-1) use to assign to node without outEdges\n *     as x-position\n */\n\n\nfunction moveSinksRight(nodes, x, orient) {\n  zrUtil.each(nodes, function (node) {\n    if (!node.outEdges.length) {\n      if (orient === 'vertical') {\n        node.setLayout({\n          y: x - 1\n        }, true);\n      } else {\n        node.setLayout({\n          x: x - 1\n        }, true);\n      }\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx, orient) {\n  zrUtil.each(nodes, function (node) {\n    if (orient === 'vertical') {\n      var nodeY = node.getLayout().y * kx;\n      node.setLayout({\n        y: nodeY\n      }, true);\n    } else {\n      var nodeX = node.getLayout().x * kx;\n      node.setLayout({\n        x: nodeX\n      }, true);\n    }\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, width, nodeGap, iterations, orient) {\n  var nodesByBreadth = prepareNodesByBreadth(nodes, orient);\n  initializeNodeDepth(nodes, nodesByBreadth, edges, height, width, nodeGap, orient);\n  resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha, orient);\n    resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\n    relaxLeftToRight(nodesByBreadth, alpha, orient);\n    resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\n  }\n}\n\nfunction prepareNodesByBreadth(nodes, orient) {\n  var nodesByBreadth = [];\n  var keyAttr = orient === 'vertical' ? 'y' : 'x';\n  var groupResult = groupData(nodes, function (node) {\n    return node.getLayout()[keyAttr];\n  });\n  groupResult.keys.sort(function (a, b) {\n    return a - b;\n  });\n  zrUtil.each(groupResult.keys, function (key) {\n    nodesByBreadth.push(groupResult.buckets.get(key));\n  });\n  return nodesByBreadth;\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodes, nodesByBreadth, edges, height, width, nodeGap, orient) {\n  var kyArray = [];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    var ky = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n\n    if (orient === 'vertical') {\n      ky = (width - (n - 1) * nodeGap) / sum;\n    } else {\n      ky = (height - (n - 1) * nodeGap) / sum;\n    }\n\n    kyArray.push(ky);\n  });\n  kyArray.sort(function (a, b) {\n    return a - b;\n  });\n  var ky0 = kyArray[0];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      var nodeDy = node.getLayout().value * ky0;\n\n      if (orient === 'vertical') {\n        node.setLayout({\n          x: i\n        }, true);\n        node.setLayout({\n          dx: nodeDy\n        }, true);\n      } else {\n        node.setLayout({\n          y: i\n        }, true);\n        node.setLayout({\n          dy: nodeDy\n        }, true);\n      }\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * ky0;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height, width, orient) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var i;\n\n    if (orient === 'vertical') {\n      var nodeX;\n      nodes.sort(function (a, b) {\n        return a.getLayout().x - b.getLayout().x;\n      });\n\n      for (i = 0; i < n; i++) {\n        node = nodes[i];\n        dy = y0 - node.getLayout().x;\n\n        if (dy > 0) {\n          nodeX = node.getLayout().x + dy;\n          node.setLayout({\n            x: nodeX\n          }, true);\n        }\n\n        y0 = node.getLayout().x + node.getLayout().dx + nodeGap;\n      } // If the bottommost node goes outside the bounds, push it back up\n\n\n      dy = y0 - nodeGap - width;\n\n      if (dy > 0) {\n        nodeX = node.getLayout().x - dy;\n        node.setLayout({\n          x: nodeX\n        }, true);\n        y0 = nodeX;\n\n        for (i = n - 2; i >= 0; --i) {\n          node = nodes[i];\n          dy = node.getLayout().x + node.getLayout().dx + nodeGap - y0;\n\n          if (dy > 0) {\n            nodeX = node.getLayout().x - dy;\n            node.setLayout({\n              x: nodeX\n            }, true);\n          }\n\n          y0 = node.getLayout().x;\n        }\n      }\n    } else {\n      var nodeY;\n      nodes.sort(function (a, b) {\n        return a.getLayout().y - b.getLayout().y;\n      });\n\n      for (i = 0; i < n; i++) {\n        node = nodes[i];\n        dy = y0 - node.getLayout().y;\n\n        if (dy > 0) {\n          nodeY = node.getLayout().y + dy;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n\n        y0 = node.getLayout().y + node.getLayout().dy + nodeGap;\n      } // If the bottommost node goes outside the bounds, push it back up\n\n\n      dy = y0 - nodeGap - height;\n\n      if (dy > 0) {\n        nodeY = node.getLayout().y - dy;\n        node.setLayout({\n          y: nodeY\n        }, true);\n        y0 = nodeY;\n\n        for (i = n - 2; i >= 0; --i) {\n          node = nodes[i];\n          dy = node.getLayout().y + node.getLayout().dy + nodeGap - y0;\n\n          if (dy > 0) {\n            nodeY = node.getLayout().y - dy;\n            node.setLayout({\n              y: nodeY\n            }, true);\n          }\n\n          y0 = node.getLayout().y;\n        }\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha, orient) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget, orient) / sum(node.outEdges, getEdgeValue, orient);\n\n        if (orient === 'vertical') {\n          var nodeX = node.getLayout().x + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            x: nodeX\n          }, true);\n        } else {\n          var nodeY = node.getLayout().y + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge, orient) {\n  return center(edge.node2, orient) * edge.getValue();\n}\n\nfunction weightedSource(edge, orient) {\n  return center(edge.node1, orient) * edge.getValue();\n}\n\nfunction center(node, orient) {\n  if (orient === 'vertical') {\n    return node.getLayout().x + node.getLayout().dx / 2;\n  }\n\n  return node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nfunction sum(array, f, orient) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +f.call(array, array[i], orient);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha, orient) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource, orient) / sum(node.inEdges, getEdgeValue, orient);\n\n        if (orient === 'vertical') {\n          var nodeX = node.getLayout().x + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            x: nodeX\n          }, true);\n        } else {\n          var nodeY = node.getLayout().y + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n      }\n    });\n  });\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes, orient) {\n  zrUtil.each(nodes, function (node) {\n    if (orient === 'vertical') {\n      node.outEdges.sort(function (a, b) {\n        return a.node2.getLayout().x - b.node2.getLayout().x;\n      });\n      node.inEdges.sort(function (a, b) {\n        return a.node1.getLayout().x - b.node1.getLayout().x;\n      });\n    } else {\n      node.outEdges.sort(function (a, b) {\n        return a.node2.getLayout().y - b.node2.getLayout().y;\n      });\n      node.inEdges.sort(function (a, b) {\n        return a.node1.getLayout().y - b.node1.getLayout().y;\n      });\n    }\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import Group from 'zrender/src/container/Group';\n\n/**\n * @alias module:echarts/component/tooltip/TooltipRichContent\n * @constructor\n */\nfunction TooltipRichContent(api) {\n  this._zr = api.getZr();\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n}\n\nTooltipRichContent.prototype = {\n  constructor: TooltipRichContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {// noop\n  },\n  show: function (tooltipModel) {\n    if (this._hideTimeout) {\n      clearTimeout(this._hideTimeout);\n    }\n\n    this.el.attr('show', true);\n    this._show = true;\n  },\n\n  /**\n   * Set tooltip content\n   *\n   * @param {string} content rich text string of content\n   * @param {Object} markerRich rich text style\n   * @param {Object} tooltipModel tooltip model\n   */\n  setContent: function (content, markerRich, tooltipModel) {\n    if (this.el) {\n      this._zr.remove(this.el);\n    }\n\n    var markers = {};\n    var text = content;\n    var prefix = '{marker';\n    var suffix = '|}';\n    var startId = text.indexOf(prefix);\n\n    while (startId >= 0) {\n      var endId = text.indexOf(suffix);\n      var name = text.substr(startId + prefix.length, endId - startId - prefix.length);\n\n      if (name.indexOf('sub') > -1) {\n        markers['marker' + name] = {\n          textWidth: 4,\n          textHeight: 4,\n          textBorderRadius: 2,\n          textBackgroundColor: markerRich[name],\n          // TODO: textOffset is not implemented for rich text\n          textOffset: [3, 0]\n        };\n      } else {\n        markers['marker' + name] = {\n          textWidth: 10,\n          textHeight: 10,\n          textBorderRadius: 5,\n          textBackgroundColor: markerRich[name]\n        };\n      }\n\n      text = text.substr(endId + 1);\n      startId = text.indexOf('{marker');\n    }\n\n    this.el = new Text({\n      style: {\n        rich: markers,\n        text: content,\n        textLineHeight: 20,\n        textBackgroundColor: tooltipModel.get('backgroundColor'),\n        textBorderRadius: tooltipModel.get('borderRadius'),\n        textFill: tooltipModel.get('textStyle.color'),\n        textPadding: tooltipModel.get('padding')\n      },\n      z: tooltipModel.get('z')\n    });\n\n    this._zr.add(this.el);\n\n    var self = this;\n    this.el.on('mouseover', function () {\n      // clear the timeout in hideLater and keep showing tooltip\n      if (self._enterable) {\n        clearTimeout(self._hideTimeout);\n        self._show = true;\n      }\n\n      self._inContent = true;\n    });\n    this.el.on('mouseout', function () {\n      if (self._enterable) {\n        if (self._show) {\n          self.hideLater(self._hideDelay);\n        }\n      }\n\n      self._inContent = false;\n    });\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var bounding = this.el.getBoundingRect();\n    return [bounding.width, bounding.height];\n  },\n  moveTo: function (x, y) {\n    if (this.el) {\n      this.el.attr('position', [x, y]);\n    }\n  },\n  hide: function () {\n    this.el.hide();\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  },\n  getOuterSize: function () {\n    return this.getSize();\n  }\n};\nvar _default = TooltipRichContent;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar List = require(\"../../data/List\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  // updateLayout: function (markPointModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mpModel = seriesModel.markPointModel;\n  //         if (mpModel) {\n  //             updateMarkerLayout(mpModel.getData(), seriesModel, api);\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar sizeCalculable = _layout.sizeCalculable;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CalendarModel = ComponentModel.extend({\n  type: 'calendar',\n\n  /**\n   * @type {module:echarts/coord/calendar/Calendar}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    left: 80,\n    top: 60,\n    cellSize: 20,\n    // horizontal vertical\n    orient: 'horizontal',\n    // month separate line style\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: '#000',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // rect style  temporarily unused emphasis\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1,\n      borderColor: '#ccc'\n    },\n    // week text style\n    dayLabel: {\n      show: true,\n      // a week first day\n      firstDay: 0,\n      // start end\n      position: 'start',\n      margin: '50%',\n      // 50% of cellSize\n      nameMap: 'en',\n      color: '#000'\n    },\n    // month text style\n    monthLabel: {\n      show: true,\n      // start end\n      position: 'start',\n      margin: 5,\n      // center or left\n      align: 'center',\n      // cn en []\n      nameMap: 'en',\n      formatter: null,\n      color: '#000'\n    },\n    // year text style\n    yearLabel: {\n      show: true,\n      // top bottom left right\n      position: null,\n      margin: 30,\n      formatter: null,\n      color: '#ccc',\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      fontSize: 20\n    }\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    CalendarModel.superApply(this, 'init', arguments);\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    CalendarModel.superApply(this, 'mergeOption', arguments);\n    mergeAndNormalizeLayoutParams(this.option, option);\n  }\n});\n\nfunction mergeAndNormalizeLayoutParams(target, raw) {\n  // Normalize cellSize\n  var cellSize = target.cellSize;\n\n  if (!zrUtil.isArray(cellSize)) {\n    cellSize = target.cellSize = [cellSize, cellSize];\n  } else if (cellSize.length === 1) {\n    cellSize[1] = cellSize[0];\n  }\n\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\n    // If user have set `width` or both `left` and `right`, cellSize\n    // will be automatically set to 'auto', otherwise the default\n    // setting of cellSize will make `width` setting not work.\n    if (sizeCalculable(raw, hvIdx)) {\n      cellSize[hvIdx] = 'auto';\n    }\n\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\n  });\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = CalendarModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected' // update: 'updateVisual'\n\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Parallel = require(\"./Parallel\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel coordinate system creater.\n */\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar getPixelPrecision = _number.getPixelPrecision;\n\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder\");\n\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\nvar calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param {Object} [opt]\n   * @param {number} [opt.tickModel=axis.model.getModel('axisTick')]\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   * @return {Array.<Object>} [{\n   *     coord: ...,\n   *     tickValue: ...\n   * }, ...]\n   */\n  getTicksCoords: function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickValue) {\n      return {\n        coord: this.dataToCoord(tickValue),\n        tickValue: tickValue\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, result.tickCategoryInterval, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  },\n\n  /**\n   * @return {Array.<Object>} [{\n   *     formattedLabel: string,\n   *     rawLabel: axis.scale.getLabel(tickValue)\n   *     tickValue: number\n   * }, ...]\n   */\n  getViewLabels: function () {\n    return createAxisLabels(this).labels;\n  },\n\n  /**\n   * @return {module:echarts/coord/model/Model}\n   */\n  getLabelModel: function () {\n    return this.model.getModel('axisLabel');\n  },\n\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   * @return {module:echarts/coord/model/Model}\n   */\n  getTickModel: function () {\n    return this.model.getModel('axisTick');\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    return calculateCategoryInterval(this);\n  }\n};\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, tickCategoryInterval, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var shift = ticksCoords[1].coord - ticksCoords[0].coord;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift / 2;\n      var tickCategoryInterval = tickCategoryInterval || 0; // Avoid split a single data item when odd interval.\n\n      if (tickCategoryInterval % 2 > 0) {\n        ticksItem.coord -= shift / ((tickCategoryInterval + 1) * 2);\n      }\n    });\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1];\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    return inverse ? a > b : a < b;\n  }\n}\n\nvar _default = Axis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *                 If not specified, extra dim names will be:\n *                 'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *                 If `generateCoordCount` specified, the generated dim names will be:\n *                 `generateCoord` + 0, `generateCoord` + 1, ...\n *                 can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true if coord is generated\n *          (not specified in encode and not series specified)\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice(); // Note: It is allowed that `dataDims.length` is `0`, e.g., options is\n    // `{encode: {x: -1, y: 1}}`. Should not filter anything in\n    // this case.\n\n    if (dataDims.length === 1 && dataDims[0] < 0) {\n      encodeDef.set(coordDim, false);\n      return;\n    }\n\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = encodeDef.get(coordDim); // negative resultDimIdx means no need to mapping.\n\n    if (dataDims === false) {\n      return;\n    }\n\n    var dataDims = normalizeToArray(dataDims); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\n        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\n          name: sysDimItemDimsDefItem\n        });\n        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\n        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    function pointsConverter(val, idx) {\n      points[idx] = points[idx] || [];\n      points[idx][i] = coordSys.dataToPoint(val, i);\n    }\n\n    var axes = coordSys.getIndicatorAxes();\n\n    for (var i = 0; i < axes.length; i++) {\n      data.each(data.mapDimension(axes[i].dim), pointsConverter);\n    }\n\n    data.each(function (idx) {\n      // Close polygon\n      points[idx][0] && points[idx].push(points[idx][0].slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option, ['edgeLabel'], ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      var emphasisEdgeLabelModel = self.getModel('emphasis.edgeLabel');\n      var emphasisFakeSeriesModel = new Model({\n        emphasis: {\n          label: emphasisEdgeLabelModel.option\n        }\n      }, emphasisEdgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : path && path[0] === 'emphasis' && path[1] === 'label' ? emphasisFakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle'\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      curveness: 0,\n      opacity: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n      var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n      if (isDimensionStacked(data, dims[0]\n      /*, dims[1]*/\n      )) {\n        dims[0] = stackResultDim;\n      }\n\n      if (isDimensionStacked(data, dims[1]\n      /*, dims[0]*/\n      )) {\n        dims[1] = stackResultDim;\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i);\n            var y = tmpIn[1] = data.get(dims[1], i); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer); // Here we should make sure that: the `exec` SHOULD NOT be called later\n    // than a new call of `cb`, that is, preserving the command order. Consider\n    // calculating \"scale rate\" when roaming as an example. When a call of `cb`\n    // happens, either the `exec` is called dierectly, or the call is delayed.\n    // But the delayed call should never be later than next call of `cb`. Under\n    // this assurance, we can simply update view state each time `dispatchAction`\n    // triggered by user roaming, but not need to add extra code to avoid the\n    // state being \"rolled-back\".\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function () {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function (markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function () {}\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // Light colors:\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // Dark colors:\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // If xAxis and yAxis declared, grid is created by default.\n  // grid: {},\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"../component/radar\");\n\nrequire(\"./radar/RadarSeries\");\n\nrequire(\"./radar/RadarView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar radarLayout = require(\"./radar/radarLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\nvar backwardCompat = require(\"./radar/backwardCompat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Must use radar component\necharts.registerVisual(dataColor('radar'));\necharts.registerVisual(visualSymbol('radar', 'circle'));\necharts.registerLayout(radarLayout);\necharts.registerProcessor(dataFilter('radar'));\necharts.registerPreprocessor(backwardCompat);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorUtil = require(\"zrender/lib/tool/color\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Better on polar\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      var pt = [x, y];\n      coordSys.clampData && coordSys.clampData(pt, pt);\n      point = coordSys.dataToPoint(pt, true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  // updateLayout: function (markAreaModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var maModel = seriesModel.markAreaModel;\n  //         if (maModel) {\n  //             var areaData = maModel.getData();\n  //             areaData.each(function (idx) {\n  //                 var points = zrUtil.map(dimPermutations, function (dim) {\n  //                     return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n  //                 });\n  //                 // Layout\n  //                 areaData.setItemLayout(idx, points);\n  //                 var el = areaData.getItemGraphicEl(idx);\n  //                 el.setShape('points', points);\n  //             });\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesId) || areaGroupMap.set(seriesId, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var data = seriesModel.getData();\n      var info = data.getDimensionInfo(data.mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  optionUpdated: function () {\n    ToolboxModel.superApply(this, 'optionUpdated', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      borderColor: '#666',\n      color: 'none'\n    },\n    emphasis: {\n      iconStyle: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n} // Make it simple, do not visit all stacked value to count precision.\n// function getPrecision(data, valueAxisDim, dataIndex) {\n//     var precision = -1;\n//     var stackedDim = data.mapDimension(valueAxisDim);\n//     do {\n//         precision = Math.max(\n//             numberUtil.getPrecision(data.get(stackedDim, dataIndex)),\n//             precision\n//         );\n//         var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n//         if (stackedOnSeries) {\n//             var byValue = data.get(data.getCalculationInfo('stackedByDimension'), dataIndex);\n//             data = stackedOnSeries.getData();\n//             dataIndex = data.indexOf(data.getCalculationInfo('stackedByDimension'), byValue);\n//             stackedDim = data.getCalculationInfo('stackedDimension');\n//         }\n//         else {\n//             data = null;\n//         }\n//     } while (data);\n//     return precision;\n// }\n\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var stacked = isDimensionStacked(data, targetDataDim\n  /*, otherDataDim*/\n  );\n  var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\n  var value = numCalculate(data, calcDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\n\n  var precision = numberUtil.getPrecision(data.get(targetDataDim, dataIndex));\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n    ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\n  }\n\n  return ret;\n}\n\nfunction dataDimToCoordDim(seriesModel, dataDim) {\n  var data = seriesModel.getData();\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    });\n    return sum / count;\n  } else if (type === 'median') {\n    return data.getMedian(valueDataDim);\n  } else {\n    // max & min\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.treemap',\n  layoutMode: 'box',\n  dependencies: ['grid', 'polar'],\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  defaultOption: {\n    // Disable progressive rendering\n    progressive: 0,\n    hoverLayerThreshold: Infinity,\n    // center: ['50%', '50%'],          // not supported in ec3.\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    right: null,\n    bottom: null,\n    width: '80%',\n    height: '80%',\n    sort: true,\n    // Can be null or false or true\n    // (order by desc default, asc not supported yet (strange effect))\n    clipWindow: 'origin',\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    // golden ratio\n    leafDepth: null,\n    // Nodes on depth from root are regarded as leaves.\n    // Count from zero (zero represents only view root).\n    drillDownIcon: '▶',\n    // Use html character temporarily because it is complicated\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    // Be effective when using zoomToNode. Specify the proportion of the\n    // target node area in the view area.\n    roam: true,\n    // true, false, 'scale' or 'zoom', 'move'.\n    nodeClick: 'zoomToNode',\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\n    // If leafDepth is set and clicking a node which has children but\n    // be on left depth, the behaviour would be changing root. Otherwise\n    // use behavious defined above.\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      // Width of empty node.\n      itemStyle: {\n        color: 'rgba(0,0,0,0.7)',\n        //'#5793f3',\n        borderColor: 'rgba(255,255,255,0.7)',\n        borderWidth: 1,\n        shadowColor: 'rgba(150,150,150,1)',\n        shadowBlur: 3,\n        shadowOffsetX: 0,\n        shadowOffsetY: 0,\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      emphasis: {\n        textStyle: {}\n      }\n    },\n    label: {\n      show: true,\n      // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n      distance: 0,\n      padding: 5,\n      position: 'inside',\n      // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true // align\n      // verticalAlign\n\n    },\n    upperLabel: {\n      // Label when node is parent.\n      show: false,\n      position: [0, '50%'],\n      height: 20,\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true,\n      // align: null,\n      verticalAlign: 'middle'\n    },\n    itemStyle: {\n      color: null,\n      // Can be 'none' if not necessary.\n      colorAlpha: null,\n      // Can be 'none' if not necessary.\n      colorSaturation: null,\n      // Can be 'none' if not necessary.\n      borderWidth: 0,\n      gapWidth: 0,\n      borderColor: '#fff',\n      borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n      // border color is evaluated by color of current node and\n      // borderColorSaturation.\n\n    },\n    emphasis: {\n      upperLabel: {\n        show: true,\n        position: [0, '50%'],\n        color: '#fff',\n        ellipsis: true,\n        verticalAlign: 'middle'\n      }\n    },\n    visualDimension: 0,\n    // Can be 0, 1, 2, 3.\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // + treemapSeries.color should not be modified. Please only modified\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\n    colorSaturation: null,\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\n    colorMappingBy: 'index',\n    // 'value' or 'index' or 'id'.\n    visibleMin: 10,\n    // If area less than this threshold (unit: pixel^2), node will not\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // If area of a node less than this threshold (unit: pixel^2),\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n    // data: {\n    //      value: [],\n    //      children: [],\n    //      link: 'http://xxx.xxx.xxx',\n    //      target: 'blank' or 'self'\n    // }\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || [];\n    levels = option.levels = setDefault(levels, ecModel);\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\n    var name = data.getName(dataIndex);\n    return encodeHTML(name + ': ' + formattedValue);\n  },\n\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n  setLayoutInfo: function (layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  },\n\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n  mapIdToIndex: function (id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = ecModel.get('color');\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n\n    if (model.get('itemStyle.color') || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n  });\n\n  if (!hasColorDefine) {\n    var level0 = levels[0] || (levels[0] = {});\n    level0.color = globalColorList.slice();\n  }\n\n  return levels;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar ComponentView = require(\"../../view/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = ComponentView.extend({\n  type: 'timeline'\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/calendar/Calendar\");\n\nrequire(\"../coord/calendar/CalendarModel\");\n\nrequire(\"./calendar/CalendarView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  // Save geoCoord\n  var mapSeries = [];\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'map') {\n      mapSeries.push(seriesOpt);\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\n\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar numberUtil = require(\"../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\nvar largeLayout = _barGrid.largeLayout;\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'bar')); // Should after normal bar layout, otherwise it is blocked by normal bar layout.\n\necharts.registerLayout(largeLayout);\necharts.registerVisual({\n  seriesType: 'bar',\n  reset: function (seriesModel) {\n    // Visual coding for legend\n    seriesModel.getData().setVisual('legendSymbol', 'roundRect');\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkLineModel\");\n\nrequire(\"./marker/MarkLineView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar adjustEdge = require(\"./adjustEdge\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar FOCUS_ADJACENCY = '__focusNodeAdjacency';\nvar UNFOCUS_ADJACENCY = '__unfocusNodeAdjacency';\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      var opct = child.lineLabelOriginalOpacity;\n\n      if (opct == null || opacityRatio != null) {\n        opct = opacity;\n      }\n\n      child.setStyle('opacity', opct);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = itemModel.get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el[FOCUS_ADJACENCY] && el.off('mouseover', el[FOCUS_ADJACENCY]);\n      el[UNFOCUS_ADJACENCY] && el.off('mouseout', el[UNFOCUS_ADJACENCY]);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el[FOCUS_ADJACENCY] = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el[UNFOCUS_ADJACENCY] = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el[FOCUS_ADJACENCY] && el.off('mouseover', el[FOCUS_ADJACENCY]);\n      el[UNFOCUS_ADJACENCY] && el.off('mouseout', el[UNFOCUS_ADJACENCY]);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el[FOCUS_ADJACENCY] = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el[UNFOCUS_ADJACENCY] = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }).on('zoom', function (e) {\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embeded for some of the code in this file:\n* The treemap layout implementation was originally copied from\n* \"d3.js\" with some modifications made for this project.\n* (See more details in the comment of the method \"squarify\" below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'height'];\n/**\n * @public\n */\n\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    // Layout result in each node:\n    // {x, y, width, height, area, borderWidth}\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort = seriesOption.sort;\n\n      if (sort && sort !== 'asc' && sort !== 'desc') {\n        sort = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      var viewRootLayout = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  }\n};\n/**\n * Layout treemap with squarify algorithm.\n * The original presentation of this algorithm\n * was made by Mark Bruls, Kees Huizing, and Jarke J. van Wijk\n * <https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf>.\n * The implementation of this algorithm was originally copied from \"d3.js\"\n * <https://github.com/d3/d3/blob/9cc9a875e636a1dcf36cc1e07bdf77e1ad6e2c74/src/layout/treemap.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  var nodeModel = node.getModel();\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      var dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as defualt.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whold width and heigth by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root postion base on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\nvar STACK_PREFIX = '__ec_stack_';\nvar LARGE_BAR_MIN_WIDTH = 0.5;\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction prepareLayoutBarSeries(seriesType, ecModel) {\n  var seriesModels = [];\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (isOnCartesian(seriesModel) && !isInLargeMode(seriesModel)) {\n      seriesModels.push(seriesModel);\n    }\n  });\n  return seriesModels;\n}\n\nfunction makeColumnLayout(barSeries) {\n  var seriesInfoList = [];\n  zrUtil.each(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    seriesInfoList.push({\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    });\n  });\n  return doCalBarWidthAndOffset(seriesInfoList);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {Object} barWidthAndOffset The result of makeColumnLayout\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Series} [seriesModel] If not provided, return all.\n * @return {Object} {stackId: {offset, width}} or {offset, width} if seriesModel provided.\n */\n\n\nfunction retrieveColumnLayout(barWidthAndOffset, axis, seriesModel) {\n  if (barWidthAndOffset && axis) {\n    var result = barWidthAndOffset[getAxisKey(axis)];\n\n    if (result != null && seriesModel != null) {\n      result = result[getSeriesStackId(seriesModel)];\n    }\n\n    return result;\n  }\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction layout(seriesType, ecModel) {\n  var seriesModels = prepareLayoutBarSeries(seriesType, ecModel);\n  var barWidthAndOffset = makeColumnLayout(seriesModels);\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  zrUtil.each(seriesModels, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var isValueAxisH = valueAxis.isHorizontal();\n    var valueAxisStart = getValueAxisStart(baseAxis, valueAxis, stacked);\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n\n      if (stacked) {\n        // Only ordinal axis can be stacked.\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (isValueAxisH) {\n        var coord = cartesian.dataToPoint([value, baseValue]);\n        x = baseCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - valueAxisStart;\n        height = columnWidth;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += width);\n      } else {\n        var coord = cartesian.dataToPoint([baseValue, value]);\n        x = coord[0] + columnOffset;\n        y = baseCoord;\n        width = columnWidth;\n        height = coord[1] - valueAxisStart;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += height);\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, this);\n} // TODO: Do not support stack in large mode yet.\n\n\nvar largeLayout = {\n  seriesType: 'bar',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    if (!isOnCartesian(seriesModel) || !isInLargeMode(seriesModel)) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var valueAxisHorizontal = valueAxis.isHorizontal();\n    var valueDimIdx = valueAxisHorizontal ? 0 : 1;\n    var barWidth = retrieveColumnLayout(makeColumnLayout([seriesModel]), baseAxis, seriesModel).width;\n\n    if (!(barWidth > LARGE_BAR_MIN_WIDTH)) {\n      // jshint ignore:line\n      barWidth = LARGE_BAR_MIN_WIDTH;\n    }\n\n    return {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var largePoints = new LargeArr(params.count * 2);\n      var dataIndex;\n      var coord = [];\n      var valuePair = [];\n      var offset = 0;\n\n      while ((dataIndex = params.next()) != null) {\n        valuePair[valueDimIdx] = data.get(valueDim, dataIndex);\n        valuePair[1 - valueDimIdx] = data.get(baseDim, dataIndex);\n        coord = cartesian.dataToPoint(valuePair, null, coord);\n        largePoints[offset++] = coord[0];\n        largePoints[offset++] = coord[1];\n      }\n\n      data.setLayout({\n        largePoints: largePoints,\n        barWidth: barWidth,\n        valueAxisStart: getValueAxisStart(baseAxis, valueAxis, false),\n        valueAxisHorizontal: valueAxisHorizontal\n      });\n    }\n  }\n};\n\nfunction isOnCartesian(seriesModel) {\n  return seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n}\n\nfunction isInLargeMode(seriesModel) {\n  return seriesModel.pipelineContext && seriesModel.pipelineContext.large;\n} // See cases in `test/bar-start.html` and `#7412`, `#8747`.\n\n\nfunction getValueAxisStart(baseAxis, valueAxis, stacked) {\n  var extent = valueAxis.getGlobalExtent();\n  var min;\n  var max;\n\n  if (extent[0] > extent[1]) {\n    min = extent[1];\n    max = extent[0];\n  } else {\n    min = extent[0];\n    max = extent[1];\n  }\n\n  var valueStart = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  valueStart < min && (valueStart = min);\n  valueStart > max && (valueStart = max);\n  return valueStart;\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.prepareLayoutBarSeries = prepareLayoutBarSeries;\nexports.makeColumnLayout = makeColumnLayout;\nexports.retrieveColumnLayout = retrieveColumnLayout;\nexports.layout = layout;\nexports.largeLayout = largeLayout;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function (rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var dims = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  var stacked;\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n  if (stacked |= isDimensionStacked(data, dims[0]\n  /*, dims[1]*/\n  )) {\n    // jshint ignore:line\n    dims[0] = stackResultDim;\n  }\n\n  if (stacked |= isDimensionStacked(data, dims[1]\n  /*, dims[0]*/\n  )) {\n    // jshint ignore:line\n    dims[1] = stackResultDim;\n  }\n\n  return {\n    dataDimsForPoint: dims,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: !!stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function (option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, {\n      generateCoord: 'indicator_',\n      generateCoordCount: Infinity\n    });\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      var val = data.get(data.mapDimension(axis.dim), dataIndex);\n      return encodeHTML(axis.name + ' : ' + val);\n    }).join('<br />');\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    label: {\n      position: 'top'\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('timeline', function () {\n  // Only slider now.\n  return 'slider';\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseWheel: false,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nvar lineContain = require(\"zrender/lib/contain/line\");\n\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    curveness: 0,\n    segs: []\n  },\n  buildPath: function (path, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          path.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            path.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        path.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          path.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          path.lineTo(x1, y1);\n        }\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n\nlargeLineProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = new LargeLineShape({\n    rectHover: true,\n    cursor: 'default'\n  });\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data); // Add back\n\n\n  this.group.add(lineEl);\n  this._incremental = null;\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental();\n\n  if (data.count() > 5e5) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalUpdate = function (taskParams, data) {\n  var lineEl = new LargeLineShape();\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data, !!this._incremental);\n\n  if (!this._incremental) {\n    lineEl.rectHover = true;\n    lineEl.cursor = 'default';\n    lineEl.__startIndex = taskParams.start;\n    this.group.add(lineEl);\n  } else {\n    this._incremental.addDisplayable(lineEl, true);\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeLineProto._setCommon = function (lineEl, data, isIncremental) {\n  var hostModel = data.hostModel;\n  lineEl.setShape({\n    polyline: hostModel.get('polyline'),\n    curveness: hostModel.get('lineStyle.curveness')\n  });\n  lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n  lineEl.style.strokeNoScale = true;\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill');\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    lineEl.seriesIndex = hostModel.seriesIndex;\n    lineEl.on('mousemove', function (e) {\n      lineEl.dataIndex = null;\n      var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex > 0) {\n        // Provide dataIndex for tooltip\n        lineEl.dataIndex = dataIndex + lineEl.__startIndex;\n      }\n    });\n  }\n};\n\nlargeLineProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./funnel/FunnelSeries\");\n\nrequire(\"./funnel/FunnelView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar funnelLayout = require(\"./funnel/funnelLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(dataColor('funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(dataFilter('funnel'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n(function (root, factory) {\n    /* eslint-disable */\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['exports', 'echarts'], factory);\n    } else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\n        // CommonJS\n        factory(exports, require('echarts'));\n    } else {\n        // Browser globals\n        factory({}, root.echarts);\n    }\n    /* eslint-enable */\n}(this, function (exports, echarts) {\n    var log = function (msg) {\n        if (typeof console !== 'undefined') {\n            console && console.error && console.error(msg);\n        }\n    };\n    if (!echarts) {\n        log('ECharts is not Loaded');\n        return;\n    }\n    var contrastColor = '#eee';\n    var axisCommon = function () {\n        return {\n            axisLine: {\n                lineStyle: {\n                    color: contrastColor\n                }\n            },\n            axisTick: {\n                lineStyle: {\n                    color: contrastColor\n                }\n            },\n            axisLabel: {\n                textStyle: {\n                    color: contrastColor\n                }\n            },\n            splitLine: {\n                lineStyle: {\n                    type: 'dashed',\n                    color: '#aaa'\n                }\n            },\n            splitArea: {\n                areaStyle: {\n                    color: contrastColor\n                }\n            }\n        };\n    };\n\n    var colorPalette = [\n        '#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53',\n        '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'\n    ];\n    var theme = {\n        color: colorPalette,\n        backgroundColor: '#333',\n        tooltip: {\n            axisPointer: {\n                lineStyle: {\n                    color: contrastColor\n                },\n                crossStyle: {\n                    color: contrastColor\n                }\n            }\n        },\n        legend: {\n            textStyle: {\n                color: contrastColor\n            }\n        },\n        textStyle: {\n            color: contrastColor\n        },\n        title: {\n            textStyle: {\n                color: contrastColor\n            }\n        },\n        toolbox: {\n            iconStyle: {\n                normal: {\n                    borderColor: contrastColor\n                }\n            }\n        },\n        dataZoom: {\n            textStyle: {\n                color: contrastColor\n            }\n        },\n        visualMap: {\n            textStyle: {\n                color: contrastColor\n            }\n        },\n        timeline: {\n            lineStyle: {\n                color: contrastColor\n            },\n            itemStyle: {\n                normal: {\n                    color: colorPalette[1]\n                }\n            },\n            label: {\n                normal: {\n                    textStyle: {\n                        color: contrastColor\n                    }\n                }\n            },\n            controlStyle: {\n                normal: {\n                    color: contrastColor,\n                    borderColor: contrastColor\n                }\n            }\n        },\n        timeAxis: axisCommon(),\n        logAxis: axisCommon(),\n        valueAxis: axisCommon(),\n        categoryAxis: axisCommon(),\n\n        line: {\n            symbol: 'circle'\n        },\n        graph: {\n            color: colorPalette\n        },\n        gauge: {\n            title: {\n                textStyle: {\n                    color: contrastColor\n                }\n            }\n        },\n        candlestick: {\n            itemStyle: {\n                normal: {\n                    color: '#FD1050',\n                    color0: '#0CF49B',\n                    borderColor: '#FD1050',\n                    borderColor0: '#0CF49B'\n                }\n            }\n        }\n    };\n    theme.categoryAxis.splitLine.show = false;\n    echarts.registerTheme('dark', theme);\n}));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar MapDraw = require(\"../../component/helper/MapDraw\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar HIGH_DOWN_PROP = '__seriesMapHighDown';\nvar RECORD_VERSION_PROP = '__seriesMapCallKey';\n\nvar _default = echarts.extendChartView({\n  type: 'map',\n  render: function (mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  },\n  remove: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  },\n  _renderSymbols: function (mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each(originalData.mapDimension('value'), function (value, originalDataIndex) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(originalDataIndex);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          fill: mapModel.getData().getVisual('color')\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: 8 + (!offset ? graphic.Z2_EMPHASIS_LIFT + 1 : 0)\n      }); // Only the series that has the first value on the same region is in charge of rendering the label.\n      // But consider the case:\n      // series: [\n      //     {id: 'X', type: 'map', map: 'm', {data: [{name: 'A', value: 11}, {name: 'B', {value: 22}]},\n      //     {id: 'Y', type: 'map', map: 'm', {data: [{name: 'A', value: 21}, {name: 'C', {value: 33}]}\n      // ]\n      // The offset `0` of item `A` is at series `X`, but of item `C` is at series `Y`.\n      // For backward compatibility, we follow the rule that render label `A` by the\n      // settings on series `X` but render label `C` by the settings on series `Y`.\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name = originalData.getName(originalDataIndex);\n        var fullIndex = fullData.indexOfName(name);\n        var itemModel = originalData.getItemModel(originalDataIndex);\n        var labelModel = itemModel.getModel('label');\n        var hoverLabelModel = itemModel.getModel('emphasis.label');\n        var regionGroup = fullData.getItemGraphicEl(fullIndex); // `getFormattedLabel` needs to use `getData` inside. Here\n        // `mapModel.getData()` is shallow cloned from `mainSeries.getData()`.\n        // FIXME\n        // If this is not the `mainSeries`, the item model (like label formatter)\n        // set on original data item will never get. But it has been working\n        // like that from the begining, and this scenario is rarely encountered.\n        // So it won't be fixed until have to.\n\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(fullIndex, 'normal'), name);\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(fullIndex, 'emphasis'), normalText);\n        var highDownRecord = regionGroup[HIGH_DOWN_PROP];\n        var recordVersion = Math.random(); // Prevent from register listeners duplicatedly when roaming.\n\n        if (!highDownRecord) {\n          highDownRecord = regionGroup[HIGH_DOWN_PROP] = {};\n          var onEmphasis = zrUtil.curry(onRegionHighDown, true);\n          var onNormal = zrUtil.curry(onRegionHighDown, false);\n          regionGroup.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n        } // Prevent removed regions effect current grapics.\n\n\n        regionGroup[RECORD_VERSION_PROP] = recordVersion;\n        zrUtil.extend(highDownRecord, {\n          recordVersion: recordVersion,\n          circle: circle,\n          labelModel: labelModel,\n          hoverLabelModel: hoverLabelModel,\n          emphasisText: emphasisText,\n          normalText: normalText\n        }); // FIXME\n        // Consider set option when emphasis.\n\n        enterRegionHighDown(highDownRecord, false);\n      }\n\n      group.add(circle);\n    });\n  }\n});\n\nfunction onRegionHighDown(toHighOrDown) {\n  var highDownRecord = this[HIGH_DOWN_PROP];\n\n  if (highDownRecord && highDownRecord.recordVersion === this[RECORD_VERSION_PROP]) {\n    enterRegionHighDown(highDownRecord, toHighOrDown);\n  }\n}\n\nfunction enterRegionHighDown(highDownRecord, toHighOrDown) {\n  var circle = highDownRecord.circle;\n  var labelModel = highDownRecord.labelModel;\n  var hoverLabelModel = highDownRecord.hoverLabelModel;\n  var emphasisText = highDownRecord.emphasisText;\n  var normalText = highDownRecord.normalText;\n\n  if (toHighOrDown) {\n    circle.style.extendFrom(graphic.setTextStyle({}, hoverLabelModel, {\n      text: hoverLabelModel.get('show') ? emphasisText : null\n    }, {\n      isRectText: true,\n      useInsideStyle: false\n    }, true)); // Make label upper than others if overlaps.\n\n    circle.__mapOriginalZ2 = circle.z2;\n    circle.z2 += graphic.Z2_EMPHASIS_LIFT;\n  } else {\n    graphic.setTextStyle(circle.style, labelModel, {\n      text: labelModel.get('show') ? normalText : null,\n      textPosition: labelModel.getShallow('position') || 'bottom'\n    }, {\n      isRectText: true,\n      useInsideStyle: false\n    }); // Trigger normalize style like padding.\n\n    circle.dirty(false);\n\n    if (circle.__mapOriginalZ2 != null) {\n      circle.z2 = circle.__mapOriginalZ2;\n      circle.__mapOriginalZ2 = null;\n    }\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar PointerPath = require(\"./PointerPath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get(valueDim, idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('emphasis.itemStyle').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get(valueDim, 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: data.getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var data = seriesModel.getData();\n      var value = data.get(data.mapDimension('value'), 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./lines/LinesSeries\");\n\nrequire(\"./lines/LinesView\");\n\nvar linesLayout = require(\"./lines/linesLayout\");\n\nvar linesVisual = require(\"./lines/linesVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(linesLayout);\necharts.registerVisual(linesVisual);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 钓鱼岛\n// var Region = require('../Region');\n// var zrUtil = require('zrender/src/core/util');\n// var geoCoord = [126, 25];\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\n\nfunction _default(mapType, region) {\n  if (mapType === 'china' && region.name === '台湾') {\n    region.geometries.push({\n      type: 'polygon',\n      exterior: points[0]\n    });\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || lineIntersectPolygon(x, y, x + width, y, points) || lineIntersectPolygon(x, y, x, y + height, points) || lineIntersectPolygon(x + width, y, x + width, y + height, points) || lineIntersectPolygon(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nfunction lineIntersectPolygon(lx, ly, l2x, l2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineIntersect(lx, ly, l2x, l2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n} // Code from <http://blog.csdn.net/rickliuxiao/article/details/6259322> with some fix.\n// See <https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection>\n\n\nfunction lineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  var delta = determinant(a2x - a1x, b1x - b2x, a2y - a1y, b1y - b2y);\n\n  if (nearZero(delta)) {\n    // parallel\n    return false;\n  }\n\n  var namenda = determinant(b1x - a1x, b1x - b2x, b1y - a1y, b1y - b2y) / delta;\n\n  if (namenda < 0 || namenda > 1) {\n    return false;\n  }\n\n  var miu = determinant(a2x - a1x, b1x - a1x, a2y - a1y, b1y - a1y) / delta;\n\n  if (miu < 0 || miu > 1) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nfunction determinant(v1, v2, v3, v4) {\n  return v1 * v4 - v2 * v3;\n}\n\nvar _default = selector;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'inside'\n    },\n    itemStyle: {\n      borderWidth: 2\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 60,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    renderMode: 'auto',\n    // 'auto' | 'html' | 'richText'\n    // 'auto': use html by default, and use non-html if `document` is not defined\n    // 'html': use html for tooltip\n    // 'richText': use canvas, svg, and etc. for tooltip\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar Axis = require(\"../Axis\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData,\n\n  /**\n   * Only be called in category axis.\n   * Angle axis uses text height to decide interval\n   *\n   * @override\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    var axis = this;\n    var labelModel = axis.getLabelModel();\n    var ordinalScale = axis.scale;\n    var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n    // avoid generating a long array by `getTicks`\n    // in large category data case.\n\n    var tickCount = ordinalScale.count();\n\n    if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n      return 0;\n    }\n\n    var tickValue = ordinalExtent[0];\n    var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n    var unitH = Math.abs(unitSpan); // Not precise, just use height as text width\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(tickValue, labelModel.getFont(), 'center', 'top');\n    var maxH = Math.max(rect.height, 7);\n    var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n    isNaN(dh) && (dh = Infinity);\n    var interval = Math.max(0, Math.floor(dh));\n    var cache = inner(axis.model);\n    var lastAutoInterval = cache.lastAutoInterval;\n    var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n    // otherwise the calculated interval might jitter when the zoom\n    // window size is close to the interval-changing size.\n\n    if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n    // point is not the same when zooming in or zooming out.\n    && lastAutoInterval > interval) {\n      interval = lastAutoInterval;\n    } // Only update cache if cache not used, otherwise the\n    // changing of interval is too insensitive.\n    else {\n        cache.lastTickCount = tickCount;\n        cache.lastAutoInterval = interval;\n      }\n\n    return interval;\n  }\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.sunburst',\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || []; // levels = option.levels = setDefault(levels, ecModel);\n\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /*\n   * @override\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // Policy of highlighting pieces when hover on one\n    // Valid values: 'none' (for not downplay others), 'descendant',\n    // 'ancestor', 'self'\n    highlightPolicy: 'descendant',\n    // 'rootToNode', 'link', or false\n    nodeClick: 'rootToNode',\n    renderLabelForZeroData: false,\n    label: {\n      // could be: 'radial', 'tangential', or 'none'\n      rotate: 'radial',\n      show: true,\n      opacity: 1,\n      // 'left' is for inner side of inside, and 'right' is for outter\n      // side for inside\n      align: 'center',\n      position: 'inside',\n      distance: 5,\n      silent: true,\n      emphasis: {}\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: 'white',\n      borderType: 'solid',\n      shadowBlur: 0,\n      shadowColor: 'rgba(0, 0, 0, 0.2)',\n      shadowOffsetX: 0,\n      shadowOffsetY: 0,\n      opacity: 1,\n      emphasis: {},\n      highlight: {\n        opacity: 1\n      },\n      downplay: {\n        opacity: 0.9\n      }\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationDuration: 1000,\n    animationDurationUpdate: 500,\n    animationEasing: 'cubicOut',\n    data: [],\n    levels: [],\n\n    /**\n     * Sort order.\n     *\n     * Valid values: 'desc', 'asc', null, or callback function.\n     * 'desc' and 'asc' for descend and ascendant order;\n     * null for not sorting;\n     * example of callback function:\n     * function(nodeA, nodeB) {\n     *     return nodeA.getValue() - nodeB.getValue();\n     * }\n     */\n    sort: 'desc'\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/PictorialBarSeries\");\n\nrequire(\"./bar/PictorialBarView\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'pictorialBar'));\necharts.registerVisual(visualSymbol('pictorialBar', 'roundRect'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar VISUAL_PRIORITY = echarts.PRIORITY.VISUAL.COMPONENT;\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var resetDefines = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      var pipelineContext = seriesModel.pipelineContext;\n\n      if (!visualMapModel.isTargetSeries(seriesModel) || pipelineContext && pipelineContext.large) {\n        return;\n      }\n\n      resetDefines.push(visualSolution.incrementalApplyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, zrUtil.bind(visualMapModel.getValueState, visualMapModel), visualMapModel.getDataDimension(seriesModel.getData())));\n    });\n    return resetDefines;\n  }\n}); // Only support color.\n\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var visualMetaList = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (visualMapModel.isTargetSeries(seriesModel)) {\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\n          stops: [],\n          outerColors: []\n        };\n        var concreteDim = visualMapModel.getDataDimension(data);\n        var dimInfo = data.getDimensionInfo(concreteDim);\n\n        if (dimInfo != null) {\n          // visualMeta.dimension should be dimension index, but not concrete dimension.\n          visualMeta.dimension = dimInfo.index;\n          visualMetaList.push(visualMeta);\n        }\n      }\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\n  }\n}); // FIXME\n// performance and export for heatmap?\n// value can be Infinity or -Infinity\n\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\n  var mappings = visualMapModel.targetVisuals[valueState];\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n  var resultVisual = {\n    color: seriesModel.getData().getVisual('color') // default color.\n\n  };\n\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\n    var type = visualTypes[i];\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\n  }\n\n  return resultVisual.color;\n\n  function getVisual(key) {\n    return resultVisual[key];\n  }\n\n  function setVisual(key, value) {\n    resultVisual[key] = value;\n  }\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\nvar _default = {\n  seriesType: 'parallel',\n  reset: function (seriesModel, ecModel, api) {\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    data.setVisual('color', color);\n\n    function progress(params, data) {\n      coordSys.eachActiveState(data, function (activeState, dataIndex) {\n        var opacity = opacityMap[activeState];\n\n        if (activeState === 'normal' && data.hasItemOption) {\n          var itemOpacity = data.getItemModel(dataIndex).get(opacityAccessPath, true);\n          itemOpacity != null && (opacity = itemOpacity);\n        }\n\n        data.setItemVisual(dataIndex, 'opacity', opacity);\n      }, params.start, params.end);\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.extendChartView({\n  type: 'scatter',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data);\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _updateSymbolDraw: function (data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function () {}\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar groupData = _model.groupData;\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  Define the themeRiver view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function (option) {\n    // eslint-disable-next-line\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function (data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var groupResult = groupData(data, function (item) {\n      return item[2];\n    });\n    var layData = [];\n    groupResult.buckets.each(function (items, key) {\n      layData.push({\n        name: key,\n        dataList: items\n      });\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function (option, ecModel) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\n\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    var dimensionsInfo = createDimensions(data, {\n      coordDimensions: ['single'],\n      dimensionsDefine: [{\n        name: 'time',\n        type: getDimensionTypeByAxis(axisType)\n      }, {\n        name: 'value',\n        type: 'float'\n      }, {\n        name: 'name',\n        type: 'ordinal'\n      }],\n      encodeDefine: {\n        single: 0,\n        value: 1,\n        itemName: 2\n      }\n    });\n    var list = new List(dimensionsInfo, this);\n    list.initData(data);\n    return list;\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function () {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    }\n\n    var timeDim = data.mapDimension('single'); // data group by name\n\n    var groupResult = groupData(indexArr, function (index) {\n      return data.get('name', index);\n    });\n    var layerSeries = [];\n    groupResult.buckets.each(function (items, key) {\n      items.sort(function (index1, index2) {\n        return data.get(timeDim, index1) - data.get(timeDim, index2);\n      });\n      layerSeries.push({\n        name: key,\n        indices: items\n      });\n    });\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n   *\n   * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function (dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var htmlName = data.getName(dataIndex);\n    var htmlValue = data.get(data.mapDimension('value'), dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      margin: 4,\n      show: true,\n      position: 'left',\n      color: '#000',\n      fontSize: 11\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar EffectLine = require(\"../helper/EffectLine\");\n\nvar Line = require(\"../helper/Line\");\n\nvar Polyline = require(\"../helper/Polyline\");\n\nvar EffectPolyline = require(\"../helper/EffectPolyline\");\n\nvar LargeLineDraw = require(\"../helper/LargeLineDraw\");\n\nvar linesLayout = require(\"./linesLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function () {},\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (this._showEffect(seriesModel) && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    lineDraw.updateData(data);\n    this._lastZlevel = zlevel;\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    lineDraw.incrementalPrepareUpdate(data);\n\n    this._clearLayer(api);\n\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._lineDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var pipelineContext = seriesModel.pipelineContext;\n\n    if (!this._finished || pipelineContext.large || pipelineContext.progressiveRender) {\n      // TODO Don't have to do update in large mode. Only do it when there are millions of data.\n      return {\n        update: true\n      };\n    } else {\n      // TODO Use same logic with ScatterView.\n      // Manually update layout\n      var res = linesLayout.reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._lineDraw.updateLayout();\n\n      this._clearLayer(api);\n    }\n  },\n  _updateLineDraw: function (data, seriesModel) {\n    var lineDraw = this._lineDraw;\n\n    var hasEffect = this._showEffect(seriesModel);\n\n    var isPolyline = !!seriesModel.get('polyline');\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!lineDraw || hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLargeDraw !== this._isLargeDraw) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLargeDraw ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(lineDraw.group);\n    return lineDraw;\n  },\n  _showEffect: function (seriesModel) {\n    return !!seriesModel.get('effect.show');\n  },\n  _clearLayer: function (api) {\n    // Not use motion when dragging or zooming\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg && this._lastZlevel != null) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function (ecModel, api) {\n    this._lineDraw && this._lineDraw.remove();\n    this._lineDraw = null; // Clear motion when lineDraw is removed\n\n    this._clearLayer(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\n\nfunction _default(option, isNew) {\n  var brushComponents = option && option.brush;\n\n  if (!zrUtil.isArray(brushComponents)) {\n    brushComponents = brushComponents ? [brushComponents] : [];\n  }\n\n  if (!brushComponents.length) {\n    return;\n  }\n\n  var brushComponentSpecifiedBtns = [];\n  zrUtil.each(brushComponents, function (brushOpt) {\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\n\n    if (tbs instanceof Array) {\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\n    }\n  });\n  var toolbox = option && option.toolbox;\n\n  if (zrUtil.isArray(toolbox)) {\n    toolbox = toolbox[0];\n  }\n\n  if (!toolbox) {\n    toolbox = {\n      feature: {}\n    };\n    option.toolbox = [toolbox];\n  }\n\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\n  removeDuplicate(brushTypes);\n\n  if (isNew && !brushTypes.length) {\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\n  }\n}\n\nfunction removeDuplicate(arr) {\n  var map = {};\n  zrUtil.each(arr, function (val) {\n    map[val] = 1;\n  });\n  arr.length = 0;\n  zrUtil.each(map, function (flag, val) {\n    arr.push(val);\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar brushHelper = require(\"../helper/brushHelper\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar AxisView = echarts.extendComponentView({\n  type: 'parallelAxis',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    AxisView.superApply(this, 'init', arguments);\n    /**\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  },\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    var animationModel = payload && payload.animation === false ? null : axisModel;\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\n  },\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: function (axisModel, ecModel, api, payload) {\n  //     this._brushController && this._brushController\n  //         .updateCovers(getCoverInfoList(axisModel));\n  // },\n  _refreshBrushController: function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      position: builderOpt.position\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  },\n  _onBrush: function (coverInfoList, opt) {\n    // Do not cache these object, because the mey be changed.\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  }\n});\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nvar _default = AxisView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {},\n\n  /**\n   * @param {string} eventType\n   * @param {Object} query\n   * @param {module:zrender/Element} targetEl\n   * @param {Object} packedEvent\n   * @return {boolen} Pass only when return `true`.\n   */\n  filterForExposedEvent: null\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar completeDimensions = require(\"./completeDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\n\nfunction _default(option) {\n  var visualMap = option && option.visualMap;\n\n  if (!zrUtil.isArray(visualMap)) {\n    visualMap = visualMap ? [visualMap] : [];\n  }\n\n  each(visualMap, function (opt) {\n    if (!opt) {\n      return;\n    } // rename splitList to pieces\n\n\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n      opt.pieces = opt.splitList;\n      delete opt.splitList;\n    }\n\n    var pieces = opt.pieces;\n\n    if (pieces && zrUtil.isArray(pieces)) {\n      each(pieces, function (piece) {\n        if (zrUtil.isObject(piece)) {\n          if (has(piece, 'start') && !has(piece, 'min')) {\n            piece.min = piece.start;\n          }\n\n          if (has(piece, 'end') && !has(piece, 'max')) {\n            piece.max = piece.end;\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction has(obj, name) {\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar helper = require(\"../helper/treeHelper\");\n\nvar Breadcrumb = require(\"./Breadcrumb\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar animationUtil = require(\"../../util/animation\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label'];\nvar PATH_LABEL_EMPHASIS = ['emphasis', 'label'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel'];\nvar PATH_UPPERLABEL_EMPHASIS = ['emphasis', 'upperLabel'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function (o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0\n            } // Others.\n\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (e) {\n    if (this._state !== 'animating' && (Math.abs(e.dx) > DRAG_THRESHOLD || Math.abs(e.dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + e.dx,\n          y: rootLayout.y + e.dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (e) {\n    var mouseX = e.originX;\n    var mouseY = e.originY;\n\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [e.scale, e.scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function (containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function (seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function () {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle');\n  var itemStyleEmphasisModel = thisNode.getModel('emphasis.itemStyle'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n} // Remove the last tick which will overlap the first tick\n\n\nfunction fixAngleOverlap(list) {\n  var firstItem = list[0];\n  var lastItem = list[list.length - 1];\n\n  if (firstItem && lastItem && Math.abs(Math.abs(firstItem.coord - lastItem.coord) - 360) < 1e-4) {\n    list.pop();\n  }\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n    var labels = zrUtil.map(angleAxis.getViewLabels(), function (labelItem) {\n      var labelItem = zrUtil.clone(labelItem);\n      labelItem.coord = angleAxis.dataToCoord(labelItem.tickValue);\n      return labelItem;\n    });\n    fixAngleOverlap(labels);\n    fixAngleOverlap(ticksAngles);\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent, labels);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\n    var circle = new graphic.Circle({\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: radiusExtent[getRadiusIdx(polar)]\n      },\n      style: lineStyleModel.getLineStyle(),\n      z2: 1,\n      silent: true\n    });\n    circle.style.fill = null;\n    this.group.add(circle);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngleItem) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngleItem.coord)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function (angleAxisModel, polar, ticksAngles, radiusExtent, labels) {\n    var rawCategoryData = angleAxisModel.getCategories(true);\n    var commonLabelModel = angleAxisModel.getModel('axisLabel');\n    var labelMargin = commonLabelModel.get('margin'); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    zrUtil.each(labels, function (labelItem, idx) {\n      var labelModel = commonLabelModel;\n      var tickValue = labelItem.tickValue;\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelItem.coord]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n        labelModel = new Model(rawCategoryData[tickValue].textStyle, commonLabelModel, commonLabelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: true\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labelItem.formattedLabel,\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i].coord)\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    if (!ticksAngles.length) {\n      return;\n    }\n\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0].coord * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i].coord * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i].coord * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphicUtil = require(\"./util/graphic\");\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nvar graphic = {};\nzrUtil.each(['extendShape', 'extendPath', 'makePath', 'makeImage', 'mergePath', 'resizePath', 'createIcon', 'setHoverStyle', 'setLabelStyle', 'setTextStyle', 'setText', 'getFont', 'updateProps', 'initProps', 'getTransform', 'clipPointsByRect', 'clipRectByRect', 'Group', 'Image', 'Text', 'Circle', 'Sector', 'Ring', 'Polygon', 'Polyline', 'Rect', 'Line', 'BezierCurve', 'Arc', 'IncrementalDisplayable', 'CompoundPath', 'LinearGradient', 'RadialGradient', 'BoundingRect'], function (name) {\n  graphic[name] = graphicUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;\nexports.graphic = graphic;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../lang\");\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * payload: {\n *      brushIndex: number, or,\n *      brushId: string, or,\n *      brushName: string,\n *      globalRanges: Array\n * }\n */\necharts.registerAction({\n  type: 'brush',\n  event: 'brush'\n  /*, update: 'updateView' */\n\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush',\n    query: payload\n  }, function (brushModel) {\n    brushModel.setAreas(payload.areas);\n  });\n});\n/**\n * payload: {\n *      brushComponents: [\n *          {\n *              brushId,\n *              brushIndex,\n *              brushName,\n *              series: [\n *                  {\n *                      seriesId,\n *                      seriesIndex,\n *                      seriesName,\n *                      rawIndices: [21, 34, ...]\n *                  },\n *                  ...\n *              ]\n *          },\n *          ...\n *      ]\n * }\n */\n\necharts.registerAction({\n  type: 'brushSelect',\n  event: 'brushSelected',\n  update: 'none'\n}, function () {});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  });\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  }\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // right-side\n    ? Number.MAX_VALUE // down\n    : 0 // up\n    : isDownList // left-side\n    ? Number.MAX_VALUE // down\n    : 0; // up\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // right-down, left-down\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // right-up, left-up\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (isPositionCenter(labelLayoutList[i])) {\n      continue;\n    }\n\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (isPositionCenter(labelLayoutList[i])) {\n      continue;\n    }\n\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction isPositionCenter(layout) {\n  // Not change x for center label\n  return layout.position === 'center';\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttr = 'splitLine';\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(axisBuilder.getGroup());\n\n    if (axisModel.get(selfBuilderAttr + '.show')) {\n      this['_' + selfBuilderAttr](axisModel);\n    }\n\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  _splitLine: function (axisModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line(graphic.subPixelOptimizeLine({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      })));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CandlestickSeries = SeriesModel.extend({\n  type: 'series.candlestick',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n\n  /**\n   * @readOnly\n   */\n  defaultValueDimensions: [{\n    name: 'open',\n    defaultTooltip: true\n  }, {\n    name: 'close',\n    defaultTooltip: true\n  }, {\n    name: 'lowest',\n    defaultTooltip: true\n  }, {\n    name: 'highest',\n    defaultTooltip: true\n  }],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    itemStyle: {\n      color: '#c23531',\n      // 阳线 positive\n      color0: '#314656',\n      // 阴线 negative     '#c23531', '#314656'\n      borderWidth: 1,\n      // FIXME\n      // ec2中使用的是lineStyle.color 和 lineStyle.color0\n      borderColor: '#c23531',\n      borderColor0: '#314656'\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2\n      }\n    },\n    barMaxWidth: null,\n    barMinWidth: null,\n    barWidth: null,\n    large: true,\n    largeThreshold: 600,\n    progressive: 3e3,\n    progressiveThreshold: 1e4,\n    progressiveChunkMode: 'mod',\n    animationUpdate: false,\n    animationEasing: 'linear',\n    animationDuration: 300\n  },\n\n  /**\n   * Get dimension for shadow in dataZoom\n   * @return {string} dimension name\n   */\n  getShadowDim: function () {\n    return 'open';\n  },\n  brushSelector: function (dataIndex, data, selectors) {\n    var itemLayout = data.getItemLayout(dataIndex);\n    return itemLayout && selectors.rect(itemLayout.brushRect);\n  }\n});\nzrUtil.mixin(CandlestickSeries, seriesModelMixin, true);\nvar _default = CandlestickSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nrequire(\"../helper/focusNodeAdjacencyAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file The interactive action of sankey view\n * @author Deqing Li(annong035@gmail.com)\n */\necharts.registerAction({\n  type: 'dragNode',\n  event: 'dragNode',\n  // here can only use 'update' now, other value is not support in echarts.\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sankey',\n    query: payload\n  }, function (seriesModel) {\n    seriesModel.setNodePosition(payload.dataIndex, [payload.localX, payload.localY]);\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Register the actions of the tree\n * @author Deqing Li(annong035@gmail.com)\n */\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});\necharts.registerAction({\n  type: 'treeRoam',\n  event: 'treeRoam',\n  // Here we set 'none' instead of 'update', because roam action\n  // just need to update the transform matrix without having to recalculate\n  // the layout. So don't need to go through the whole update process, such\n  // as 'dataPrcocess', 'coordSystemUpdate', 'layout' and so on.\n  update: 'none'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'brush',\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/brush/BrushModel}\n     */\n\n    this.model;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  },\n\n  /**\n   * @override\n   */\n  render: function (brushModel) {\n    this.model = brushModel;\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateTransform: updateController,\n\n  /**\n   * @override\n   */\n  updateView: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateLayout: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: updateController,\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  },\n\n  /**\n   * @private\n   */\n  _onBrush: function (areas, opt) {\n    var modelId = this.model.id;\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  }\n});\n\nfunction updateController(brushModel, ecModel, api, payload) {\n  // Do not update controller when drawing.\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"./axis/parallelAxisAction\");\n\nrequire(\"./axis/ParallelAxisView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n(function (root, factory) {if (typeof define === 'function' && define.amd) {define(['exports', 'echarts'], factory);} else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {factory(exports, require('echarts'));} else {factory({}, root.echarts);}}(this, function (exports, echarts) {var log = function (msg) {if (typeof console !== 'undefined') {console && console.error && console.error(msg);}};if (!echarts) {log('ECharts is not Loaded');return;}if (!echarts.registerMap) {log('ECharts Map is not loaded');return;}echarts.registerMap('world', {\"type\":\"FeatureCollection\",\"crs\":{\"type\":\"name\",\"properties\":{\"name\":\"urn:ogc:def:crs:OGC:1.3:CRS84\"}},\"features\":[{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@࠿@ᠳ࡚с̶ʩт˷˔ƹͮɠͲ˖рԜ׷҄̕ҴNܾͰؼ÷۸ήԪҮƴ̮¿ঞɪֶϤϲŹƛе²֭ĝǱƊĠǔōϭñėށ؅ਓɁȥԯ঻ƻԓࣗඩअ৯۝ڻो֑য়ߝล໥ϓ؇UļāļƫȖɩ̌]ᶼ̈́͘ɮ͜ɪ͚®ĞĚ۪ƼɦːϪǰ;Ąߞᢌᣮ\"],\"encodeOffsets\":[[49130,8189]]},\"properties\":{\"name\":\"Somalia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ƛ¬Ð@ĞÆÒªǱ\"],\"encodeOffsets\":[[9810,48188]]},\"properties\":{\"name\":\"Liechtenstein\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@⌗øĒ୬ͪࣆيʊˆ҄ؔ^˶ȇɪÈצϲ֌ĐФ؜ְദ׼ҢڴήࡔլİtʍԾ΃ʤ՘ĲʢË΢ǒŎɽĠPĀmǶVǢgΤ̑ĮவňȵǑ¼ýĈå²yĞÇÞ³ëąÍĥʹ೵]É³Ɨ{ΡŉƑcăZÉSÍƫH˃ǨǓѭǇƣġǥÕȿÕǃñÿśıƇħěŽđұĿЍUƉÝåSĵ^čfʉdʇǍ·ণ֣oۋ@Ĺ\"],\"encodeOffsets\":[[-8891,28445]]},\"properties\":{\"name\":\"Morocco\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@⌘@ķœ@@@Ŕ@@̷@̩@ǕBȍ@ȋ@ƍ@ĩ᫫@@ɋ@΃@ɭ@ŕ@қ@΃Oх̉űƽw½gΉɩķƯtįQJǳ՟TšRšPėRŏᇷCฝCċα`ý§¨Ƙ࢘Ӕ׎ŰшΞ׎ǇĹèƤ࠴݂Ģָ͌܌۴КͲޞŚƀ\",\"@@i˷@@j˸\"],\"encodeOffsets\":[[-13351,28480],[-8984,28120]]},\"properties\":{\"name\":\"W. Sahara\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@A@ƟwđĵȏÒʁč«Ǔƅ@ã̌Ο˘SǴʒÊÆ`Å_֡˰ϟʊkIDZʪĠɁ˔˶àϷˈȘѬ˻W²ɤ˲ÚͩǀºĬȋːÈĆѠŎǊĘȘoø`Ȓg¤_cº·¶ÙȈėÒ÷´fFfV\\\\T^Qhɿ՘ɳkĝƱƨ÷YißMµGuODƎĨãɰİÈßĜhŴĬŬ~Ũ±âZ]ãNÇk¹ėǌƽɣȭkěHãƺ˝Ǵč¬­¡İÃƩǝÿďȫẸ̀Qßço}ß]ĕUΥ@Ʌ±@@\"],\"encodeOffsets\":[[22080,43262]]},\"properties\":{\"name\":\"Serbia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@хǑޟܯőࡡԧ¡á͘з¤̧սշŊƉˏͭąٝ°̺׿ٓɥɓӱз·ʫɫƚν@ӧʟƆƋʇğԻzЛϭĭ޿ॕʳכ]ʛŷѿĘࣻõЍĺٵȀ͋ĠШъȒȢȌȜxèFƆ·ǴăĆˁȡ|ɍZ{ƒZØaŤDĠƲDèĳ̎őͨaŦ̰̚˽êóļ@͒ƂǲȸZíĊ´ubSv\\\\vÀTÎ hňǞjΔö´ƌFgÈèTɶǓЀ«Ȁǫ͊î̲ǆzĺîĢƘ؜Ɣ˒Ř˞ǈ°òńƲъÖŖ¾ŚǶRɄJǮˊרȋ¦HʲpȮńċľsĺ¤ÚR|¼[þJ¬wNwNÌÛļûĢmǌÂpp^ªô¤ʂĸ®T¸SZ^b\\\\~VvL¤QȂƓî§R¦¼¶^ê}ĞlôÒÈŒǐ`ƐǢbÀèHĎ±ĸ^ǠŶˌ̆ѨīÞŗ­ɃaÎJĊtÄB~oűځĈʁŔů࠰˨ȦȨˈŢƠ®ĈRľsª_ÂW\\\\a÷ËvkĄOΘĈ²ʹkÒČÑ¼­§MÕryWJ·oğ}ƽáHiĸã|u^Q\"],\"encodeOffsets\":[[76331,37911]]},\"properties\":{\"name\":\"Afghanistan\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ÂR̮cҮƠ͎Åǖ@ǔ|ɔDªĞƶHǊŖ̈ƄĺTǊ|ʖĞGR_¿ƽA½n½¦ʬGɼEҾi°oČ଩ýٵ͔ӑĠճēśnʕ¬ÓIàþÖÚ~ɈqɘM͚Ĳ̴ŐŢdܓ×މoěG±ðƁIĵY൑@ȗ@@ڟ@ˑ@ˑBౝǶ֡া࡙ࢳǑ೟Ƶҧƀ਩¼ҹͺሹTᅍeғ̴ʟÌՋȭǃNOėFǗģµƇo͆ƖËܼɠˌ҆ლζ֌θɌƴȞǀЊ¢ݐс޴˫ߚ̢̤hˊүஒґۤݴɦƌOՎNዲQĮĘÇƈǕϡÐŻĚƉÆ˕Ԃۻ\"],[\"@@̆Ƅ_øęÞËr___ğıͅ˭DeÌ·ӏɫθƅːОΖ\"]],\"encodeOffsets\":[[[18002,-8293]],[[12802,-4697]]]},\"properties\":{\"name\":\"Angola\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Π˗ä̋ÝԍȄ́ɊßQÙÚŷűŻȉ̍ǝ©¡aquwW@yÐğBƧůÙPÑXkAűˬѽ̨ŚAĹɐȨࠐDŮȡæ½ʮ̾ϦŒŷɴÒ\"],\"encodeOffsets\":[[20546,43569]]},\"properties\":{\"name\":\"Albania\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Ł^ĊĤ³\"],[\"@@ɨ÷ϫƯħƾƊ¡sƜƖ\"]],\"encodeOffsets\":[[[20135,61632]],[[20470,61800]]]},\"properties\":{\"name\":\"Aland\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ɵ½íIir[ò\\\\¢Ö ÈOŢ~y@esQm\"],\"encodeOffsets\":[[1747,43524]]},\"properties\":{\"name\":\"Andorra\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ʙOǘøĂç\"],[\"@@šȆĶãŷ\"],[\"@@ø֟˗ȫÁǸǣïԿƖw´ŷѡĹÂĹ˧څ[˥ççᒣʾ߳४oǪǘÚȱɴѼƸॺí̆ĐȾĚ̌҂ৎࠠŞɦò_m̙ź\"]],\"encodeOffsets\":[[[55223,24758]],[[54613,24841]],[[57650,26267]]]},\"properties\":{\"name\":\"United Arab Emirates\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ؠQۓƫĵÜǪĢ\"],[\"@@nᇜ͠έǇvµǥˠŸɏ׶УࢸНࢴŧʕȣ࢑įԭņ౳¦\"],[\"@@ȴǛߖȡפϿବӗɒ˳͉ӡȧɇ˽ͫЛoÁıξบɿɮȜǴGƌùÚDæ¶ÌEæ¶Ì rºʒàǞȔɌͦʮbΰƠ¥ʐĒɜũȈԵƛ۩ЧʩхŃɫˇԽ˳ƩǟXࢣ਍ʉƽƯɃƅę¡ě½õĳģă¾ɣÙßdƕqùşȅißlgĝëĿēk©z¿HÃiÉZÇÁEÕáųeû¤ͩɅŷĻҩžѻőēȰ͗آ˯͆˿Ʒ̛fʳɔɧ˜¥ÞщܿਟՍ̍൱ͷઃŻأУƊϋȰŉŁMĒå¯̩ŽÍīʩžБůǻӃǿ֋¥਻ΤɛŧŬਅϘŷƋŴcˎňƗ¢θĖƒƙZ΍Εƻϟ̲ЛŹ³ýתǭѫȁ΋͏Yש͏͍R̅ҧكʗցڛþؖ͟ӁٺóɖɁÛʗΉǁʔ@ľĩൿࡕǿʛş֡γƻ·̒LƷˋÉ͎KƨůԹ˻˃ѹƄƒеίăрýѬ֯ౡ̊࿩fЩϘÊܞƛØգŋ̉Ԩ«֊þŴ˜\\\\Đʊ͐ƢÌ̮ȒĠvɌǃȞƠ͒ψʔ̶ȬưƧЮȴǨī̀ͮȺȹ̒ϏÚmŎڬRĐǠ«Ĵԛ¶ŞϢȋӨżĢͩȺب̜ǤƉͬiߪȊʼğǤƄž»͖ƲŚ֖Ҙˤʷ۾qޚŘˎմϲUҐŝɶƌČ˺܆ǚÜ߆ɝèÀˊ˻ڨĠł˥͚ÆΞǰłƀ֌ǒFĦƶīĆÉيǘȄƞׄМЪˠ٪Ɉ\\\\ɰƖɭцƪˈƫ؞Ǫˠƫ̂ʾ̘ݨ̞̈ࢂƽưǢʾɼʚ̆Ē¼ĘİxzEÜ}ǘşöãîSƖ`Ѷ_͘ĳèţħčÔƧ¢ÇdǊʒѾ°࣠Ǽʗî·ƚ÷ƄƣΔӍ׶Ћ\"]],\"encodeOffsets\":[[[-66098,-56029]],[[-70300,-56170]],[[-62550,-24224]]]},\"properties\":{\"name\":\"Argentina\",\"childNum\":3}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@́{ř̮ǯŔfƖ˟§ʭôķƶɛ½Г˲Իðą̘ŸȦʁ͚՚Ú؞ÞǆǀťıÑѢȓǫƣÜşєʣßǫʳ¡Ժ͏ɼīŷȀƭƹúʇ\"],\"encodeOffsets\":[[47607,39841]]},\"properties\":{\"name\":\"Armenia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@āɆƃë\"],\"encodeOffsets\":[[-174823,-14695]]},\"properties\":{\"name\":\"American Samoa\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@īƨǜMïƙ\"],[\"@@΂ŜªūȩÃŚÕٸǔȢťƙțȃúͽñȐŵɖ¨ĻƣࠅƦƇƥƫJÌ҈ħĊȜͼŒǗëȃŐy\"],[\"@@ƥÈè þħ\"]],\"encodeOffsets\":[[[70946,-50236]],[[70846,-50288]],[[53079,-47554]]]},\"properties\":{\"name\":\"Fr. S. Antarctic Lands\",\"childNum\":3}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ťowîÐÒĎŏ\"],\"encodeOffsets\":[[-63197,17446]]},\"properties\":{\"name\":\"Antigua and Barb.\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ēǡÎƮŸÔı\"],[\"@@Ȫb࢈ͥ;ðŀùŢƨϸQƖƂɂyĄþȺÙńଡŇȶʏԑlԟƇñĈ§ĐŸþȏêķǁŻȲ­ΧȻºæĳǡ˱˙Ĕщ£ƞǴ¼˫p͕̮ʏאɨɗ¢ŚƹǪą¥FƪЅՊĵΆÔʸ˚ĩ\"],[\"@@£ÝÏÒĴL\"],[\"@@éżBÑ\"],[\"@@ÞƯ͑êʴĆ\"],[\"@@ʠȓbƿǩõ˵͢ȞĨ\"],[\"@@÷ǲƌ˖Š̻ǳƋ\"],[\"@@Çȏ|ƾ\"],[\"@@˪ZǎŁϟȅƩȩüϡ¥ǷŤĈŢגƀɀyXı\"],[\"@@ĥɩRʨĔ}\"],[\"@@ǿɪcɂȤѫ\"],[\"@@čǘ¾̞ǂǀéǆĨðþ˫ɭֿ\"],[\"@@þCȷǡȸĨ\"],[\"@@ŅÁĮƶXĳ\"],[\"@@ĕPŊÀř\"],[\"@@jɇǗȞƮj\"],[\"@@ľàēģi\"],[\"@@̉ƙŒɲʚÔĢĵǃµ\"],[\"@@ųÈÈĮìƵ\"],[\"@@ÕgIżàœ\"],[\"@@ěWÌŖĽ\"],[\"@@ƪdũʉǤģ³ğҷèö̆Țǂ¸Ņ\"],[\"@@īPþŸnƇ\"],[\"@@ƃ×ʤǮşŕ\"],[\"@@Ŭřҿ|żňƴŢŠƒ˽\"],[\"@@ͼȶŨɪȹӳЩρʸŅΨȠƹ\"],[\"@@Ñ»ɆΪƳ̭\"],[\"@@ğɠĂÌ^˫\"],[\"@@Í̉ʖ˱ƺڭʟǪԝǤĩјȚƦɕ՞ϙŜ௳ˠЉƂǶ؇ÿՙʪɽ¦ΣٌΓɼ^˘͡ࡢѧŀǇŻZĥѪқȾϟɀܥĴ¨ŶƇȰŔŦϸͧxƦĔƞ࢑ʼ˙֬˵ʤЋ˜ǣǔͱɔȗÒ͑ưů¡ਗϬ࢝εӯཝñܹ͓ԡõͥ˫ȩzá̏ťѩ֯W̃ſáĜq̡ЁÉћԟۏɗාϝȯകƍࡧؕ՝ÁĴƕŊ®ÇʱȭɾȉŧȢͥŌŪŢÇŴƷL˩əȯƈǎGǪɆȓǈеȥɨÕृԡࣩκؗĬŋįƛr΍ʌԷưԗնÔӪŅʔٓڔǬ¶ĤóMȢٕɡ˳|˞ӶkɖͳԀͭࠉڷąŌ˘̈́DĒلςӨã͈ŠĚǫѠNȳ̷̉ǡλڵͳҏՋàˑƩĴŧÝѳ̖ĀĊȞÿȗԸˣ˪ĉʢƵŜʳtŅƼÕȘńdNƶӋ˺ϟpϣȒҗ§࣏ј̣ĝഁ±༱ԕ୷ঃӭџŏإݵଗÙ÷İտ¢ಧů͹ͥұģٓэҭģࣃĢѽǊΟ̴ұƞ_ج̬Ŀ˘ϔ`఼Է॔ȃ஖ׇࣀř؞۽঒Ś½ƎȎБŸĒĂbƘϩԴ´ĪɘșVʣŊĬŚʵĊÓŀĖAπڟஔÔӈɤϜшĥɶ˸َĎ¬fջȢŢ˨Ѥغ˨Ұϰא̈́טÉښ̄ҪĨ̒ɢМஊκ˸ʆи۾ј̬ǕӀĪΎϬ̊ɀ̎Ӿ࣫~ЬȨ÷Ǟ͑άŔØeǊĺŊǃƼİɌĻІ]̯ĔXƔƈhÔȲŧďĻǶ¸ɞĺEŌȈ̶ƗTŔƍEÏŲǘƀˊīƫ;ͶȚ¢ȐÞȧƄ¼ÐůŌļѤŊsØƉŨŨƖšǰǤIƖńҰʍ؈֯ġԱðĖĊÕáɊʹɦМğƂɵ¬ʐ̮ɥFʐǲnȳƴþøˍƒ˦Όň΂ΠɪĿƂǀȚɨǾJǺȶŃLǆΘʦŬǫՂGǄĂƂğČƈǞXçö͖ǗƂͷbȿƢŜĸǎŉƬô̌ʁɺĈȊʡ؀ŁќȅˀÌʦǫǂwעͪǽ͑ʮdÖȗƮWÌňáŎǌȆɶɱƬc¨ęΉι¶ǿŏȅƕò̯ƓxՋҥە¤ƑلЗðƓΎīäǫǾ`ל̕ҔС٠ƱȨίڌ̽ЎàˎǮϰߜˬ஀đӲÒˊĹ̘ƢҎˆˈǢɃȼVŠƴ̀úßǨजʎȪŰ©ŁȐȭþץʴŏ\"],[\"@@ëµ¹ĸÈ¤Þĥ\"]],\"encodeOffsets\":[[[150893,-44438]],[[148525,-41765]],[[151795,-41487]],[[148260,-41478]],[[151887,-41274]],[[151553,-40711]],[[147383,-41078]],[[148803,-39414]],[[140899,-36596]],[[157224,-28094]],[[115900,-26678]],[[156752,-26368]],[[154775,-24054]],[[118217,-21286]],[[152621,-20778]],[[149789,-18668]],[[142807,-17525]],[[142857,-16970]],[[140384,-16156]],[[127588,-15771]],[[128204,-14929]],[[139996,-14135]],[[139508,-14156]],[[139611,-11880]],[[133591,-11959]],[[133754,-11649]],[[139877,-11651]],[[135776,-11574]],[[146616,-12241]],[[145690,-10961]]]},\"properties\":{\"name\":\"Australia\",\"childNum\":30}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ñǱʀ͋ãʣթɊśȝŕV̡ͥťŕƻࣃÑ˿ǥ܋ĶǭśFƵ^׃Čù~·¶½ÚĩČo¦I\\\\wPͥąȻXā]ǁMġÑÝ½iÇOĉLÍfÏ¬ğPčBuTDÆÅjǹőҫǦ«ǶĈǒď´ȌªúoŎÀvqL±Ŕ{cíƼò¨ŔSƨLêoŌGƚŃ२ȐdxMÀZR¸_ð@Ŝcǌ_î}t_aDuvkÎø}Dd~bÒLÚſÊ²ƘǋǼϤǐĜ|òÀ¦ƞXN`TŲAŲNZJłXhȠƑբE͂ͰࠬȱФΆǓ\"],\"encodeOffsets\":[[17360,49766]]},\"properties\":{\"name\":\"Austria\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Փň֍ը£¬ɜ¾ĸƵʮóˠ¨eƕǰœŚ̭\"],[\"@@ݒ࢙ˎǻ΀áƸȋϓ̯ĻȏӯɑǓˋŷĔƃʝ\\\\͹ɵqԃόʞƒǁȆǾƄ˛ʈ౉ٷùʈƺǿƮĬŸɻԹ͐ʴ¢àǬѓʤÛŠǬƤѡȔĲÒƿŦǺŐÂvڲɟ̂ěĔXüÒðT­´ˁƐķǎȸǄˎßӌѽЈéڂը\"]],\"encodeOffsets\":[[[47222,39811]],[[49739,42849]]]},\"properties\":{\"name\":\"Azerbaijan\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@guûƿcy¤«£ŇR§èöcĘÐOōiƃ͇͟ϟչȕů˃LǇԮZپǭ˪ôľʎǳʶ^ƜàÀ̈́ǀÝʔĔŨñ\"],\"encodeOffsets\":[[31287,-2457]]},\"properties\":{\"name\":\"Burundi\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ʦq̈ʣȋ˥wAá\\\\ğí£Í}©͋ʁw՝ɸ£̪ɯǉͫVtɴСºÿƞ˓°Ɠȼ̇{ȟ̆ۚɾèōЂ˘ƮڰêƸǅӨŁđͅ\"],\"encodeOffsets\":[[5831,51994]]},\"properties\":{\"name\":\"Belgium\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÁÁŏEĕŶǽbmlʻàƋ¿ǃĿQͻɷȍɽ׏ɧÓ֩aлɍÙÃAck_wL˝óVŃjån»k¥cÇ{ȍ࣫ŹžàȹזĀJqႬǷʾ±ՔӇ͞ŚԜѴϠҮyΆДo˚τƌڒׁ\"],\"encodeOffsets\":[[3682,11977]]},\"properties\":{\"name\":\"Benin\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@­ΏȀɃ ɯǂɥӪ̃ǱNC˕ӠͿҒÈĸȡŹƁˈ΋΅Гҭzѳϟ΃ҽƊȗ¨˟ȩΑê຋WíͿļƇVֽ^óºĽV«ko¥¥D·ØsÜÜ­­ÃĆ¿ÇYʕǫM͟ŕïÅćÕDķÚĉSąґӂɗĚԮȬ˪ϞӶȼɪɘ©ˮɈĸď˚ƬǀǠĄΜǿȎĈ®͆ʢUÞʬʌɸЊ¹Şʎޤ̨ʐȒѲXϠŭ\"],\"encodeOffsets\":[[223,15270]]},\"properties\":{\"name\":\"Burkina Faso\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@÷r¢ǆǷ\"],[\"@@ç\\\\ƪnā\"],[\"@@ęÏΒÒ́\"],[\"@@ũĀŠĐȟ\"],[\"@@əqƒɚƫѐĀzɮ͇ùͩ\"],[\"@@|JeƊÊAɪ̻ɖnńĊæŶɫD͍oȉZ¬WɆÕв«ாDΚȍéāőo[Aġğɷ­ĳǽǗĳ|̓ŧǃͱǖӻÞŌİǩÈWŎÖFȠÖŰŦQĀ@ô¦LÆ[ǞLòχzˁĒǍx¥Î՗\\\\ÏPVЇƉʧŒŵūŨуɣ͐ǉনÇ«ˉӴɛȱɩʑή©ӆ£ƛʉ˔ǃſѝƲ͓͝ҁƇ¶ŜɨɉőþÈ̎ơЛȱǻïђḍūǋɓŶ͸ŉ̜iǰ¥ǔàŬǡÌuȦ¿¶ËľŐˠ\\\\Ê\\\\ĮNUå¨ťjƉĜĥNátÉÄ¯ÞL`¤ĖǜLúAºäìȐİ@̚\\\\ÊõïƂɡ̗ɲ~ȸƶƜĚĦ­ĐXfæŰƒȏɐ\"]],\"encodeOffsets\":[[[94157,22025]],[[94079,22357]],[[93339,22708]],[[93755,22920]],[[92957,22620]],[[91076,26876]]]},\"properties\":{\"name\":\"Bangladesh\",\"childNum\":6}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĵ̓˧NǡǭνͻɿѼнҏmƱŐ¥\\\\ȝéɧuÇËÏŵsySyFyĵxÿckkgÞŵXñg¥ÍţśfɏŧŋiБĦƫòwr§î}FγyoµkQ́ÕċAđZ½SōGëÁȫ^ôͺƕɈЯːà^p~àèRQnół~ǴˬŦƪǞįÄ¢«®ǳĎƹ˞GäĜlĄÀŠŠ˸ƩƇŉ¨ħᓞƏ؀˲ܸƈ˶ŭϬ˴Ƿ̨}\"],\"encodeOffsets\":[[29272,44793]]},\"properties\":{\"name\":\"Bulgaria\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÛĝƄHɜĬXl̛\"],\"encodeOffsets\":[[51822,26505]]},\"properties\":{\"name\":\"Bahrain\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@řǵѡGBņƂôʎƪƄĵ\"],[\"@@ʚďΏ¬Ķ¤\"],[\"@@Ï{̶̀¡ǀĖ`\\\\ǉ̵˙\"],[\"@@ǽWņɀĭ\"],[\"@@͏ɬþĒƻʹЎٱ\"],[\"@@̻źxÌ̄ȅ\"],[\"@@ĹĉrŖĈ\"],[\"@@ćïŞ¬®áWͯǓ\\\\ȓϾ˼|\"],[\"@@Ǐ»Ăńˋ΢ΚЩ\"],[\"@@Ƿ`ʊvÑ\"],[\"@@CȳʣƧďǦȃ¨ËêǊvҌȤęȚ̓\"],[\"@@ʰſǾǇЭųƚĚJ¬ʠǫǌɁĴƇIÐŚ¾Ý\"],[\"@@ӐۑǅȯǄǀěǜǺĖÍ\"],[\"@@ƩĸƀŎPͼɫʈη¶Έ@Ͼ̽xǑŇý·˱\"]],\"encodeOffsets\":[[[-74779,21702]],[[-74794,22968]],[[-75987,22747]],[[-75834,23269]],[[-76636,23444]],[[-77480,24013]],[[-76215,24646]],[[-79521,24832]],[[-77115,24781]],[[-79203,25615]],[[-79609,25301]],[[-78488,26100]],[[-80376,27371]],[[-79079,26526]]]},\"properties\":{\"name\":\"Bahamas\",\"childNum\":14}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@˼Xȗѫϸˇ˵ßɂ˓ʩğ{D©OS«^­To_ðƛSÃ¡M®ëNď¿Ù«§ǟœ_nǇäŕġå٥˲çÆÌ̓τࠉ֮Ṷ̌ͬȶªΎȬVɞƱȦǨ͚¼ݨǗ܌@ƤǍƞ[\"],\"encodeOffsets\":[[19464,45947]]},\"properties\":{\"name\":\"Bosnia and Herz.\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ŘñࣸįkŻº¹ÎŰÊ®fº@ät¶²ZĘQǈR͢ƭʀąKơãÇUoHyÂ±æïh¥@ůŕs­[¯PmƼóŚ~oÝőĢĪƉĖăȌíƎ¯sX}WÅãyÈeƞJǬ_ɀŅɈˇ»OÇaĝ˝ƭʕ^ƳĂɁI{Uo½ßw¶³øÑüÁ~jȏOȃpw¤mÊāJqǃNȑEŅ¯ȥGŕÿ÷µóåëĿ§ýzÃ»TÃj©ƵåʏǢۃăȳȶC¡uw§SßkıěLd£ðÉh֡~ƅĩSĂͥrubŅŜËRķMƯbࠥŸண±çýŹġůÕwKñÓ\\\\íHýĭQM¢ѮБȸجОαজØiƦMϨ}æwʬòŮIlpĶvƪWÆlÊºʂàwl¥{ÚǊ¿Ħïd¹BSjj¬êÄÚzNvSņŘǜĘxň`èÚĸ^ʺQ ØņÌ_jáZƻXrX|¦Ü¢ĊpÜFϬƎѲӒ̂\"],\"encodeOffsets\":[[28824,57491]]},\"properties\":{\"name\":\"Belarus\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ÝŝĔɜuĽ\"],[\"@@˵CÒྪzƀ˞KʄИȒv­ħȀOĿƽԭÌÿğݑӥد\"]],\"encodeOffsets\":[[[-89961,17841]],[[-91027,16272]]]},\"properties\":{\"name\":\"Belize\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ŏgǎĞ½õ\"],\"encodeOffsets\":[[-66283,33069]]},\"properties\":{\"name\":\"Bermuda\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĭއҀޕU฿̇ѥޗAх̽গǉȤࣟ¯ʑѽǉc¡ÈÓƨČĪçŤ͗Ĵѵ`ƕ_íTõäǗŠÛ|Hwyįė»̅đɻʙǡʽƕǽǷZí´Cˢʯ݀Uˌ̣ͰØɰɗƜ[˾ǖŰDÄgįĮEhļƊĦńMpkx̭ʐġŀUž¡ƀÅ̾«Ŝ¨Āǁî}nǕξ@B@UÒĽŠl¢ԔҸWƔǄŚ̽ǄǡѐȾͼǝɰ^ƘЪՂǟФĂڬʚ͆ݥನ̌G͌±ƜďɾĀ˜ˆä|ƀXĨiʲʘۺЬরǀĈι]ęçś³S·Ħ͕VōÇȅǢх͸ʹؚ̨͋˼ǝɼVʬ˟ծƋnçŴƑÐÁî±ǶBÄaĂ^ʌz¬RӐʥŒՇČ֛ŇIƳI¬ŴƥŚƋΟhȗXŗ൚¹DÖf¢r~AIǥĵƅO§fǭƛlŹ¢¡̜șðgÔj»RĉĲɵÚƥúûßÅŵϟµƳÆŉΏיɪȡuÕi»]ÕăÅ[\"],\"encodeOffsets\":[[-59555,-20648]]},\"properties\":{\"name\":\"Bolivia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ËXȦņƦÑ̯\"],[\"@@åĦłĴș\"],[\"@@ǇMŲƘƉ\"],[\"@@ȗ}İĊĨË\"],[\"@@×§àĬFÓ\"],[\"@@ÚǼÊĥţĕ\"],[\"@@ĉćĮːcȇ\"],[\"@@ř¯ĘĄ§\"],[\"@@ėeɐ̮ŒξʖĞĀĿī̗ҳ΋\"],[\"@@јÆ؊őυࣽǣĽőĐ½ƽɭôçǛǻßɕòχëɅҢĨŸpŏtñƞŴՒͮƀԶĥ\"],[\"@@ɯǑģĐǐƨǄå\"],[\"@@͕f˜ƬŌçÑĩ\"],[\"@@ƯʓΟÈÈǂ҈\"],[\"@@cūƯ¾ɂҌ˧ÿĵ\"],[\"@@ĝiƂȈĺÿȵ\"],[\"@@ƁyǾŰ\\\\ǟ\"],[\"@@ŁĲǡÀ¿Nwʫ̃şݭĘ˝ŒõXŷOƅI½øŻŌʰ˕ΆƥN¶ƢHLżĢ`¢¶ʲÉªňĠfàǜH¤nȒȦGðnÒvQ°ÍÌgФtϴċ´^~PøLÀ²µÀ­âÁnPptzvĖdffHȐĩ̄¢¸VĈ¢ØORÄvJV¥§¦żQrçArYi¡èʬñ̦ȠܪťːˊɌպ֦݈Ęɀ˞ǽь࿫Ɍʯтƛ¸йͩ˝ϯԧѷʵוઁȻJλǃ׼ࢬհǤەʌɇͺƸɾā;ǎ˓ޥƮŸȸӴȂòʀ˼ȺŁĨŎıôfȾˮ΂ҶÌŜąjŞ࿄ؕṇ̌Ɇɂ̘ɣµÅņ®ĨʳǿǳĀĝȒǤ®ǓśÍƗőՋʈɔǬЊļmñ˅ɔȎВæÚłόõ׀˝̼ͬƛࡌĸєÇనܗΪн΢́˚ķńǗӬƹ࢔ƂķҸ๱Aߑэ੓ΡЅŃ`LƉљՕ̵ƿΑͭơ˭EŶˣ܇ˣЭ͏̿ʏ˾ƉƕôįÑȩǏǽ·ȉĎu¹ίĚ\\\\įԽƮ৫˓ૃ¤ѳйңŏ્ǽƛͧ۟ͥ˯Ƒ˧ýɣ гףʻɱɩ¿̭ޓiǑȰÍɡ֥ğÙʢ¢ǃĊ٫ŧŵĔÉً˛śǝяNݩχषڣºŏɯȻbĚǻÕƝɋØĻʔėɝȹöùȳŇ÷ǎީÇ݉ƭпЅʝЋЭҭࣁԹۧऱܙoʆ͐²΄ʢĢ̞ƴrǆɄǘwɺŔYdƼϯīɯˬŠˣĿ͗ÛÞŭαϹɹȅуÈʁѱࠃ׿ԕwJÅzË®@РhÀ|ô¸îêĄĚöì´ύɸƇ̄ƃĖʥĈ̶̯ϕǦ±ç͑ͺtqMo]ţģÅßU«B[ôhż΅͞Υ˺ʍÿŝ˳n³Ö¢ƆĚưɄʊƾࢤ਎ǠWƪԾ˴ɬˈцńШʪƜ۪ȇԶɛŪʏđƟ¦JŤŚǴĊžۆƬ¨ÀtfǕŪƻơ̈ƉĉoħgûZã\\\\£wð@Ö_Ę¹ºi áކŇƆMĐăĒţxǕ@±bűƠ«`˝ƹ঱ŸZʼĦڨíʶÁoǊm¦|¬[²kÖÆ\\\\ÖĄ¼^ÖjvƙŮďôΒך]ń©F¶ƴŶϠàÆùüÙƦıɶQĊ¼ÓiïhǷŴţæ¡¢kźƜeǮP¨ĶƆJǦ}B¡qÕeC൙ºWŘgȘΠřƌųƦ«ʼTċ֜őՈӏʦ«Qʋyā]ɹ`í²ÏÂųƒmèխƌȿǊ«ŖɹU˽Ǟؙ̧͌ͷʺǡц²̔ĥ͖T¸´èŜ^Ěćκযƿ۹ЫʱʗħjſWã{˛˅ɽÿƛĐ͋²ȝPĭGăEƑlķFė«ŻÃÏa©E¥R·éà¿}୞¶ƶÇs{]ͻ˹×ȉŗۻ]ǕвۣĊĴŪĶŪGńąĢŏƐĉÆ·ƦjŵĦƵЄXþ|¯^Õì©ti|jjp|KńǸ|vŘȖԸτĉ̲vÎ Ąƶʢþњ²zŐxú¶ŜĞĮĬĆΊȴܸżĞĶÈ´à^ǆQłd¾v«à¯Ģ^Ú¤LvLÆfɺ಄ɨఈȟּν̶b׾ӨŶˎÑƅ͢ґRHղචXãŀÀŢɐȧ҈̲ʀ΍ѥǦѼϥʌf͈ǖƄşŽêF̴ΖݲΠǒͶӜȌɌցúƥ࣮ϕΦĳɜǲŕ͒[ƞǓָ^К̍ŨΦʪŜɐ·˨ĊҔːɸfͰΐËǸx{TøhǊ¨nÖUĀ¸ČgŶſƃңϘƱ\"]],\"encodeOffsets\":[[[-49649,-28433]],[[-49750,-27035]],[[-46346,-24462]],[[-45188,-23697]],[[-39837,-13796]],[[-39673,-13411]],[[-45567,-3010]],[[-45960,-1349]],[[-53076,-1468]],[[-50819,-234]],[[-51868,-134]],[[-50630,-115]],[[-50931,275]],[[-51636,143]],[[-51356,403]],[[-51506,1986]],[[-61132,4458]]]},\"properties\":{\"name\":\"Brazil\",\"childNum\":17}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ıjǜȂųÇÑ\"],\"encodeOffsets\":[[-60921,13396]]},\"properties\":{\"name\":\"Barbados\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Ĩ@ŴҟƷãє\"],[\"@@ɽƳĀ˙ƽ̗ӷҰ̢ÌӒ̤Ĺ\"]],\"encodeOffsets\":[[[117788,5018]],[[117788,5018]]]},\"properties\":{\"name\":\"Brunei\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ǝŰīĞGČhQ®í×«ÛyÉSLiÅL»q§gſCƝ§ŻJ½º{@ŝÝҟcͥĲşéýƯ}ƭmŻdoºɇÎƹě¤ƵĆĳǶlĸâTf´Ű҄Ԅ² ĮªĆ|ÊÌæêb̰É^w{Ĺh[ľSźPîMʲď´HŰĆ P]¼ɲĉSƍ\"],\"encodeOffsets\":[[93832,28427]]},\"properties\":{\"name\":\"Bhutan\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@_ƧגࠁȖԋࡔҿĒͅͰqSһ̂Ыࡘȱbȃǎ½àß¦ȡgĭÅÉĭęïՇǳͭΏֵέȿ֍ǽŽƓƽ¯ɡµĉĵͥޑʯÿݏ\\\\řĠȉNÙtщʺȫFɩƙɿ֥£ÝɇƛŁǇã±ȇ×§ąߣOĉĚŸ۞̧٦ϙ̶EᙶࡄIᵦሶˎ͌ϯզξʌ{͆Ț̌z\"],\"encodeOffsets\":[[25865,-18220]]},\"properties\":{\"name\":\"Botswana\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ڊअoЛŻȍÎʣԠųŨ̽ҾŻ̈ˡgɁĈŉ࣪ڕ­ƯǦ͗Պ̃ɒԩ˥úȿřટɀϭ́صvݷˣҫ¼ωӵ༩˞˧̰ΛɔʱγȣЋқ`ܱŕŨˁĻ֙ǀ݋Ƴţ֣ʇҽĵ՜޹ޘÃϪ˩ˊƗ֬®ӮƻƤʶȮϾުɰˊВaΞƨƖƶȪ˃ܪζޒ¾ҜԢȇƲÐĒୖǂβɺވݒô̔؈̮̔Ý\"],\"encodeOffsets\":[[23409,11182]]},\"properties\":{\"name\":\"Central African Rep.\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ˣ\\\\͠¤»¿\"],[\"@@œ­ĂƪĻ\"],[\"@@ĵÌƚR£Ý\"],[\"@@ƍWʈĸĹğ\"],[\"@@ͥyɰĶǰŦùȡ\"],[\"@@ȬǍɽ˒¢ɸǼɭWκ̖Ôī̤nǽۥ̍ԡcƓŤϢҎՂϲǨÜɡƋϻԡ˙\"],[\"@@ŊĀҪŝघAуǿKȍЫøń´ƉĎàüȡſΫÐįƘ̑xsƦɃͨΞÿʉɶʵ\"],[\"@@ŢqȡuìǈѺǲѥ̑\"],[\"@@ĉǔȪĉǥ\"],[\"@@ॴΠͰӮࢨҔ܈Ǥذɶࢢ޺ਞֆႺӲૼkԶˋʡɦųēɣއͷ֕Ƙٹƕ̂іųȰȫԘƪʢĹǫ̙ͿɣЦ§ȧ˺ӧՂÙì·ȋï̔ƍࡄį¥ýɤuѸȸƮǱʆŤħÌŏƯ×ΰÙቱկʡKǟ͝ƒďƁÇĊıTǹ৥ۇɋűȠȧfÉˤ˚Φɹŏ²Î൤ۨˀ˃ǎ؎ŮోSҸИƕ{ųŠūʷगΑȍĀêĎ΍ˑε{ɃĒȯHÇΰ̳ľIଘέɜכœħǸǉٝىʏګӋՓϳhǃʃᥫEA\"],[\"@@zùƓŚ¸\"],[\"@@țûÝâʺZ\"],[\"@@ĦéʯÇPĮƺ\"],[\"@@ʡĦZĴǂLĆȥ\"],[\"@@ਫŌோ֌̔°੮ȣ࢖Οĸŧė\"],[\"@@įˈȒǋġĻ\"],[\"@@෺˕նڋۮʱоաĚôâɓɗó˿Âৡ̀ɪɢƺĩǕҿã˵ƄƺĀʵÀbźӫImǌ΂è͟ ͇ȌǯÃœɒċïıĤͫˊΚjƮӻíʍȸάĮ؄ȃ\"],[\"@@Ŀůϓ¹Șʛ޳ࡵ÷ͥդтdƥֆՙ̧ɪ¨ǽǿײįĪŖĻέ܎ϔ°ǓЬĦ˴ĵƱӳ̓ʸpħĕɔ§΃ɗࣲȬĝțЉǍĳʥËȚIȍȓǈś̌͞ΖĬʭԍȌƌǺňȁϯݥǩÀɡáOю΋ʳƏ˘ҺŝˈǟĔʝϥ\\\\Ŧ͏ƋϫЕЇŋŲάŦרшӧGǫǏҩɖøRȐޓɇಿƔٽƇǡƔ¤ɒ߈Ѷ۱˚ǂÃąǆ©ˀФΎąĝøĴŸǯzmņǔƀȌ«œǰвڰɈĠĳìɚˀ̔˒րȤˮćrĜǪ\"],[\"@@ȋŸİèĜȟ\"],[\"@@ɓ¸̼Üħœ\"],[\"@@ÑʞǊôķ͑\"],[\"@@વʬǊŖײhͺϩ\"],[\"@@Ĵɯ˳ѢƫœĻ˦ƍ»ĥƪWßřߍՊlǺͷŚژ¸\"],[\"@@ΝƙȕÉЊŹõɵʔŤ˄Ͷƕäơ\"],[\"@@ſrðǂÐǳ\"],[\"@@֛̈́ÈòюǏǆǇÿÝ\"],[\"@@ůĩˍ¢Ɍǔǲŋ\"],[\"@@̒yŘṯ̌ʭ̈¬̌ϼĚʑۧ͝ĵͳĸ˔xΛƜȟˤ˒ͤ\"],[\"@@jŸŰcƙœ\"],[\"@@̤Ɍœǯȏ\"],[\"@@áäВƮͯɑ\"],[\"@@ȩ͋M˞ˁ˳ɧÉȄ˒ϋȣѼծß̟ɞΜ˰˫\"],[\"@@Ěř̽ŎɤL\"],[\"@@ûÓÆƒvý\"],[\"@@ǋã¦ƺŦĕ\"],[\"@@Íʝàĉłΰœ\"],[\"@@őØɾɮɦřΑǫ\"],[\"@@ŗWΪĐʑ÷\"],[\"@@ԋʆդZʟ\"],[\"@@Œū˳ƒǢe\"],[\"@@ɒƏȅЯγϗȊJʔ˪ʆ͎f\"],[\"@@̞oYıΡHÞŚ\"],[\"@@έ¤ϡɶٸŝĘƻ\"],[\"@@sȋҕ˝ϕǋֵ£Ǳʚ҆Ϛୂ¦\"],[\"@@̀ȣ·ĳӿʸֈ \"],[\"@@ֿǎȚĀИƭqğ\"],[\"@@ΘǔΖȫႆӗ̾γǯǑࢸØѶ˟سʧ૧ȶõȄ۱Ǽૡۭٓǃ́Ӧ୏īȂˈְȢĹήʦ߾Ѩ͔͈ƟÁȣːȽ\"],[\"@@Οƴ­ɒͤſêʅ\"],[\"@@аåĉëډŠʍ̠ԶƓ¼ƙ\"],[\"@@ʌMśşůŮ\"],[\"@@ǅNϤłɝŏ\"],[\"@@§ëǛĤĒȢŲə\"],[\"@@ߝŏȨ৴ÇòǧǷS\"],[\"@@ʟĎÉɜɐǤɾĹƣϓ\"],[\"@@ԈűĻ׵ӟƧএ̡κƮɘѼ˨ޜ\"],[\"@@ǇÒȆö}Ƈ\"],[\"@@ѕźϘD¾Ž\"],[\"@@ѥƪĦƌʮĒʣ\"],[\"@@ϱĄʜŦɾÓħƕ\"],[\"@@͇~ɖ̊ȁ\"],[\"@@ǛkŚƄĭ\"],[\"@@Ǣވ˲ϑλγė\"],[\"@@ŋƕƉİʖ¦\"],[\"@@͑ŊǈƔѨ×˝ȅ\"],[\"@@šƮˀĩƝÃ\"],[\"@@ÜǏʗÛǴñǩdɈ̦\"],[\"@@ʳÜˀÆKš\"],[\"@@UěڷĿێȜ\"],[\"@@ĹſгFÎĿۇư̶Ğ࠲S\"],[\"@@फ़ʣҤϑОÓ࣏॑̕Ô܉ʤ͏Ǜň̋ÍȫĆƠࡀǠùȨъĭƅ˺ΈÄ̎ǿ\"],[\"@@̖įٟîΊ\"],[\"@@­Gȟ{ͻǕΗʭ̯ȍՑԩٵ@ܥFɗMĿ˝įöœr­MƟõÆÓɏƇࣗ͏ٽıЕŧϻǵϷǵɁ@ϝʨɲӄ̘̾܌ªĆ̅ౚÇɜ̱ƞ֡ʤļƬūĺ̥ũΘˉGȋǭ̚ǍäӧȬࡩΔ҇ǲ҉ǴՓȰࣝʳૻŔȷÀ˿ŕԱȴ˽sÇ@ïƄ˯ŐΟ¼ĳWˣùŧæ٥ŖûĸùŜµɌNʧÆMͅȣBܑ@Ω@ܑ@੻@⿿@、@、@ᅍ@Χ@Ω@੻@ີ@ć@čąƓʂ̌Ŝͭ¯ö˰˽ʃлǦŐƨűȠĂʕ²¤΂ĵʷʟēсȼɱͰǔϢǗ̝ΕaÁŶďƵϟ̓øҚİԡsŞƄŭzJǈĩšΧ¡յʄʐϨؒĄիHˣȕƳǐ°Ѥ̜ƒǐѺ˫ЕͬȰʚÉúǃ؍̧ʻсɋ̶ːƆĈȒ˧ƵȀҢʽíƇˆұȐùƔˈƞ§ų̃śΈEǢţɻǪϽÒõǊȜĤΫaʣΡʱƕ٫ЈʖΆΖĆϩ£̃Ȭܴ࢔ȟĈɅхݦëƄ˅\\\\ÁĞƟەʘ̑ǞȧÄĆɳł¸Æ¢®ÍÞšŌěþϛϘɯɲɫɾ֟̆ģøÁÎʅǆɡöěʒˇƒ˭]ԳĽĿǁiĥʵȟCˁğŵ«ƉíçZÓʼ؋͔ҧˮˇŚ¢ö¶Ĝ@ÂŽGχUʟũЕĮÕåȥȩ@Ӭ@݄@௰@݄@௰@݄@௰@݂@݄໒ŕྞҧग़çܨǕ֯ʒ̨¬˭îȀǘͲEŶƈֺT¢ǢѼƥʛɉࡖƴȼǐј|íâ˚ࡸǞЄȄ؄ɨĐxǏহ̃गį݉ˡԍ̣ɾćǕöْZšȚ޲̒϶Ñɘøþȭܒі਀ȸɑƓĔċǜ¨চђУƄưžٞɷࠎف؎ǋ̒ÜƹǖӶ̨ȇμľŰ͑ʂÝǵ˙ںrцΞߦLजŽ۔ɽណϻঘÛƹŘڪےǏր̅ōō֙F̥řʳȕʨëᕊŗ౜ĞޔǞόɓӾƼɥȨƨՀ˻EƉчEਤ׋ϛ˺]ȴӌđک߀ƈǾାƐ֤͢שÛųƅࡕuĩƁӵgͩŦ;˂ᅰʸДùʸΑ،ƷƔƕ࡚ªॺ͇٠ૼŪઘĥђæȁɠপϥȼȨҁļϡ¯ϩφζΤÎŋŘўwθȭҠ²ʕɭلǰͯةȒȧΞµō̦{EţࡇՔιȽː՘ZŢˀͣЎǆʄ׺¦ઞҢ͹͎ǳǹ҇fѢːƝǆՔĔŇǇǺɊاşǎǁÓॣȎӯ΂ɈʨΚOŨ̹©ʓƖĒβ͔ƤмÝƂžϹæग़ΈΪǽҾmڢЗ·஖ٍ֣´Ǉŋ҈Åމ̵ӜJʹţ׮ĪȧĳࡲÍЏǃ́fِͻāͿ̴ǽަ࠼ࢴ˹ΆӍáąϡ˳ߢٯڤʰޘ৾ٴÖȩÒȶȖѳƄĵԨ᝜ŻȔ÷̩ęώíêƉ܌¿ӣʫӜČǉՏǗՙWˤʩǮ¤˧ִ̩ơΫ࿃ו्Ԑʵ²ɣĹ͂xўɃ̖ϿΥà˭ëࠍ̢कpƋؐȯళٻѣT๻ӲşÉಋâ͖ı¶øࢺśߚε࿒ųࣟ࡝ױǅ͏ĸÎũПÀǏŲȗƼƹʿn\\\\ʏցğছȰ̙ଝ̠ŘɿʒqĝĜਆɍʷŗԼŤܺɉɬ͇ؿɓދ`ΦȑԫǷǑȨƳ֫ǒʦűΫʁȻRɨƥԍʇԅ݃ɃęwਗƙǗ֞̑ΙǬτߎUظ୿ུ̫ͭˮ࿘Ϳܾ͑ӾϑྡྷЗ˺ǇŭɧʰǦॴ|౤ȹƤɉǣӋʄΩųڋ׊ԇȓǫ̤g݆ҋŪɻ΃ɛ̼ƶ̾qٌѩ͝ΤͲϊʢƑŚəƠʠɁɸ҆Фʝ̙ͨࡂĖ̄ȷĆĂÐӅф࿀Զঞބà׊ʅ٠̤̅ଝ֎يזʞ̈́ćŕĚǐ˲ʝÈŐ¶ȓʀƬĬʋĈǜƚӻT֖ئэɶĥϚٖʒಲɍxŗϖŐ׬Ǒ[Ą߈ɘࡤ̉íʅɢèɼùƾŵƩý̎ĐȒÓǹƩδɿ०÷ʊǱЪƸĊǋ̕΁ð̩࠙¥ޞěªӝ˴ƿηĭ£ŕŔ̷Ǐ̬ÑѦǐӖjˈƉŸɑŅˑַɕՄŰͤθŐǃƧſʶɠàΏĞȈ܈ɸ̠ʨ̢̡͞˔Ǡ˴ˇźʎĐÁžξç̳ŶsȦ;KťŘ̖΢ˊ¿äą̉ƅРª¶˓ƜæʲʻǏōƜēȤ²ľřұş؈\\\\ǙȚVƪǥ֍˽˞ŚԬNǽɯϗƻٴŜƲƳ̆»SʥѷĻӘË±ơզȥˡुĶٔɳǝđў¿ʍŉ̊]Âƙů©̢Ň̄ÚƴǷȄ¶ÉœǼƙΥΝܞȾÎĥɂiͱ̥Ӡ͖ɘ¥Ǿʽ͎ÃμĐҶʅʛǣءƃǕƭৃǷ˓ȧȿ¶ʜƕȕȃඬײ׺Ĩ͍płĨٴÅʀ̷͛ƯǊţЬɪ͂tоʙƘɑIӍѫĉӠÏ}ġȟ~ˈɋ੿ֱಅƋୁࠓ໵ǳǍňڝÌṽ÷Ϗǽαթއŵୣ࠻૿Ɏॸʃú×ȁ̝ׯԋҿ˿ԣğएБзЅһȣɷ|˺ƻ؟˻\"],[\"@@ʻºȘǊäɃ\"],[\"@@ߎ¸ʈʢҐఞɭԿ̛Ȃ±ం̤ϣ̆ոq੆εӊ۝̀ćюɦ޳੊ǬǘಠŹࣈ΁ࡼৱŇљ޲εюĹzŪ଼̓ĪţѨq¼αуƜƏŵ҅ŮΏŅqƕ܁þΔƟÑɣ֤ɬʹWǄυࢍǙඩ¤҅¢ðƊਿĨ͛ȶٿοޥÉछɑᵽƳЩ̀Ý̚ྣôݩŢֵՊᔔɐ࿢ñࡌìᄿ͎ምĕഅ֩ɒIŬ៺ϬᕏďʑÚОǊ۹UͻĬȆؚɸɣƐ̈ǦᰶتδÙžȏЃБ\"],[\"@@൏ҼʶǺઞÒؘǃɡ֕͡\"],[\"@@ੂVࣤƓࡰտ൹®ఝŝсÎ̥ͰӿĠÓ͘ાÇ\"],[\"@@ߐŢҤAɬĻľԒ՝ÈӓʐӸȸࢎǁҷɜȀÌ׽ʷʨ͚ȚࡌƁ৕ʺࢎ̎ՔªƆຆżҒăैܩߝϩ԰ŜˁҗزʨʢȋžɸĪۦƥOȕ΢ƋɷȄƎɀসơ߽ʖؘɊႤŹո̃ܵёࡨ͐׌ķęŗݛŏшʝϧђΰ֤ļ̯͑ТƸ҂ʯćɊ͂Š੖ƋΌƫɟȝϋU׍ɛݞǺ̺ÑҜŒź³õɓे̣ԪÎŹ̻ϘϠࡾɞ௢ȡŎŇ෍ρ੾Ɗȗȋɞֺ͂אʁŤʭڣਗɏئÆ੶įѪůRť෗ÂՑőՀØӪę§ʁ஻ÖञŻɬƭ৒ÇʑōĠɓǎÂÈāƨΚÐșϓтȦàů̘Ğʗ]ǢвŸĉȳ͐¬ڎɱƃǿׇFܨïȶĨҨţ։΋تńӪɌŠ٪̛ƥŋԃîҬɩ͕ÁԅĈhƯҖǇՏgȰƵɵǋѓdʑǐŧȗ¡˂u͗ȱʩةȴÜȔʇʅ܅ծߦҬҷȩۑåƚǪ΁Óޡж÷ďȗèɓփƂךεƕĕБՍʆʏ¥Ҁķ~ǩːąÏǫ̰àϞǟǿÿ՜ѿÀƼΞɹɴƐ֐ɉɉŃϤÉśő̯SΊɟЮ@ĵĥ͚ǫɇϯѷѦļсͬ˹ЫV®ʳफИIĭƻȫȨǏ৏֐ƞʽ٫ʬΕk٨ѿϸá»ë๎ڧť˅ᎋ̦ӷƚЀՋIӅŮʯüƈĲ͵¯թ̎ԤƐޅŮĮƒ˗ÍߥӚƸƸ՝IŻŹÅƸ˥ȁƼȧÅȌɥࡩx©ōࣵŻݻĺʇŞ¥τؠɐɌ఼ȍ͕̈́ĂƖχʐՎ[ࡺȂӲeܫֶ୐ҼȶʬӌȊࣃऒ҉LA˖ʝ^ņŷɽMԻɢƪȦ༳̅zʼԔlʲƴۉɎȚǌё÷̇ÀȚŞ؛ÐƵͦёSڃ̀˵ǟҖƅwɝԿ÷ᅗĶؘ̌եǲؓėܙƠ׫ೕŲ̇ÙҕĞÙːேǿߍȼ֡ӊഢįפÈᖑϜ³ߘঀ࠮ࠢː๨ńࡈŇࢭ΃տӵςۙ৐ҝೇ˻\"],[\"@@܀ǵదƀрÁƚƃԽƏ̒ī९ϑڈòѐͳҊêŬƃ̗ȕǀЩ߿ǡԉšǄľΉϵśһîଷ٠ԩƐџCࠟϘъ˂޲̙ڎªöǢɤÏ΃ʔײ`ғŪѯëՑǲҠĨϢųχ˼ࠈHUŴ\"],[\"@@ס³ϋêขǶӓȫ\"],[\"@@ߔǁഄiȸŃร࣑ჿHφõǺȹЛͣࠃ_ӿܸھ޼νǾƊƈຬĴ\"],[\"@@ѾîôƵӖȖࡼY၊ԧÂƯᱝىҩ͍֕÷σקܑĭɷ²ଃ̍ދӪએʞңLႢຐݯӤᧈǔ࿈ʿơĵ\"],[\"@@ͧ_ˬĮ¼č\"],[\"@@ҙÞ˺°Ǡō\"],[\"@@٣ĤҔʂנȱЏų\"],[\"@@}̟߱ჃͪըΌࣜƾࠂǩ̮ͧ\"],[\"@@۱ŋÉŌԬŨʐŧ\"],[\"@@̽ƴ̨ÆVȹ\"],[\"@@ЧµӟĄ๘к׏҇\"],[\"@@ӛéՊʬ­ȁ\"],[\"@@ȀÛӑƅء_ɰżߋ^ƺĔωVĝŔ഼ŀтʕ\"],[\"@@ࠆőɓđ࢟Yȑɮіºªé\"],[\"@@ǃץМóÒɅˇôȍùǢʏ̷ÖÙƗᄩsȽƲ˴¸Ӈƈ౤ʖ᭣ƹǭðոɴঠÝχ¢ϩȦ̀ŒӛĪׄĀದсȹǌӒzܻĆξÎ܏ǲࡠĞޤƕưȔࡔȑ\"],[\"@@͗t଀ňߧŻ\"],[\"@@ӎ½ʡǅڰðʬǱȤ̂࢜ßĨˁӕҗࢽƋ૑h̙Ĳᶿկॷաɚఐɔ঒ӠȦᔱƿšǆ͖ƂңdŷǍ̃ÀǁӋģͥŜ˅ūعǠࣵ¾ʶȐল޺Ƽઃýاº̤ńຼľඡ¾ϤȦலmࢗĈۖȒڰ̶ȵूI൪չᄘMDƂާȘ͒Ǻ۟ȌৼϊՌ×Ʀֱ\"],[\"@@ۣȒΜĒφą}ȝ\"],[\"@@ੱ¨ߌĎ˦ŵ\"],[\"@@ࣆţʯ˓ҐƢෆ¼ٚƻܻᅌŻĹĥ၁ᅊΥ̱ȗؖģɬǤόūІÂǆùʂŐલȇkŒ႔ʒאË࣪æ໨ǝۀ̳ܻȍ࠘įҗë͹Îîˋඩģڝ´ډ̺SˇݥÝՕĊÓ÷ʷḙ̂ďᔫIģ˴ࡱɵ࠳¶˝ǤɇƗΑL۷ԜǢӪݿѐᆵ÷ٟȈ͜ĈਕżД¸̙ƦކĀಮŹ\"],[\"@@ٹȍѨǕωʲǅࢫƯȟȿّľĦͲމʕʏ͛пǞ°ˡ͗śзσ̜̫Ǘ્¹ǰʻw͒ȀߪĎᐄܐሺǑłѺè߮ƹ\"],[\"@@ͧ±ٟİs˄রŷLȉ\"],[\"@@ցۏҶϖG࢜ͯ_Ǐ\"],[\"@@ᆸ«ȯɯᏋdǩǼ׮ü\"],[\"@@ַÏŸ੊§ǆāׇ\"],[\"@@ϣ׉ǎղƌм˕\"],[\"@@۰y਱ȫ״ÑȧᆣƉڕƔ§̾ᙎǘ\"],[\"@@˦˭ඹÐ̇ģԩúࣻḚ́ƚနɤࢾë\"],[\"@@ઐšΏƑͪűႱɧ֗ʆ״¾कƤʃϖߚRবɁ\"],[\"@@܎νܺǘӚɷ׌fۚȣό؏झqڣ̤ಃ°Ľĺ৹ġۇüūǚ૶YϙĄղĐہǪرƳŰȀڏLlǮńæ࿰O\"],[\"@@ŹɍथƤHǐݴ̤ť\"],[\"@@ਰґஂé͈˿ւ¯˙ʴ܌ȹɱߐǡˋˁߪ°ˤſ̠ŐԘ˝ྑʹևʣΡˎ¶ϫّ¢åͯ৷Ξјϓ٫ƘˉƫรƎйŮࠚèୱÆ̱ŤЌtߣźೊ̔਺ø౫ÞणƅƩĤ࠱ĥҹȦ੖Ǭ૳Ù܋ɌƷȂᅄó͒Ŭॣ¹ࠩư܂ª̔ͅှƉೱɼ҆ǰ෎¨޷Ș়`ॲǳ\"],[\"@@ᣈ÷႟ɯᦜŪˆĒЖĻܨ̧ͨ٬Ð࣪ßȉɏᛏχᇃŁჁ˕ᾆǘ♩टঋƀϔʱຓġద}ۍ˥ࢣÉ࿧ưޠıĢɃᅡ÷୩ĈઞɭऺSƇǍ῅טŏൂÄ๨ɋ͡ǥ಍ਈƷ֟ˉᅫÃÃΩՍƩ༩w࣯ǰ̜Ƴً¡ʨýቒOѦʫ׆îʲȇʩƹᑝͭƥʠرrڿȔʠɍ൷[˵Ȉ§ˋܭ«િɾȏǩ֣ÒŕŚOǗݯhċ̰¥̏ۗ¬ŉ̒ऐɸ೰æܳɂ˯̊੘âখͷ܌čࡤ®ࡖκĬŤহϫ౓vɏ̲޴ɦͤgֿÂņʎڭΗՍyʢɘ࠱ǻ՛¦شԈະŜผţ౪ǦׁÓဇþzĺڶÅᜁږßΎᙲ{ႊҗ৲ã̐ÂݕpဏՊㄾҖ༓ò໦ДℹٳགྷÝ֌ǎᇏȵ໩̑Ĉ߶ɖጎȊᐯħಣ̫֣L঍ɠᗄĂಊɂያǥጉ¡˗ŞتàϷàნǔݍ྿ƅԂȖఃÃ̗ĨᳮΌ࢜ř͢þ೨Ë೑Ȣ฀Țቜ̹ĆƜᣒͫ᠛Қ٢ľλĠੈ³ŭǨቘċ୿Ȝᒌ_ഞ̣όØಷͲᗮJ์ʕڃƸՊƪۢh࢘ǗŧƲपКĉ\"]],\"encodeOffsets\":[[[-61222,44995]],[[-68364,45755]],[[-62424,46582]],[[-75463,46680]],[[-75332,46561]],[[-62571,47048]],[[-65342,47584]],[[-63400,48420]],[[-55528,48580]],[[-76501,46084]],[[-129118,50539]],[[-55863,50779]],[[-55391,50939]],[[-129680,50797]],[[-63284,50273]],[[-128188,51300]],[[-130250,51856]],[[-56789,52774]],[[-130994,52710]],[[-81289,53199]],[[-131449,53659]],[[-82669,54014]],[[-134915,54473]],[[-131637,54211]],[[-132267,54393]],[[-132964,54444]],[[-133361,55254]],[[-135839,55427]],[[-134069,55787]],[[-133709,56085]],[[-81897,57557]],[[-80830,57617]],[[-63225,58936]],[[-81629,58896]],[[-70819,60458]],[[-65952,61816]],[[-69871,61687]],[[-80416,62187]],[[-66388,62839]],[[-66591,63365]],[[-81454,63910]],[[-66379,64061]],[[-72025,64050]],[[-83968,64466]],[[-79745,64994]],[[-78517,64916]],[[-86957,66828]],[[-86706,67149]],[[-85735,67376]],[[-110686,68614]],[[-64185,68666]],[[-110489,69020]],[[-75388,69411]],[[-88673,69362]],[[-77492,69963]],[[-80878,69830]],[[-107049,70048]],[[-76678,69990]],[[-104290,70233]],[[-102622,70459]],[[-102394,70670]],[[-81111,70498]],[[-92364,71086]],[[-78843,70804]],[[-103599,71063]],[[-97805,71244]],[[-69544,71210]],[[-79901,71389]],[[-81337,71463]],[[-99778,71315]],[[-88998,71796]],[[-76501,46084]],[[-99105,74688]],[[-117270,74336]],[[-107815,74670]],[[-81446,75423]],[[-88667,72716]],[[-102401,75721]],[[-100628,75642]],[[-95406,75941]],[[-122609,75892]],[[-99692,76315]],[[-97594,76294]],[[-106618,76838]],[[-95787,76829]],[[-98384,77323]],[[-96795,77568]],[[-121168,77394]],[[-80960,77749]],[[-104680,77840]],[[-106519,78422]],[[-100045,78302]],[[-103655,78418]],[[-110891,77883]],[[-91879,78344]],[[-116286,78586]],[[-96558,78759]],[[-118324,79220]],[[-91989,79123]],[[-107067,78994]],[[-97776,79660]],[[-104134,79562]],[[-116564,79621]],[[-113109,79978]],[[-112451,80539]],[[-98513,80417]],[[-105908,81220]],[[-101162,81901]],[[-94090,83081]],[[-71156,85010]]]},\"properties\":{\"name\":\"Canada\",\"childNum\":110}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÅÑ@ĝ«ÏƜBAҬǥǺŒÆiÅCŉOÏĩȟÐ·K¥]u­mÁNwzµfĿ¡STďľ¯Ląků§¹B§TďƨyAā^čɵíǡťǕȍǦÎ®̡ƚóǘÓÇ¿ųíõȫ֑ēǕÕplÉü³ĿĪ[ɀƯlűMěñ½ŝħãIRAÂÆp¼ʌɾǂhÞxĮƘ²nlŐĘŌĔvnj@bč°ÌºƘǨ³ɮƆ۴HĘxX^G\\\\]NčMVStŘߜɃĐ³ćǑ@A\"],\"encodeOffsets\":[[9757,48405]]},\"properties\":{\"name\":\"Switzerland\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ɫªƎŞĞǇ\"],[\"@@ɓśŽĬәșȬࢲFƔƧ\"],[\"@@ڪĉό¸ŽǑˤċȠ͙ۋǊoǬʫÎƓŅƬƥȗӋʠĄɞƴ\"],[\"@@ƾċ͚¸ĶǣƫÁ߱ʎϐl\"],[\"@@̲áķɗˣŤЍÏɗɈǶƌԚŭ\"],[\"@@ąʹSɶǿǟǑϱĻĚɘɳƑŉXēɎѿƸͰŖѰÓ\"],[\"@@ؚŭѦʅγ ʥǮ͹`ω˪˞ƣ\"],[\"@@mᇛ۩IȥŬٱą૫ƶąĈņĂ؄SʂĮĆƃ͞ҩΘIȐ˰ɎŸ̟ȿeĀŋ̮ȱάÖШɁǬŴߋʢƍȄºƔآʲɿè׉ħʖˀŤȿǆϐËѬˮȸƳ͆úƆÛ\"],[\"@@ʊ˭ƃˁƁPɅМʂƄ\"],[\"@@½ĳΩCȯȑŖ̆ΖÒƬÍ\"],[\"@@ğë_ʄʾ{ƽƛ\"],[\"@@ͥĺ˦Ϛćƭƽ\"],[\"@@ʃ˕ɁźĨăȊАn\"],[\"@@ıܝƙIįʈƀʪȣĝėˍН¼ȲʢƉŔ͌öĽĺɖǀ®Ȓ̌Ð͋\"],[\"@@şƪâЬƲÜȜԑ̏ş\"],[\"@@̙ʏР\\\\ƖʬŖˢم\"],[\"@@űÖˮƻĩ\"],[\"@@ŷÅȋĂ͈ЬCѧ\"],[\"@@ƽƜĂĜüɷ\"],[\"@@ȯãƙð¡ŐȦʴβƣǫɫ\"],[\"@@ɣǑɲԕʍűԏהĮƦͼìĒȾʔőķ\"],[\"@@ŧāƿ¦˨\"],[\"@@˻Wɭł̎ாђčĖʟ¡ɯˋĳ̔̏ˁȅoƿ\"],[\"@@ƻ_ĦðÖÏ\"],[\"@@ŻĒĢÑ\"],[\"@@ƾƯ̇ࢁݧ̝ʽ̗Ƭ́ǩ˟Ƭ؝Ʃˇɮхɯƕɇ[˟٩ЛЩƝ׃ǗȃÊىĬąĥƵǑEſ֋ǯŁÅΝ˦͙ğŁ˼ڧ¿ˉɞç߅ǙÛ˹܅ƋċŞɵVҏճϱŗˍrޙʸ۽җˣř֕Ʊ¼͕ƃŽĠǣȉʻjߩƊ̛ͫǣاͪȹŻġȌӧŝϡԜµ¬ĳďǟګQnōϐÙȺ̑ͭȹĬ̿ȳǧƨЭȫƯ̵χʓƟ͑ǄȝuɋȑğḘ̈͏ơďʉ˛[ýų¬։̊ԧդŌƜ×ÉܝЪϗ࿪eౢ̉ڟŶ͉ɑথʯǙࡓʩĕ݃ɂȧʂЄĮ¦ʑĎ¨ɄϞǘ¾ȈƉ ݝ̱ɫ˟хǼ˘Кɲ©˰ƐԚ׷ìǱĕɱø·ҍѭȤͼŊİȂĵŕ˻¿έ Ɂ҆βŇŴƀΤãϸǪȌȿęƹżňďʸŔƶɫǈ΁Ĵӌ̃ޗȭȟȶύĬɢÀS̐ܿǠɻ͎΄h÷ǈŎĠɺŃȐˣ˪ĵŶϐ˕˫ǩ˺Ȣq֭ˈʞȂ̀i̫ǰưϢKɏƲƆ΄ʉЕũČtڲ˨ĶϷVġϸৌūǿŸę˴ȋɯʉΫɢĸŔʔģĞö̉ƈ˘ȼŽͦşlµıгŨnȔҳƽĢȡɵȔڂҞţʈކĜɪƒüŐǏԟ̻ƉΨÂöʴŦvɑȫϱĔɆ֖śΚϸŒ˨ęѕǸèɔԾȴ¸ŞbƄԏɤɪžÔȘáʶˊʆ÷̶ØƐŢGşɄŢ¶Ȁǁñ΂˗ÔϴɔŴȋǉ·ƨʏɟ͏NġĤƊƿÄŽͰʜॾɖƤƺӆʙ׸²ЀǓ˼A̜¼Ÿ͖nĊДѾޮƤͲЪȆ޲˴њßҶʒμɋႀʢɨǀìвǟ؊ǲɈȄܞƈȎɼ੒ÇҞɤԤŅѺƴ࣠Ǜʼ~ǖȚǪɄరįՎࡨɕଢаŜľǺ¥ʌƖ®ĊÞÚÈǖν~mǂí§ÿ¬śÆ̽¢ſVŽĢĿȦǟÖ²lwPoħŃĻƉFgİĭhCÃǕů\\\\˽ɘƛ×ɯ̤ͯVˋʰܿDˡʦÍǾƖ\"]],\"encodeOffsets\":[[[-68903,-57115]],[[-68689,-56477]],[[-71375,-56237]],[[-72695,-56184]],[[-73103,-55329]],[[-74673,-54765]],[[-76170,-54192]],[[-70277,-53916]],[[-76618,-52869]],[[-76348,-52507]],[[-77109,-51896]],[[-76856,-51503]],[[-76909,-50008]],[[-76263,-50327]],[[-77322,-49933]],[[-76356,-49758]],[[-76914,-48985]],[[-76096,-46788]],[[-75399,-45897]],[[-74737,-45854]],[[-75504,-45460]],[[-75582,-44879]],[[-75543,-44386]],[[-80695,-34453]],[[-111902,-27791]],[[-68807,-23369]]]},\"properties\":{\"name\":\"Chile\",\"childNum\":26}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ŀ˯̻̩ǃҙ͓ʥҡȕۉˊ٦ԤϨċNðĪބƠΖßÂƌȦū\"],[\"@@ŘScĭȉĖü\"],[\"@@ĳaļòGÏ\"],[\"@@QƜægÓų\"],[\"@@ý§\\\\Ěâ±\"],[\"@@ĵolǦĮ¡cœ\"],[\"@@ĵoØŢı\"],[\"@@ɭ¦¯ŊˆÙXĕ\"],[\"@@˽´ʷɌնʿ\"],[\"@@ɽǬKŮ˽ĚǙҧ͑̿݅͟§ȴ͉şȁ߿ŦȍȦǱهۏऋϏѷϣɋƍϣڻɽܝҡʯ¥wśУŏ³ǂӖǂ«ĤǈƔҗAQƆɀĂ@ǦʆĘЊӺυζėŅү°׏֛ࣳГΏӏ֯īɍƈƥȽ˳·ȑǬˁȼŇަşŲ˻ŗ̳ˮǋЈbҪϾ¯´аżݠ̻ΖÌԢŁȃ˭Öķƭĩ΃ń݇̇ȱjîǁƹ}ÕʃȵÛÅƤŧsõëǆőܗַɛϝčࣈЋԔ੏c̕ШȣÀǿϞ͝VħƻRˡŬ͇VϟȤПƛְ¢ÔƏܼпǾͷϭŅԅι̹ɉūʦ¾ŜƛՀƞΜ˙ͼĝӛ͕κĸoЃǙĸȗÁǊȫśiĺåƿǭŔ̉˳ÏŁĖƿʑǯuîĳȵʻjƗˡ˅ǉΧǡ»·ȢħįĹ²ʘϙΗɻ˗ÈǊơʌ°á΋êǙω¸ĘǽʷmËɽɫÿhǵӍLåũƏOǶȓΫ΅ƋHĉɃÝłǩŕƟÌ¥ǍșĉÎÛƇĉËȝǿͱƯǱªšőʫĈ˻ǙǝŜćȏʍXɁyͩ̌BɠčsǃǅȈˉG̳ͳų»ŐœʥũȅƗȏǜ¯ȣ̣Ğ˹ʓӯ¡ϙʟſľɍͥǲě«ƓǖŹƕȉϱÎðìʱЀfǸɀ̌ȳķƔkŹͩĥƒˣƭɪħHnɫƫ¼ßŕɱ¥ǳŬ΃͉ˆʵ°ħѮȖɸȧŊə§ŋĦʯ¡Ӊ΢Ήǫƫ˃˅ıȓĆǛɓˑȮŅǋƓƴ́˓ѕʬÃƛȭ»©£ʇRçĒkJQqs³uß©©mǲΩN£HƟqʓÞđaO±¡oMƋìɕ¥\\\\ovY®RÄÆlĪµ¹ǀЋʃϧRǧɸoɨ؋Ĉ˄۬õĠүĺθŽɾƄǼԻUխǙŦˌƩɚªʄżĂè͎ǆŐɺǆ`˔ɸûǬĸĮ®ԆóڌǕìŻęȣՖϳ˦½MęſÙċgŉėʛȅë»٫˼ϧÜԽ̳࢓ƇϫɝʱҍӁ¢׍rKºÄMlVzÊ¬ÜØ¯îRćgğHůĪǠTƎɻĎ÷°Oůą³GʱĐíNŹOĽTg\\\\|ĺ]xŃįrĻRéaåÉËą{ĭ©±ӷس· ÉÊaüæȶhĐŜȏðŵçŵői_B¿Ƚ`ȧÑ˧Nűbķøïûûn¤yrÛP»cĹĝãġÀåþ·]ůÍqd¾åŪåîå¶ɣCǕb÷p´ĤôAjVµNǵ³·NӉ̐­ŀ¡ĶuÂáïv̑ăΫή޹Ϝƫɚǁǳrȋ¥Ƌȳß­Ǉǔĥ®ֵɺbĬʃǤɓÜɵĊɿ˶̧áXȐ½ǆȲȗȚîƔy®̈b·ƒšɄŞqш¨Ķm®ƏĶëîå͆³ǢȲǸľÑҍǺƗ˺éǂ̂ȱ`̑gŷǡǯ¾ĥ¢bą¨ËWĪ£QĭœuÕA}fÝżƃÈ¾˪mÜeÂýņËĕ ÿdħZ¡Ū}~ʕÖėe¹_ǓêûB·]]R{vķäGjƾâĢ~¶pXIzÖq¨NȒźȋǺçܠ҅ǘɃĵȋÊėȺĠĪǕɖ|ƘIªǈìøPzĜ¤Gjzz¦°Ď¬Ä۶ʈ{Č°~VŜĚHŊvɾŮCĺˍǎE͘ņ¼áÞìºĈņîdäj¢ĬƐìâ`ԂŚĄŢIƖtȈǦbøäʦŤҨȈЈĮØĆÎhʴdfVXbŊMҜ˰ŜůƜͪĲα޼ń԰ԡƚǀļ൐˾Ɇǁ˒¸Ɍÿøʤʟƞ׸೺ࠤǹմDĴšטȞƠǆŋ֊ȊЂڦŦɒѪўĀQČȸªE¸ƋŇĳô÷ǒ±yãŷˤéĔËĔg¦ÇRćĚ¥ƀËâYŊñδvèqǼƫ®Eâj¢ÎQÚōôĺsdkĂųÒȁŬƹÔąìeÐ}ÑÚœ×Бÿ¤ÓJÍ˷ѕǺˡƢl҆ş۶ÉžDǬrؔù৒ӿ՚Õqȧǚïˬ֫ѴұېÎቚȅѠĠĒMζ­ӖÅͺYê]æo˂ʅƸ·ΘÅмï՜ɉʊʶ¤ǌ@ǿ̦]ĸ£ÌjÆ¢æØİҮȈݸʜ୶ƆѠոlĔdߨˌԜӊܸ˶®ŔѽҬиגŔdäeʤIôĈÿĠ˾ÕɄeǨ{âaÆdȌŐŸ ¨z˶ȚŠǀƮ|ƲȲXѦÌѢʀ´W¦_̌͸ʞĊЌup|AĎ\\\\`ĞDǎÏˤŰðXŸĄ[ƨWÌTØSĸÌĨsǢąƜqŤZŬmðDlĶ~ƼƽʖՉшÁřĵÍÄĻĸÍؗHΕ˯Å^ǹŞı~§bşbĝIśsœJ½`ïCſËåßăqɿǀûɌĪ²ŬÀVĈIĠ|ĺܦਸ৆ʻӠ˦ڸȈðǲƵńݺ৐ֶжÿЄӳÈvżݢкᔺɘৢ΋ɚÎӘƉ׊ֱӪ੗͐ͣ~̛Ɇş΁Ϙȝע̤ȍθ^הй̜AɑɄɕÑ˓Ȕʹ౞LȚȜξƄ˘Qۚɶ̺ĵċȗƾʵӭ΍ʱࢯΧգȿġÓ̩ƫč࣫ʠͽ˽Ϸŝɰ٭D׋ǁЏէƥĒǇ\"],[\"@@ƅǦüĻ\"],[\"@@ɂzDȵ˥ÎàŮ\"],[],[\"@@těřlĦð\"],[\"@@Ɨ׏ԛژƇδºцބ୊ҬȰ˰ʧѿຩ͝ҩ\"]],\"encodeOffsets\":[[[113551,20472]],[[113035,21600]],[[115348,22160]],[[115498,22121]],[[121020,25085]],[[122697,26068]],[[124162,28761]],[[125232,30683]],[[124788,32249]],[[133660,43557]],[[116734,22744]],[[116752,23053]],[],[[121250,25111]],[[123913,23164]]]},\"properties\":{\"name\":\"China\",\"childNum\":15}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ҒӁĆĊTĸÙÖCŶŖ͠ŖǬNʖÈZÀÄą®°òŷt¸×¨C¤lpT£gåʱ´iË¤ſĀӻÕoOwfY¯qķ÷ƛБɣףȔࢍǤģƗ»ɻ̑¦ŶŭȉٯưЧ×ӒKܥû͏Ôí¹ʲi܏ĳ്և{ȆÙƼՒ¯ʔƳÈÿXÑĴmÖîÿ¨ʱʧƠɜΰëЮkǆàWĶvøƞUĚĮǰúýXÛZżN¢ʄnŊUîû@oɤșŦZǌľÂkánȐȭäcВƐǄˢɞɶñ̲ǓÈǘɐNpmĶLÆT´nnƞăȜƂºˋC}£ùFcĺ¹èMńĦX¢ªŴŚNƤŁĶL\"],\"encodeOffsets\":[[-5388,10568]]},\"properties\":{\"name\":\"Côte d'Ivoire\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ɯˉϽީʵȭƼƣ­ӭƘ֫˪ˉÄϩ޺ޗĶ՛ĽӿˉȨ۵Ĉ˗ƾઇÕĂඉǯEgōț@ʱ@ڻ@ġ|KIlsNlȢńҐɵϬĀðĽWïƾƸ°ċĦ¤úǣT·ťΥƚçϴɏİIŽĭ²ƨЌʂܸатʒ˼p®hƐĲĖÚrdjkô]ĶBǊƼ̊ʉàáÖȫ gìZƒêŲƎzǊàÀǢƒāžÖǨȴǼ׌ƞˀƮ|ÎŊŴrÌÎΖ®ļɨŚÒЈŨŔĸθƐɦǊɢöÒÜðHºh̜ȌºքčŮȷ¸óøķՎƲAǼ±͖ѧȠց©ؙĒϷŦʕ͈̋உwɡʍ̘Чڄիθ٧Íɛ\"],\"encodeOffsets\":[[15852,7705]]},\"properties\":{\"name\":\"Cameroon\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@͔ϵͼʛȢuʦƴмħȴȂǪsѤԕ˂ūàǯƞ@æőÌçŷ̯üǍį͡ϔƻÜȍહ਍Qˏǻͳşణ͉˧ÅЋɉǣdȡĶíǮ˩YٽǈԭBß˵CÁfëǚѡªŵZÓU«ėǃU¹vŭš¦ãĴȇöÙƎģŨĥĚĹĎƓĀɍ̂؝༓ʕyʥϿσǠϡܷɗࡡČȵӦҋΠÍnǆʌÔiઁȃǄ̑űƿ|ʅόƭöśˌ۵ʔΑծ˭͕ڡÚ֩ɢ»ΊމǣWʌͱɒÅģÉ̳͙ĳɗPɇrÙ}ýÕßJ«ÔmʖĔŜğմ͓Ӓþٴċବ¯pҽjɻFʫH¥m¾B¾ÀƾQ^ĝJʕǉ{ĹU̇ƁŕGǉĝƵC©{ɓǓǕ@͍ÆүƟ̫dÁQԁۼÅ˖ęƊÏżϢƇǖėÈĭዱRՍMƋPؙŧȩȰɬծ¨ÒnfȞȮĲĠ``^¤CɺȝȶĮ¶ɢȊ}ΖƼüųëŕȷʠ¥ંबȒآCܒ˚˴˶Ԫܼ֪ˎᓀΚފĴҮ_ܲЌҜδȤʲΜɓ˨̯༪˝ϊӶҬ»ݸˤضuϮ̂ઠȿɀŚ˦ù\"],\"encodeOffsets\":[[28061,5232]]},\"properties\":{\"name\":\"Dem. Rep. Congo\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĳҭΙމˍᒿܻ֩˵ԩ˙˳Dܑȑءઁफʟ¦ȸìŖûŴΕƻȉ~µɡȵĭɹȞ£D]q`ÝÊ÷Ĝ`̅ƃНΕȫςխղĖȎɨƞƴƋǌb°̆ǿŢǎȇŬÊдϬÏ͐ê]ʹƄĒǠėǖ͋ЊçɦɎź˝ĚsǦŘŘȆ˞øૈԩ̶øҶ̾ɪĚɸȽЀˣ¢ՓƛҒĸ̼ઈ˘ƽ۶ćˊȧľԀʈҾŤ֤݌ƴ֚ƿ˂ļŖŧ\"],\"encodeOffsets\":[[19057,3562]]},\"properties\":{\"name\":\"Congo\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@՛ǏʑЁχ̣Ư˿ŗם̟ԃʶÆɘųŌЙɴ˹çٙɞŹǜ˳݆͢ĔԜŗמۣߤԨŐ̈́ğPȿ̍և}ٙǌե̎ϕҡԹȬ@΄͹ˬকǥѦɿΎ̱҇ɏȨ¿šäĿඟWGձҒQƆ͡ˍÒӧŵa׽ξ̵ȠֻɧఇɹಃeǛƼÕƘµ~ͩ՜़Ëfã¥°ɿŒÓZµÂǫľ­X·gñgéÉǙkƋĢǋÒ¥[Å½Ã»©ȟ×؇N£°Ƒ¾ϔʥŚƗώǕªÃÒ¹xÉÎŃÅx§Þéɪ¡À£¢½¼ÙÁs®i˱Ųū³Яǒг̌ȉǟݵƄÑȰȡǜГŌ֭ЦƓƘȞȎǺÙ]ӪƦń̌tɆǨئ৔ƽi]ƒãħ§ʬĥƘƼÈ˘ñԐƉǴʈȲȁͮĎͰҁպŜЂȊŏ˾΀ʁѶĔƈѮӋÓįŚ^͊ůɚզΒɀ͚̈́îɼŢЎƛ¿ɚϾԐоќħƻőĬćɐҲۤsࢎԀŞʦΞȚϞíŀʏƵƹ\"],\"encodeOffsets\":[[-73031,12147]]},\"properties\":{\"name\":\"Colombia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Ð½ǏtĆƂ»\"],[\"@@|ɳʇƼɌø\"],[\"@@ȧŲÔ̈́ĀÔЯ\"]],\"encodeOffsets\":[[[44840,-12602]],[[45544,-12371]],[[44509,-12186]]]},\"properties\":{\"name\":\"Comoros\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ŏk±ŪƖlƍ\"],[\"@@yƾú±¿ŋ\"],[\"@@»ûǛ̰ʰˏ\"],[\"@@ȌÉcŁȽDǈ\"],[\"@@°§ǭxãęÙłʼH\"],[\"@@ý¢ŠƵ\"],[\"@@ǥ^Ƃø¤ĕ\"],[\"@@śU{žʬî°åǃů\"]],\"encodeOffsets\":[[[-24891,15213]],[[-23738,15501]],[[-24006,15369]],[[-23467,16627]],[[-24665,17022]],[[-23437,17059]],[[-25484,17222]],[[-25773,17354]]]},\"properties\":{\"name\":\"Cape Verde\",\"childNum\":8}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ʜԑӌթǸýIecgµƁði_¹{}W]i@͛¸GĊÅZǃƧ¾ėVũaƓĭŰɡȳʂȢʵĲƮʧɃǅƚĶǄĻ̄܁Θő˦ѩ˾Aœ̎ʉǅǿȧǬʹüȍ͞ƶϞȫźƎƐƈń֦ȳɴĎ׸ʻǦ¨ÒŎ\"],\"encodeOffsets\":[[-85649,11180]]},\"properties\":{\"name\":\"Costa Rica\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ͭŋȋŸǰAğǘúŶɸ«Ÿˋ\"],[\"@@ȽŘʈđ\"],[\"@@ƋØĆĶƝ\"],[\"@@ӚKİďж¢ʈƅҜ³ҚЕӸࢤӍŞQïĎðc̔ȑȅĨŇźĘȚɑ२ȁńĭŅɽۼÁ̴ɡ̄û\\\\Ľ߳ɡĚśīܱĆಳœԤҬŁȤݗĲ̽ʖȥҎՉMܻʌɉɂҥ¥űǎċƃӃĔȓƤ̰ĠŅƨݱbաϹѫ«ŉȑЅƕBż͕ÕҼǾʮˆʎڎʨஜǐ\"]],\"encodeOffsets\":[[[-84543,22090]],[[-79533,22479]],[[-79748,22659]],[[-83801,23719]]]},\"properties\":{\"name\":\"Cuba\",\"childNum\":4}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ȳèƍȨ΂ˏ\"],\"encodeOffsets\":[[-70401,12350]]},\"properties\":{\"name\":\"Curaçao\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ɚʡuÐ\"],[\"@@çSƎ°å\"]],\"encodeOffsets\":[[[-83322,19814]],[[-81739,20186]]]},\"properties\":{\"name\":\"Cayman Is.\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ѹÃýƌϵÙǧìƖRÀǮ֔ߖʶԩ̳Àȑ\"],\"encodeOffsets\":[[34821,35907]]},\"properties\":{\"name\":\"N. Cyprus\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ǩë϶ÚþƋѺÄÛ̍eׇͳҹƆōȌ_ňΊö\"],\"encodeOffsets\":[[33498,36016]]},\"properties\":{\"name\":\"Cyprus\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@òFòrVņ࡜ͷɲŚçǫųήˑ̎Ŕğǆ҈ơʌ¬ÙǅȺŧźÂ҆ſɪ̱֟ɇÙǉ˝ƩԻƵȯ΅ǔУࠫȲ́ͯաFȟƒ¤í¼řêęGnП̒ȡìʓ˚ĺŚ΍θ@m´ÁzrȴǀϼĈƒhী͜£ŜȎ^zGS·oÆcFrXb\"],\"encodeOffsets\":[[15165,52080]]},\"properties\":{\"name\":\"Czech Rep.\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ɭćȼ̶ǩ\"],[\"@@CďѣŬ̸˒řªƩ\"],[\"@@ʂŵŹǝܨſʀÂIǕǓęĚáМ§װȊϸʤϠ³ΚɧɶXŢʥͦĻƣĮɭCÉCcýÙáŻÿU¯ŀăɖŗĘį¥ć_ÑhÄyÔƗųȽŘǣyé^iƲ»~yx˷ñēŗIYWaqEÅdpT¸yH]ȍ¤śি͛ƑgϻćȳƿyqÂ±n@SQ@ǤōǾɑĹřʔ˙ȢëР̑mĚHŚéî»£WgIŁYʣK]SYM¥Ɲñ¿ě{ϣǏǌǻ±ƗƀÉKÙaÑc}Cõ~ÏulCv`bsí~Џ¤YQN¿cw॥ȏ½JñÔo~DhŋHépƧKTő©ƻñdîœ|A~Itur¿ō ùpȋ©ߛɄŗTsUĎN^MH[W[åWqa۳GBӄѦۈֹƮ׷R͡ʖŤ̄ʁİÇ¸y¼NðȌ˦̇ʤ°żǅŀɮİÌʬȿ̒ܐƒÛĨʾʦʋìź˔ƒՎĻǐǰǠ؊TČȉŘmôƊƌǱļИӲeӠʩЅʰ͡Ě[ʞɿþ˜Ĩɿξ࣎ß\"],[\"@@ŦɦÓŽɀOˑė\"]],\"encodeOffsets\":[[[14539,55214]],[[14039,55688]],[[9974,56142]],[[8508,56102]]]},\"properties\":{\"name\":\"Germany\",\"childNum\":4}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@˕п̩æٓčKצӰپ~zv|OȌŏÂ¸Ŭ®dAĺĤȤ˻xɳثѿıX¾ÙϬüǠõ\"],\"encodeOffsets\":[[44284,11776]]},\"properties\":{\"name\":\"Djibouti\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÿké΀ƴęIɹ\"],\"encodeOffsets\":[[-62752,15615]]},\"properties\":{\"name\":\"Dominica\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@͆ívŅʷ§ΟŨpƘʬ£\"],[\"@@α§žŲɴĉ\"],[\"@@ɉhsƎɾƵ\"],[\"@@ĥĎˢʰǻͽ\"],[\"@@͹äæǎ̰ŵĻ\"],[\"@@ŠЏ˽íϡĬŅ̐چĂ\"],[\"@@ĩ¢ľÈë\"],[\"@@̓ˋǖƯ˕ĉ̻ǁǩΐ̯dʵѢ̀ʰǢǊɑ ɪ̒Ŵ̠¯Sɻ\"],[\"@@ƭTʨ¼ĹÏ\"],[\"@@࣍à¯ўНƴࡎѐģǼȪƮ¸Ŋû¶ʼɗHȃʓʭ»ƹǀˮɒۄÂѼ΀ծƀ˝भզƫơǛι{ŕ̇ɻkĶçεɣäȑǽȏɺÑPţ\"]],\"encodeOffsets\":[[[11635,56210]],[[12851,56285]],[[10303,56204]],[[10992,56065]],[[15450,56343]],[[10901,56945]],[[12970,56931]],[[12871,57124]],[[11318,58627]],[[9974,56142]]]},\"properties\":{\"name\":\"Denmark\",\"childNum\":10,\"cp\":[10.2768332,56.1773879]}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ċøǜǜk~ĤŊ״ÆٖɳȦǼ̹юw̻Åcõ߂ǳ̄ʗ̇ͫȻǊ˷зH׫ȏƑĴ͏ÁΉՙǉŜŗɠHƐxÊsÐġÚÉĄ»ð\\\\XĶHļĴbÐM¬ÕŌƈǬ\"],\"encodeOffsets\":[[-73366,19657]]},\"properties\":{\"name\":\"Dominican Rep.\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ţŵ׳CɃēăçĳėȵؙչj̥˾ҝȢįȄїװЃĮϛÂȻʜ१ǫĩж޿ĢୡƗϣŖי͡ʟɡҬ؟ɊحŠėʒÆےȥϰڝ␣ᕧ൩୧ഝ˯ܹſȣĮŖʶĿτ௏Ѻ×ƪϏɚiʆ᣽ၮ᜿༸ἡኒ@̸@Ȳpیত֤¸ʈǎʊcĎeĶ]TÞæƊЎVҲŀžĒĨĜǲʤǄòɀÖǦÖƤĢѮǈǧǔG˄ÎƬÊTĄYƒd΢Ŋ|´ƘÊ೶^ĦʺªźÝ´ĝÈ±zćæ»þǒŇȶĭஶ˯Ȃ¹¸yØҞâ਺֮͆{̢ˤֆʀഺƂ͊ƸڲĤࠖ@ҌȻৈπφƓʾ¤ľצȣ֔ærēͥ˃\"],\"encodeOffsets\":[[8405,37396]]},\"properties\":{\"name\":\"Algeria\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@šm¤ȰŦîƠ³ȇȻ\"],[\"@@āà¬ĳ\"],[\"@@ǅn˒ǖŋȃ\"],[\"@@ǩĄVĂɚĆÜƣšħ\"],[\"@@ƹbƆƾ|ǣ\"],[\"@@ʙÂòĢǨƣ\"],[\"@@ЈٷęǁȍáʍpÛŖ̀ʪȽɬ¹ɞƗtȢļøč\"],[\"@@çüÈSě\"],[\"@@˻_KÒÐ£ÈƇƒƳṬĉ]vw`YųӍѥԏӷί঳Ι͉ЫĕÚʫ܏ˁƧđ¥e³X¡I±_i½kġåB¿|Ëô³ØĄ]Ō½»ÕYïQ¡~ı²čÀÙ·]ăė÷D¯S¸úńčFIa¦jº¬Œu´rf¥ˢåǂ̤ȘȞӢĥіéЗĕQpǠɹ̑խπƠˬţܚ̊ȘĊɚƢǗɄμѲՈূΠȾ֮ХДŋȢǛÒȯݶƃȊǠд̋аǑ\"]],\"encodeOffsets\":[[[-82054,-3044]],[[-92594,-1372]],[[-91564,-932]],[[-92502,-790]],[[-93620,-471]],[[-92747,-342]],[[-93462,26]],[[-80803,1283]],[[-77091,-109]]]},\"properties\":{\"name\":\"Ecuador\",\"childNum\":9}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@քนƕǥ˱੉ƯɃϭʄљѪֳ஀ǥ˿Ҏࣅղ֕DʓʦΟĢ҉ਠᆣӸҋȱcšǌ۩҂ˉբՍ⮿AªŸï°ŝǙƗOᢱBᢳ@@᳾@ᴀɵࡦɐВĝրʢːȚšіĜଖȱʖƑࠎƋҴȁܞͬʖƢǘѺĠ̡ųςæŠψŧ̬êȺǙȳŢķǅ˦ǗưĜÅþ͘ȋࣂ¾ҀǊ¢ĩ\"],\"encodeOffsets\":[[35068,31958]]},\"properties\":{\"name\":\"Egypt\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ɐĭΣwêļgŋÌbŨƺǋ\"],[\"@@ąħ´ä\"],[\"@@ĳňԉˎ׃Ę˫µ¿Ē½ ¥@yƷĕʵµÕHǭȆǿò·Ö¹ÁťĥɁ¹œßƣqIZȿʠțƳǳŏOŗ£eCʎkǊoǠkǊŞȖ̈޺sˠúƨEÈhż\\\\ªDĞgȮj ¶ưȢŔЄł\\\\nj¶v¤ĚǀƴΦޛɞএФڟà̄˺ϥࠆͥКՙӲͩż̿ľRɰ̙Ƣ³~üêÙĭģĹcB«·ūÁȋŐ{Pu}yõĔÃüùĠƵĤûŦāƄͷˆΣО\"]],\"encodeOffsets\":[[[41105,16073]],[[41039,16469]],[[41922,14319]]]},\"properties\":{\"name\":\"Eritrea\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ąƏƧĬɮ¤\"],[\"@@˯ɯwĉǰłƆʂM\"],[\"@@ŝĄÈðżýåõ\"],[\"@@ëȓȩŧȻ˨ڂȤǯǏ\"],[\"@@ŕħƅɔĬȔЬŬÑПɥë\"],[\"@@ƓɞÒðǞĵěȗ\"],[\"@@ťŨ̢Ȋ]ȗȧā\"],[\"@@ǁA~ĆƄă\"],[\"@@ȅ]ŀƪǺºçƭĵ\"],[\"@@ˈý͛ͫɭìċƂǛÃŉĀڐͰ[Ư\"],[\"@@ΩĮ[Ė̼}Êǅ\"],[\"@@͒Ɨ¥ƿƈ¤׶ʩ৾ğÆžؚȽ[¡ģîJƠ¾żÌĖÕমàХȱƩޟЕࢥȍˋȩƪčʛěޡँĺϧ΀ʭ؇ωʙҟĀśԙÏˁƣЃԡ቉·ʵǱйéǃʍɝğΑƌ˿ϘƖɶƭçϽϔҕċҤФϮůMȥɶ̄ԊҍԘΘjŤĮâȊŗŪȈƨı֔׺ѮˣŠÛɨѹɍŭؽkħ˚ѕǑġƐǒƚĿXðłçȔȃĘǢʵƮ´ǔްɞOŠɄĬтϊƻ৸ú૖ȕޘĔҺŭƜêҎŃҘä\"]],\"encodeOffsets\":[[[-18317,28478]],[[-15770,28823]],[[-17597,28695]],[[-16726,29062]],[[-14537,28846]],[[-18262,29178]],[[-14045,29606]],[[1633,39601]],[[1480,39853]],[[3221,40746]],[[4397,40799]],[[-1837,44450]]]},\"properties\":{\"name\":\"Spain\",\"childNum\":12,\"cp\":[-2.9366964,40.3438963]}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@צƝӿȁ̝[̿ʉǈȊʱĜgȢيľ\"],[\"@@ȟĠȊUVĉ\"],[\"@@͋ŗōƤ̕äӾŦɖą\\\\Ə\"],[\"@@Ŝğ׻ӱÌӇɶ̍ȣÑţŏ¡ś͕æηßȟÐ՛ˎ͗öƋ®շŽăJǦОΏó̅ĂɑʢƠňȽŐÀɴӶĄʠƲࣂ¤ÆĲ௺ǁࢌ\"]],\"encodeOffsets\":[[[23161,60029]],[[23904,59956]],[[23474,60239]],[[28685,60912]]]},\"properties\":{\"name\":\"Estonia\",\"childNum\":4}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÖGʶ¶ƸĖz¦@¾Àđˬ¶ׄėԊˍĴŇΤН͸˅ĂƃüťƶģúğÄûöēӯٽLץٔĎ̪åɟͱƺͭ˸˓ʪст̵ᠴ࡙ࡀ@ᢋᣭߝͽăϩǯɥˏ۩ƻĝę­ūBɋ_ğcŵCǙĨɋǺޡΟ©ąŏƩƍķݗŦſJȏ\\\\ś~޳ԘȽƂݑ´ɑ˸MŤnžl¨±ǀΙj½ @Hʅ̬ɯڬիӆƉʄݻ͠ʂҌ֢NĴĐJޔȞؖϾȒȆǘőƈĲƲߞҸڴϤŒͰాfDŘ¤ŐPǴȜƴɀʟYrJÞƤ¼ŔĤɂÄŦº¸ÕȀñǮȅ\"],\"encodeOffsets\":[[39354,14775]]},\"properties\":{\"name\":\"Ethiopia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ȬÉ¯řʃĸĈì\"],[\"@@ų¥ÙŠȎù\"],[\"@@ǖƋƛłŒ\"],[\"@@ɫªͦZĹÃ\"],[\"@@ҩı̞Áʩ̏ǶʣֆŅզͥޟٵࢌও͗ďĝ́ȀēȇƩЀǟ˓ЈȱSƭљʉৄѵ̒˕̅ͻహ޹ལࡓਖ਼ĽǲǉǙΟ¦äŏɷ×ďÈ৯ʿࠛωƛƬǦʋǀƋŷʋyĺ̐९ǺƜ࠶̋ͰĥـюʦėƒٲĘǴ˴ࣈؘٖͤ߬¸ºԴ֡ǈǂЇ­ϣϔʎҸ̇ˌþʚɻƺдڇΎܙźିѠόJ@ƢѸºۊҭގÑѾƂࣴǳڴͬ˘מϠȊԐQԶƄ୨ͥǈǕХʝĶŽ\"]],\"encodeOffsets\":[[[22708,61820]],[[21966,61983]],[[21727,64760]],[[25445,66551]],[[29662,70679]]]},\"properties\":{\"name\":\"Finland\",\"childNum\":5}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ѻŭ͂ǀź\"],[\"@@ăÒ¬òƃ\"],[\"@@ʾɽÜέױƷՑƾµǶȬ˘˂Ŷϲb\"],[\"@@đAĒƮ@ƫ\"],[\"@@s@²@ê@ŞĈĩȥ\"],[\"@@ÏĊĞyÑ\"],[\"@@λϿHġ̦ȔCȍё½ǻĀǏƿʧÛǫǂðƔȆSغ͎ϔĆ@_\"]],\"encodeOffsets\":[[[182772,-19429]],[[183654,-18536]],[[182559,-17788]],[[184320,-17370]],[[-184294,-17331]],[[-184247,-16898]],[[184320,-16556]]]},\"properties\":{\"name\":\"Fiji\",\"childNum\":7}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ŤQÑŷǓĜł®\"],[\"@@ݲĒĴÉչҕ˙cęŹ˩¡ɳŌ؈ʈ˿º˲Ö˕ʀʂĕ\"],[\"@@ƍĬǤwó\"],[\"@@Τ¯éƅȦùZƂʄƘőŷÅƚ«ݡʥ~ƍҗæņŽɯm¯ĥɅƤàǬјȬǌȸȆ\"]],\"encodeOffsets\":[[[-62483,-53028]],[[-61733,-52697]],[[-61554,-52629]],[[-60262,-52500]]]},\"properties\":{\"name\":\"Falkland Is.\",\"childNum\":4}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ιÆŉǺàż̎EƬșǛ\"],[\"@@ġænȲŌċȋ\"],[\"@@֥݇ɋչˏˉܩŦ̥ȟʫòç¢jqZXRNB¦ÖìŪɄ¼ĖtƨŨ`ŀƤ®ĄsƲˇΦŇڂҼ޶ࡪ˿ԞНƝĖüƌũ²̫ƦʄƦӗ\"],[\"@@ȥw¬ŔǝȸʊýĎɕ\"],[\"@@ãJ¼Ĥhĭ\"],[\"@@ƛ°Xʘǐëɛ\"],[\"@@ǍC¨ɺʤȿŽu\"],[\"@@Ð֧̩س͇ǠäĦɟȘâƐœɚȾɀмĘ¦ʮİǱ\"],[\"@@ñƥȞǮū\"],[\"@@Þ_zY~mªQÀR~¾\\\\Ǝ͢ʕ׸QֺƭѥۇAӃɭƅǧ´ƗÉ¹Č¯@akiwŋēŏėkmƗ±cƣʹǩWĳkƗŁÅBÁQäJĨŞò¾ĜŲNưk\\\\ȿŀĩ´¦·dȗƹ̘̟ÉšϋƟ̜ȫýЯΚǓˌvŧͭޡӋϡŁ׫ž̅Ǽ̇ÑکǄյ̵ǧɷƆПভßĕÖËŻHĎšÇPÕؙȾÅŽ৽Ġ׵ʪƇ£¦ǀ͑ƘʺƀȪ࠸ƚŊÛØýćƒܮ҂ҁȯϾͽȸƐvĩӐ՟ǢɭʜȒƫŀƚĤʈµțĂѹBÜƆ˽cĤ౱ǔ̯Ǽ̌ŌȹĴˮ\\\\БºôȚƚદȆҐʯȸĤϊÅĈĪѼǃŸcͮɭКԈGĶʕࠌûӤŸʋº¶ǎࢸʞ̆ɈäՐܒǲȠ̅̈|ƔȻ˔¯ĀƝТ¹sɳͬUɰǊ¤̩՞ɷʂx\"]],\"encodeOffsets\":[[[57137,-21851]],[[46265,-13288]],[[-52892,4159]],[[-62286,14843]],[[-62700,16272]],[[-63067,16392]],[[-62799,16620]],[[9708,43833]],[[-1206,47006]],[[5929,50728]]]},\"properties\":{\"name\":\"France\",\"childNum\":10,\"cp\":[2.8719426,46.8222422]}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ÐýəzǊÄ\"],[\"@@qœƹvĬƗϓˬҔµ\"],[\"@@ś«SŴŰć\"]],\"encodeOffsets\":[[[-7359,63631]],[[-6790,63722]],[[-6559,63753]]]},\"properties\":{\"name\":\"Faeroe Is.\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ōY£ŦƈLjŗ\"],[\"@@ÛåĴƤý\"]],\"encodeOffsets\":[[[162115,6978]],[[141459,9729]]]},\"properties\":{\"name\":\"Micronesia\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ķ̻ґՔƜˤ¡ȾϿęɷ̽ɩ÷ҵԪ̵÷ેȅ˝ŗǥŗętŹ˞ɥɍЉèǕ͌ǟĘƃđ^ͳ͏éϫÐÉгȈūǍȀš¯̅ǋaƳƌɧƝĕȍڃݺԿҞ˸éοƸ˙϶ƸPǽÐȓѠʂ˕ƶÞǥ¨ǆţµśì̥רȴć̌˴¸׎ĨƷˠīǤŴϣĐȅɌƞĦĺówϤ^zzJ²Iz£`wĒமEѼG՜hŎǰFඊÖā\"],\"encodeOffsets\":[[13613,2214]]},\"properties\":{\"name\":\"Gabon\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ƻďʽàɀĜȺë\"],[\"@@Ů_˗ƟǍɄɆĲă\"],[\"@@γ{̛̈ˉɯʁVїɪ̪ƲſĔ̢Î˨˘زŰτăˌ˝ƉƩʞnĦƍǛ¤Äɵ΋ȅǗ\"],[\"@@ȏ\\\\ȔǴɕ\"],[\"@@ÖȡȿófƔǣÙ|Ģˬĺ\"],[\"@@ďà̆Ȏȵʭ\"],[\"@@҇§ƤǔŭĸƸ˼Žaū\"],[\"@@ƉɠŦSdɋ\"],[\"@@TǇϴ½ɵǧïƀʍBρȪϤȘƊƕ\"],[\"@@pű˩Ìʺæ\"],[\"@@̗ɩňÓҵɫčÄȐĠȓɒ̠N§ĦҐǜś\"],[\"@@đǍٷ̣ěƮɷȭؚŌૢKʘȓڽދ׽ǕΦǰŧֿȍΩÊجťϘÚϞĽЮ˧Τܯ८ӯķă˒΍͕ņ͝Y̮ӄ̙îƧʻɇȠąɼƄиOԐǥøʅŽ̝̋ůƗνÕŜƃϻęࠬđaƱοɋ։ų࣭UՋŎèÛƵÕћmIĹߵĨͽëɳͣѝź҃đ͟ɃчX஺ड़ࢪ`נҊܡ̍ԇǜ˿mŦúʛæџĩɡĪ]ǬߺˠȦɜķ̾ӧğΒ˴ۺǒˤãƖˆį˅ǠȀԺˍMͻ˶ĘʲάưћI΁ƕܡÆÿſķÒŝȌиѠǏ̺ʌÆɓĦĜΫɭŦʾ˛ǝũԙƥ¯ȐϾėɆΠנϷȏЗƦ͸Ŭŋ¦ʦˤțŪǴƘƍĺŘǴϜ@ɍǂÚƚˤpQʰӬ­তŘǦ]³ĵ\"],[\"@@ɜĻҍÄlƆɆč\"],[\"@@ɌýȹӇRɴ̻ňʐ¦ǓƌǪĬ²Ó\"]],\"encodeOffsets\":[[[-1091,51907]],[[-4297,54602]],[[-6367,55387]],[[-5227,56780]],[[-6275,57273]],[[-6113,57155]],[[-5916,57697]],[[-7423,58487]],[[-6292,58886]],[[-7378,59068]],[[-6347,59765]],[[-3184,59920]],[[-3130,60447]],[[-1339,61991]]]},\"properties\":{\"name\":\"United Kingdom\",\"childNum\":14,\"cp\":[-2.5830348,54.4598409]}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@˂Ə®³SïûÑēẂĜڱɠÁuǹŏsYƑe؝Ýէuȑ«Wz~nmhûųĪítÒ^ÓNÙMaOoWčĳғ²ďÁRß~ĿvÇhǈǂ¾ɞɱׄշͺ̽êПɰÆ¼ÌӂgʚīŢɲĒµĶ³র¥ȚßRö»ЀŧÄƈ½`eEsUlmÆmŎI zĊlȐòƨɠōâŊjTÔuňöeƶũȂLŤloýȫH}ӘǷǾĉȷǃĸǍ\"],\"encodeOffsets\":[[47417,42504]]},\"properties\":{\"name\":\"Georgia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@àāă̇ϼ͍ĭիàğşʘÃҡĭû˂ͻƽڷŔǉĝхǰͯϚ̧ȥɻׅ«ቕ࠵थ˜ʢÄ¼ɼƘǣĤȓࢎɤפƜВĸø°rZePxÖpÿӼ£ƀÌ³jʲTŊU¬¹ľ]ôU־Ļƈî΀ຌXΒéˠȪȘ§\"],\"encodeOffsets\":[[-70,11383]]},\"properties\":{\"name\":\"Ghana\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ħǥǔƷ̺ǆȊʳκ˂ѪƵͬȎǬ̐¿ȎЕGȽ΢ʳɣ̛ˢeÐщɔƏbƅƏǃdБȮãmȏânĽÁYǋȚťpɣŅüŉVʃmO¡WŻÜþWùĭǯVě÷ƛuǕ³ơŊȗΧȑ̃ǘĀʎůդɛǈʁěéøï§GÛV]đĳ½ŇLs\\\\Æƪʌī̸ģng\\\\Ex¾ŜJzÙĄʏͶőŜq¬Ëf՗GșįʉnŉǋǕ˥ǝġĳǋǷiť̸ɉĬBͤŉȍɈ͍ĜƵʪbǼëßĉȰģóƑÛPĘª°äƒˬºÜvàFŸŀÖÀ~ŤOƚZȄÒDȊM¦ßŏľ¾Ìń`òǺ¹ĬHæլlťŊ҂ǉࡔÄ\"],\"encodeOffsets\":[[-11662,12703]]},\"properties\":{\"name\":\"Guinea\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@½ɸžŒɌǣࠤǖשiǻĕǭȴࢬAèŠˎîמʷήŴŕΛƟݻːŕƇѷÑiƗۃEĩ÷\"],\"encodeOffsets\":[[-17165,13378]]},\"properties\":{\"name\":\"Gambia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ËovŒġ\"],[\"@@Ĺ°Ɯê¡ř\"],[\"@@ķX¸ĸÀŏ\"],[\"@@©ĻĩİƔL\"],[\"@@Ń_½ËǰƙN¥CȉȃÑʽI¿}ĿÕŷßEu·ÛƓ˫­á«§ÒŌƗģLŀƩ¾ƮĽ^΀ǀƁöƵÓõĠĴ͜łܧƵlŶǽiǃŒêƼǉɱŴ°TŖaĖhƦÚĈ^ʰgɞ¬͈Ǆ܆GʆA˰AGåºīñǹ\"]],\"encodeOffsets\":[[[-16277,11349]],[[-16501,11325]],[[-16283,11741]],[[-16370,12168]],[[-14090,12557]]]},\"properties\":{\"name\":\"Guinea-Bissau\",\"childNum\":5}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Fѻ஭đ_xy¤±JyIy]Pnõ¼ĽrΞڎwŠlȤtMT¯{Ġڼ@ʲ@Ȝ@H՛\"],[\"@@Ƥ@ŋȯ͹ȓUƼɬʶ\"]],\"encodeOffsets\":[[[11605,1566]],[[8946,3849]]]},\"properties\":{\"name\":\"Eq. Guinea\",\"childNum\":2}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@˄ºµċȶŕୂW¾ȍѺǊŻʝଫíûžȵÒܷĆmɸĒiÄŢĬĵ\"],[\"@@ėŐŸȈ̗\"],[\"@@ťƎĔǍ\"],[\"@@ŅzBǶѠɚŧ̳ȳŕ\"],[\"@@ĥĬØå\"],[\"@@ǅČúú«\"],[\"@@ɠƠŘ}ͷš\"],[\"@@īA˒Ĩǥĥ\"],[\"@@ċ]ŤŎŅ\"],[\"@@ơňĪã\"],[\"@@õāŢƎłjȕ\"],[\"@@ĉN¸àí\"],[\"@@÷ÐŴe»©\"],[\"@@´Ęɞˑŧ\"],[\"@@ċ¯ƇŎɔÝ\"],[\"@@É£úžoę\"],[\"@@ȘďǭÃɛâȲò\"],[\"@@ĘąƥǗǆÔØǒĽ\"],[\"@@{ÇəɦɎ³ũ\"],[\"@@ŰʿȥÓńĉ­Ǯʜ¦û\"],[\"@@ǝtČĠũȄ˄Ç˓\"],[\"@@ŏuŞɘMȡ\"],[\"@@ői¯ǈǂƝ\"],[\"@@ĠũԒƏŰέˀą©ť˗ŚƟɮ͝¬̞͍ͯÎ͚ƊƂÕ\"],[\"@@ƺɿęviď̡ĜƒİǙđȓĖ˒Ƥȶ\"],[\"@@ǋzȧʲɾNãėȚȡ\"],[\"@@åƥěðƿGŮ͊a\"],[\"@@ɑĞŪŴƫ\"],[\"@@޷ɤʽŗˇøͧȉˍpĔˡ̄ùŌƯίǰƻ{ȪǷiűʁɒȧǜ˷ؗЎtǈʗăϫآܣơ×Nƀȫ¤ŕƲŏлƛֺǥβʹʄÝ¶œIϳѥ̜ϷſϠρ˟ęνǬμँϋ̆ʏˋ̇ҬĿÁɅʹ̀ĆʴүъɼʰɊkƔŸ࡬̡˲Ɣٗʲďç̕²бùšƒwħǅV˿Ь˾lNŒͽL΋ʔġȀûĄćÌlBWÒÚOƨŰAÏĞ@zxXvr¢bǞªȊ̎ŲżÙŸRÚԤfªxŸ°ǶƲǆxʺĢlĸ¸ź̺SìÂŐH¼TĒYČB͂ÖlRp¶ˤEĐ~EɌǑȂRŞ£ĲÓ֠ÌŦÌh¦Uò·ƶllĀdĶwɖīǗʙƍBʅʗȑ\"]],\"encodeOffsets\":[[[24425,36389]],[[27829,36317]],[[23608,37059]],[[28512,36792]],[[26095,37267]],[[27096,37464]],[[27597,37609]],[[26480,37674]],[[27669,37847]],[[25886,37959]],[[26159,37855]],[[25113,38017]],[[26013,38318]],[[26655,38431]],[[25863,38503]],[[24941,38479]],[[27469,38719]],[[21390,38713]],[[25592,38666]],[[21108,39305]],[[26721,39136]],[[21184,39536]],[[25267,39741]],[[23978,39894]],[[27045,40274]],[[20560,40380]],[[26049,40943]],[[25369,41590]],[[26664,41705]]]},\"properties\":{\"name\":\"Greece\",\"childNum\":29}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@@ƢĞĝǯ\"],\"encodeOffsets\":[[-63196,12301]]},\"properties\":{\"name\":\"Grenada\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ĩķ΁ĈӪƼ½Ƌ\"],[\"@@ǧàǈĦ`ǅ\"],[\"@@ǁwŗǨȴǊΒÛ˫ʝ\"],[\"@@ּřŪǝත̉ԕŮѲ¾ƓÚँƢŎȤϸOяǈϬƸࣚģӆɕ\"],[\"@@ύ`ZĈδħ\"],[\"@@~ɥۇǗ͗ČறÇΘΪ࠸ڬƘ͘Ĺ\"],[\"@@Οò̼Ɯ¤ɍ\"],[\"@@ҥȑխž৔Ô\"],[\"@@Ԟ̷੹ƻˊܘö\"],[\"@@х͚Ǡɰʦ։\"],[\"@@ۓĘࢴȟË\"],[\"@@ࢣėЏŎॾǠјušǟ\"],[\"@@བྷɞѩʸܼచǯ¬ͭ\"],[\"@@ↂʭ㇓Ƨď㞆ƨպʁ᝚ȱಇʹ㏱ƍʵę̀ī෢Ġᗆ¡ܘʧৄʾ๠´ĜϽབྷەᰦܦᆦȯ૮͈཈ຶōࡈȍෑ̳૛ā§ȕቍǃۖūҩƧ೧áଝî؃ȷ঄۩ᅡѧԅߙܰǠ଺ǉpŹ׍ľѧÑϘȿ޴ūܜÉЙဏŤॅțӏĚΣ÷ؚŋ͞ʩ୒«ԂϱcӝߩŒএʓӫĆҎŽ׬Ģľρώ˶ζ@זέçəݙAͫũ઩ĜX˒͇ɛƾʽ๤ţš̗໳ȉݕňޥ̮ѧƋۿɀؖ˹੩ɏ৩ƶؔƿࡩġǶÏኔˠަ\\\\ᄄЭɍڣ๳͈ҽҐၷ˓༂ƾƎˍϽȡϜøᗨ׉ѩ̣ÀœĲƸҠȖߝܣÁ«ͮɇΡ՗\\\\եǘӹӖ૕̊ঢ়°gÿਫ਼«Čʟࠍțද΀ćßǑࡃɇᏚfęࠟțƪŏ̚Ǯ఼Ŷ༦ǵ୐[Cûعŏ_ĝۇ±łůҳEBūݥƭĆāԗɳڇǵᙡͅԳ\\\\ϗĳͷ¸Ġő̱³ଉ͂Ǝϑ࠯̩࢕ࠅࠫͻ֭ǆȦʧؽʹŭƪśǻͭæ̅Ƿқo֨֞݅æͼĽ̛͙͉ĘˈʡခŽԄǹ̟ǕˇýۥªĲțʼ ЊλԋɏڣÜҦƫΎVÊͿȋǇɯg˷ϝϥPˣŜҒȣɱȡࢃaڐŵƙΓǲʝЍŝȨċ̵܍˝ȱ݅Ò׬ǡúˣǓŏՓĈʠƕȽǭ`¨Ā̅Eǂ̐͛ɍ١ƼXƜͤîȀǨԽȁ֓ƞăƊɬψࡇ͵ળ¡ΊȔԭNƶгṷ́ˀûʦҪǄڛåÐȠٟȬjȾъ˔ԅȇ࣡ېß̪ઌǪȏK¦Ė७ǭĻĐʮɒތȖМȷĥɎͩÀϋκȪ͹нƙŊ֕ґ˱޾ɹƤޘ͔ѸÀՋ«۟ɗǭňοHþ͐ʉÒᆖ۪ົ֯х¿Ķє͊Ƭն°ࢳυǰðʄॎ˦ႬȅҵƔǞĨڝÍӣĊଢ଼ʋӪք଺ų˖¸ȸʮࠧǕহǛ˂κĈࠚƣ֬ŰŚŒχÝƒ͜ڌٻڈڰ࿳٥Ȳ࠭Ĵѡɺ̬ĶନÍྰ͕Ǭ¬օƞÈɞѣƂيQ̛İോ¾ĬɸऺǶඛýʜȔэҲɳϘϿҕǉ´Ǘ؍ùݽƼɺҶЎȶحƩ¯ĸ˺®ʳČ֪Ĳǀʨ˭Ťǹç͉Ú͊ˌۅȚɠǜ̶͗ࡋGѲĀUǮϲĈኻۜˈźɡƶᖟЀᄓǎҩœϵČࢿƽыĞӷċѷØˊȣఉø૭˨଴ɄಷîiɈޙƗѹǨɺŬཔj۾Ƹุĉʩʹ࠹Ɓ޷àؕœহȜΞŢঁyಝ͌̄ʎےŢᖂȞԮƲᒪŖࢄ۞ԨĊᖏmǧʶᒈԬژ¶׌Ɨŀˢ௾íӾ؆ಾ|ᖖѫᕭզ◴݆̂ƿĬѕ֚҄ᅈΩ଒p୧ϸݲö⪴׉ЮӴૉ͈ᶰÇюÎ♣ĠǤي፾ȸ෬ƍߌȚᇚ˫ӽ̺ࡶń㹪Ê\"]],\"encodeOffsets\":[[[-47377,62241]],[[-37920,67105]],[[-52237,71222]],[[-53996,71624]],[[-52915,72556]],[[-26042,72624]],[[-54820,72746]],[[-56337,74539]],[[-18432,77218]],[[-19028,77868]],[[-73387,79182]],[[-18035,81742]],[[-45941,84054]],[[-30671,85571]]]},\"properties\":{\"name\":\"Greenland\",\"childNum\":14}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@˶DʔŁRƾ̮ȅÿáˍɉɷǩƳãáǧºǑQ¿īÝÛĩǯsvůс˳ƕїǊ٩¼ܛҲÜΘ^tr ĥȺĖƦŀǪȄ̮ʬBϢ@ɶ@ƴ@ÚDYøTĊø@­¤ĕz·@°sÈ§ÞɟƆη͚ǶAǠCHӂໞAÑྩ\"],\"encodeOffsets\":[[-91374,16270]]},\"properties\":{\"name\":\"Guatemala\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ýƚȐƾÆǗʻ\"],\"encodeOffsets\":[[148216,13578]]},\"properties\":{\"name\":\"Guam\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĽǳĠŝķƧ͋{ǥƛÒŷǩӇ΂ש̀aĘѱвۇȆāУsËh¯ÎuRǗ§ā¯óœ¡£mǛGßğg©ŅʱÊµ_¡ġKŻơGµM΅Ʀʯ˖ŋ CĄÓ_vB̼œöĕ˞Šݮʬ̄Mx¿ÀıǢłϗƲƄҤŵƀċhÿ·ĽWǉ÷gՓפ]ôĢàäÆoƞB¾}ÈmÚ¶ĚάÖ̮Ƞ~øGg`ĵbµm»X¥²í˘ǤɸИȬĞt~Į´d¶ƻȲۈЋׄ֩~̟ǉխɒϮδÅϊϡˀŹՉ\"],\"encodeOffsets\":[[-58567,5682]]},\"properties\":{\"name\":\"Guyana\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ȯǵǪӰŗŉq\"],\"encodeOffsets\":[[75477,-54412]]},\"properties\":{\"name\":\"Heard I. and McDonald Is.\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ݷȱĝxǷŲĽµ×ƛűɩѳϟgMOǓĸ³îʓɽ]țhĽWsaW¡PÁȓhÿeyÁIå[ùǹ¥_ɹYŵ̾˙ĺÈʖazÏ¤÷Jĉ_ƇĞʡŗF]¨MºO^ԝ͢ȯǈǈRÀ¹ǒâǨƴäɸǪˎɊĀâĆyɎƮ౤ąΞƞ¥ÐфĽєøΐƿʤjиΕǩĪřw`ûƘMƖƣɚDůŬɶŇâƉÄÌ¥ɍ`Ĺĉč\"],\"encodeOffsets\":[[-85642,15234]]},\"properties\":{\"name\":\"Honduras\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ŘËͳøɜk\"],[\"@@Ҍá˱mǙĐ\"],[\"@@٦˱æŃ׋̪ٹǾԺı\"],[\"@@ʛ`ĎϊÓė\"],[\"@@Æ×ƕĤĐ\"],[\"@@ƧȬhɞƀщ\"],[\"@@̟ĒĶŪȪȻ\"],[\"@@ÇąȌˏ¹īͪƿ˱Ù±ɣƝ\\\\ƣǎ܋@ݧǘ͙»ȥǧɝƲȫU©΍̮ȵǔͫࠊ֭̈́σÅËֵϢёŶ΃oڥոÁì̊`Ы˦ŁВʯǼȥϝп˿ը̤­Ю®¶pŢŶpK¶áŦÿƊlƀ£ŌSĈvYOÐäÝÖ̀ňpĺQÄÍ¼IbкǮǸŸĚUöq®]ƮËļÝτ˽иǥҨƨbĎĂȬr\"]],\"encodeOffsets\":[[[18031,43796]],[[17051,44029]],[[18092,43927]],[[17189,44310]],[[15741,45030]],[[14836,45732]],[[15166,46057]],[[19360,47035]]]},\"properties\":{\"name\":\"Croatia\",\"childNum\":8}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@cÏɋêǗƎЈƧ\"],[\"@@ƇǫÖŋN«aÏĻĳĵG[W¼ïÊăĢÙtÏșíâýÊĩۇÝёČ̥½řůӽ΄úƦƆூȑΎŞ|ĎϵͬĜ̴؟ʀȂƊӦdΖſ͖¡²ll}ǛǛČ÷\"]],\"encodeOffsets\":[[[-74551,19229]],[[-73366,19657]]]},\"properties\":{\"name\":\"Haiti\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĺDˢɯƾqĜƍ݃χ݅ਇ̣ūħėȑqd£`ȑh÷_ȗpǉėًſčāaƧҧзǦσ˾ĽÞƫÌ­^ț̜ǅL̢ŦUͦȞŖɉŜժäʤԬȣ߲dÊǴ۬Ȉ˚Û͐ŰƀȚ߲tˆǵ̪Ê\"],\"encodeOffsets\":[[22663,49568]]},\"properties\":{\"name\":\"Hungary\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ĹVhŘѴʌ ƧЁɑ\"],[\"@@ƭʚĠīť\"],[\"@@ùŐľƋ\"],[\"@@ٮө¢ãœƙɑóʙĂҙΨџÊŃǀ˲ŶլÈÐÕ\"],[\"@@՟՗֯ǕţÞĤǈŃĤĶ̒˞ɰȸñƌȨВȺ^ġǲV£ŭŝoĜʣ\"],[\"@@Ň°ä¤č\"],[\"@@õĺŜŤwƧÍ\"],[\"@@áJ¾ʴĢ÷ýȅ\"],[\"@@ʗǊƈĴeï\"],[\"@@ŃǧÔÅ̅u͏ŀȂ_ʶ˺Ȝˊōßɷ\"],[\"@@ŝǝǿêʾȶ Ł\"],[\"@@̹ʙ˕ȸǪí͔úŲé\"],[\"@@˧âȞŖĊǷ\"],[\"@@ÅƺƤĝȁ\"],[\"@@Ќæŭفõ¦ȜŪ\"],[\"@@ʞÑăíǟÆFú\"],[\"@@्ʋȣìïďʗeСŐ՟±ďƈÈɺآƮۮ˱Ѭĺ̚ơѸ˘ÎèƉƄäøȇȉʃ\"],[\"@@ñȶɒƀ˃ǁ\"],[\"@@̴ĐőǴİǠ̷͑Éòć̓mċƴǃƓेɑɭþ Њˢƒ͸·ȪʇƎaɠŖΛɀ¹Ǌ̦xŀǏ\"],[\"@@ɎɃҹω÷ɶωǎũǲЄiǺĸʚõ\"],[\"@@ĿïĕȦǢatœ\"],[\"@@ˡʃγÄȯĉƪ˒ȨͬŔǈă\"],[\"@@£ĢĖc±ý\"],[\"@@ȩŋիfδېǶńЌ¤Ȁʱϟӟ\"],[\"@@ǱDrˀъӔþëûÏg̟ʣ̻\"],[\"@@șîƠZºć\"],[\"@@ş¤ĈÆĩ\"],[\"@@őFOĈŢč\"],[\"@@׽ĳͳŶŢƢǚhނNĊñȕŧ\"],[\"@@Ɓfjüʲßƙ\"],[\"@@ŋtŜúOĭ\"],[\"@@ǵ΁ț`b̦ôXãɦΠɁ\"],[\"@@ʘǩ֐Ï̈щ฼Ɓ΄ѰŚWǬɁ̠ҠȵϞĠʛŪé@ȻȀėРÇӖú˶ƅmԥǒ̫ૣОӗĹঙĔݹƀ૙ώғʏŉ҅ÖՏɄۡĔÄˆ˓ŀ߉þĬƞĨįƞˀŎZè˸ǦǞـƷȆǎ˞ē\"],[\"@@ƓSׄ¨ѯ\"],[\"@@ŏPĔÞ|í\"],[\"@@Ł½§ʲƪȳ\"],[\"@@ӵɯʉɬŮ®ƪřŀŖIȖʈƨɻ\"],[\"@@åïʘ֜eɏǋ˛\"],[\"@@ɍƀɖGĥ\"],[\"@@ăĆìA\"],[\"@@ȟƴĘƺņñBɻ\"],[\"@@åıɿÊĨɀwʬ˪Ű¸˅ūǡŋ\"],[\"@@`ɫşØé͝ǸǍǿÕſɟƕP·ƦưɺòӼȆȚĘƏ\"],[\"@@¨­ʧǂɀœ\"],[\"@@ƕĩęǔȲ~ī\"],[\"@@Ɲ«ºļĤÏ\"],[\"@@ʡą«ÒͺƸ«ƃ\"],[\"@@Ɵ½ĈĈØ\"],[\"@@ȳŝJҦǦǦԭ\"],[\"@@̮ʭFȯҙǅЅȀƃƸˆٮf\"],[\"@@ťÔƘAqÑ\"],[\"@@ՀĽǆšʒσ¯ʋ߯Ҁ˧CĿԕȀ̅ǵ͑ʔȗ˵qɲ˒̚ږƸĕʺŮɪã\"],[\"@@ũɕ˼KǜɌǹ{Ƴ\"],[\"@@ŷȕǓŠȱĻ§ʐĒ̖ƞ͆ƕÚŏéƗ\"],[\"@@ǁáwʜǺǹ\"],[\"@@ȣðȚɬˉ\"],[\"@@ǉ̀ºĐŐЏ\"],[\"@@ʶܑįûĆ՘®\"],[\"@@ÆɽƛÛѕƲԬƨ\"],[\"@@ȀMłƑݫŅóŬôǘҪ\"],[\"@@சǧ֑āهʪ\"],[\"@@īĀŰ©\"],[\"@@ːڛϠğǧˑ²Ʃ֙ȺǳզշŜ˜Ͼł¢ĬǡhǔǄzŖƏ\"],[\"@@ĩpƮÌǝ\"],[\"@@ӹÉƕŜɄɎь˟\"],[\"@@tǽǔŸĦčġȥVďƭmʾɕʃážĆɀʰV\"],[\"@@ȹąZʖɤ­š\"],[\"@@ēDŔƚ¯ç\"],[\"@@˯ƘȍΌØȒɎbˬ֣ēų\"],[\"@@ǿ¼ğʞ̠ͯ\"],[\"@@є×М̱ǯĵȽƙ̘č¹əȘ\"],[\"@@ťh¬ŢúƉ\"],[\"@@ƉŴÎVģ\"],[\"@@băȏoǮĴ\"],[\"@@@ǋDᲗħͥĨƓBᇳࠉޢĪɮƳƫҥóŗǨ̝ɋǖմ˹˰ΰ¼˥°ȵǚɜàΧўţͨàĘƥŞŎɃuȴٿѨ։ń՛ʎڅäѡ̺xľưbԵOĳŲơkʝ˴ƎΦş¡ɷœįХŷƍ˫JƇ̔ĬŸıɎٽьɔĞдğϺ̐ђƽ®ƤŶºħĈŊǈ߫Ɲս~ʅɄýβ՗ƖʡǐɒÈʺҠŸӸ̈ϴ½ԬʷфeŚđŻǀ̣Ź̝öӳɞѯpɀŨØͫŢrʧ̪ƅȢp̺̌Ҁ؈ִƘČâ¡ƺֶ̞သܫ۪ćŀƉȎE\"],[\"@@ĮōȑǉėǐǼň\"],[\"@@ĬűÝšɴǗĳ×řİƉLƎƗŤrƒŌÑĤô\"],[\"@@ŉqNȮƐKǯ\"],[\"@@ɳSôŌǀķ\"],[\"@@϶ũÀş˫Ï͏ɲɶɏůċ½ŮśÏˁƂłŘϚÌ\"],[\"@@űAİʲĕȎȆɍíɯ\"],[\"@@ȐęҷĀĄǨȤǍ\"],[\"@@ũP¢ŴĈƃ\"],[\"@@ҋĢ`Țиȕtĥ\"],[\"@@ĝpÄ¾í\"],[\"@@ϷƶpĘɲùƖǓ\"],[\"@@Ĭ]×ƧőèþĞ\"],[\"@@ÞƕñǽŗȀƿĢƔȊ\"],[\"@@ŭðo˒ƾƍ_ȳ\"],[\"@@ϚЭģ·ŗãȦǕĨ˛ДɶĪł×\"],[\"@@PŇЍɸϾů\"],[\"@@ϱѳ֣ƑЧlɥƖဝ©ιð͗ɓƭϵ¦̟ƬˁɶƝŴˣК~ΪіͦĕʼƨԠD¹Ć˼ôǪß°Ň³ȏЋĔշջ͡řǩǝʝb޾ࡻĜʗūΛπϵƄhr˝ŷªԗǙÝʕϗÖďƮŌШ؍Ӓƌ̔CΔơĘȍkͣʁƨُaއšѹŶϏГ\\\\ȟĭƇêǓʠȠڔ|ШſѬЇqŃŞë֪ʸȨȖҬYѬǘфǠȎŐƱĹٰŦň³ǖĖǦ̚Ѷ˨įɠͰǶÚ˔ëǀƧ܄¥ͶơȔĆܪûԒ͌ΎψƐ\\\\ļƷ́э\"],[\"@@Vʏǿ³ùʐʤ´\"],[\"@@Ű_ðǮǌĬ¾ȲϺƠ^ϻ͹ȕţ̎Ʒʐ˫ޕɌăƣúҟϔէ͇ǀ̕϶bѼƝ˖ÐȦƯʖǠנ;̘ṷ̋ľŋ@̵̝ˉäƓ\"],[\"@@ȏŢƸaĿ\"],[\"@@ƃcÝɚ͒ʦòĻÅȿƛƟ\"],[\"@@սʞùƜƮÂѬ̽Ž\"],[\"@@čiČĨBý\"],[\"@@ËǘŨïÛħ\"],[\"@@CËéĮî¡\"],[\"@@ġŶŐqmŃ\"],[\"@@ūtɬǂʟ\"],[\"@@ōƽ¥óƒȢb\"],[\"@@ǹ^ŦĘȭƢȸȠŨșÝʝ\"],[\"@@ğāʾ͗؃ÇʒǑLțɒŉœň·½άяɷʓ৐࢛ϙƗ˵¼ʅȌ¬ǭȁƅȇг·ҹĊϓկϝƣƮ\\\\ʃБϧŰ@xśřǻɂƅǯǱ\\\\̋ƏúǇʧϿਖ਼ӗƗژãėď@ǮěŁŻèͅƩāɔɡ§ʹ˂¿ɇǳœƃá˅äΩșжŅƘٝƳčÚÎòǑĥŇŊˉÙƇ߸ŗŜpӴǏɜѹǢĨƚɁȺŖΠʿ˚yҴȆƢĴķ[ÆɌʬΪɂĘùōĬɿܐمԄǂתɨŎĜʞʒĶϼPÂŏԮǕɾǖԠdˌѺɪͤɮĉĤɖňŌǪRȌ঄ƴžռnӰЊƕ\"],[\"@@ĥĠǀûðǢƐɏĕɍ\"],[\"@@ࢰoלړ¸ˑ஦އږ࠳̪ȭ¹ʜǾ^βӃҘɁ̶ԋբɛqƍϧǗڐʢ˪ȍĪȭ̝ȩoƛĖēÏġʂʻ՞ŷžٿˢɯǍуːȌΨSծ؍Ǜяòǿĉˣ²܅śڷͱɦɣǑωȎ̻éW٧ۚઙެ·Ҭңδ׃ޚ˄ҟज՛ܺѕʴӁౚݧдġЦǗňΟԌѱȮܭ܄̹ԺlʀͶш˃̠Å\"]],\"encodeOffsets\":[[[125900,-11171]],[[124809,-10844]],[[126379,-10549]],[[122893,-9599]],[[128070,-9740]],[[118385,-8980]],[[125929,-8750]],[[122332,-8950]],[[126278,-8555]],[[119441,-8820]],[[127270,-8529]],[[126900,-8471]],[[142229,-8589]],[[120378,-8568]],[[127566,-8336]],[[130892,-8293]],[[125730,-8818]],[[134003,-8518]],[[121081,-8517]],[[118219,-8350]],[[132955,-8145]],[[129845,-7851]],[[130478,-7806]],[[141861,-8472]],[[134478,-8191]],[[135150,-7374]],[[131759,-7355]],[[123674,-7289]],[[116577,-7275]],[[118147,-7138]],[[107779,-6799]],[[137766,-6596]],[[109951,-6151]],[[123421,-6449]],[[115425,-5950]],[[135995,-5991]],[[137981,-5843]],[[136117,-6043]],[[104825,-5610]],[[126594,-5398]],[[124972,-5568]],[[125589,-5395]],[[126137,-4660]],[[136777,-4347]],[[126201,-4211]],[[131649,-3671]],[[131355,-3762]],[[119219,-3547]],[[119095,-3960]],[[129906,-3161]],[[109452,-3077]],[[132869,-2934]],[[102836,-3259]],[[110805,-3069]],[[102609,-2806]],[[102240,-2399]],[[129081,-2510]],[[129049,-1832]],[[133482,-1731]],[[127969,-1746]],[[138726,-1630]],[[111568,-1658]],[[108591,-1709]],[[126564,-1745]],[[131229,-1700]],[[126170,-1199]],[[112344,-1209]],[[138205,-1142]],[[101544,-1820]],[[134146,-1347]],[[138633,-667]],[[130356,-799]],[[133762,-541]],[[124790,-416]],[[144357,-2672]],[[106982,-342]],[[130629,-326]],[[130304,-507]],[[106227,-356]],[[133953,-4]],[[100823,-543]],[[107294,-180]],[[105764,555]],[[105501,765]],[[105907,1074]],[[105643,892]],[[106522,1209]],[[107096,1246]],[[104886,1014]],[[99822,1501]],[[104952,1495]],[[127887,1020]],[[104150,2129]],[[130799,869]],[[99671,2126]],[[131537,2102]],[[98779,2417]],[[111501,2976]],[[108299,2932]],[[108837,3233]],[[120483,3360]],[[128674,3519]],[[120714,4287]],[[110916,3779]],[[120397,4271]],[[129861,4131]],[[98809,5355]]]},\"properties\":{\"name\":\"Indonesia\",\"childNum\":107}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@̽ĥ̤ˬZȅ\"],\"encodeOffsets\":[[-4517,55486]]},\"properties\":{\"name\":\"Isle of Man\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ʬ@ĤмӼþʜόώeլԟ͚ƺ̃͠đUz­ƓíȘșKąuū¾ǅWǫ̑âʀ˵ɶĉɔÛʄǣaīֶɹĦ­rÓ`·O¹yiŕĿœāŭƛíƃ½ůBėoĻÁÏqėĽhƀěĈ³Ā¯¼Mbn|Î_Ө˃ָϿP¢r^¤YÚƨĝƐíƬ`¢[ÛpßҲůä^ÀjĖQǐ»èeɚĪŜÁɂãň¥£\\\\Aĥ¥юɳĐsɴČâWªš´Ǵ׎ǵ˄ĶɬǏłÂμ\\\\Ŭ¯Zz´ƀ¦ŜGèĸįƄS¢ƎԬFĀxAÀ`ŒjŶŶèȐï±СbûÊÉ¸SeķákĴǵʒũƺɈÏp¹ĐI¬YƮnư~êþŠͦıҠdŞÞ|@À¹źIƞ¨ĐP°K¨hֶӠ£ʨҎϬɢࢎƈՎ̰Ϧ×٢˿áƷfÙǞɵC¡ůdſƎԙࠩԵšƕRʃċjiF{şɫ˗ʽĩȱŴįǭϯĭƍëŷǿϙ͡ŔȗeŁÜ޳aũ£Ŀˋê̝ùųęǥ¯]±léĂçv·ĵ±[ÐÍ՘w¦đǎy˂ñφǝIÅ\\\\¥K@óRÿƷǻEȟǕ½įǪÝŋǕӼǄͲ̈́ŨĴ{Ǿǘ®ĴĠɸBĢp\\\\ŒêĂΙȎ஽Cб¬ɅÖ«XYpȊC͎ŵɬĉåmŃɕɩ̼ÉBfƉ{IɏƑȐůeåW®ďęĥƵƛȷ}̘ɱɢðƁö[É̙į@ëȏ¹ãBùKĕǛ]£M²ÝÈÃâsĦMƊěŦiæ§VM[ĭ[Éō˟ÊĽÀµvȥƢoy˿jǯŊ̛m˳ßBĐʅǋúħƇGΞĉĮµϱśƃŦŕǑÒŜϐɇȢǾɅ˯ͧԻƵȷƭĥɓŐͿȋ͗̽ʳŋ őףȏßHPǈɋŋÉƋɖ֝с֕۩ำ৑č҉йȗЏPʳӡ˧Ř̓ƹȫ՗łԃÉɟǎؑųȔÿěɾȳħ̵֟כƓ֧Ět¦šUܽѯÇׅ̿äț͢şγÜҷƏȓǵŏэҕʱϝȦљӲȓҤçЎŐ͙êEĥ͖ųƐЅੴٹৠӁྰεӤů˔Ō@Ƈƨ¼òŷ¤ǡ̄ԍᓶĆіřƫĔRȂƦkǗîĵϾȐۼãϐǅɈĤČķSоʐӍ­ƂɴƭHƸɌÖՁļåċȥɡƢāǓȩ̿ࠫΕʱDӻ̔ঁ৒æŬȎŵݴʌˀѢųű֥Ʊέöԁ˼ȉ͎̠ɾҕɉÍɔİÒĊnĜbĈAŚCHʨXxh^lNhIzDvìgÈ\\\\ÌcĬAǬPĬEȸěʘĺǈÌɎÀfQ¯p«ä´O¨Pbææh°C¾B~ÙŢL vwÎÏŔÕƞȍ̢EȲáÁiµGƷtƑǠ¤πǜէɌĈ̶ˠʦżȄĂż¤¨ƆúîCŠïÀƗĚ¹ÜJʼİ̞˞þfî¸ŊƲƚƐ̎¦°ҾɸВݾάƆÞÌ ¼QºÐbêĢîˤ̼@ŊÈļÚO]ýÖbÚºǢY¸ÑǄ`ª|®æÒĔ¸˨ŠÊ`ĬâŜWN\"]],\"encodeOffsets\":[[[77130,33061]]]},\"properties\":{\"name\":\"India\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@¿µáƠĆŏAƨƁ\"],\"encodeOffsets\":[[74232,-7554]]},\"properties\":{\"name\":\"Br. Indian Ocean Ter.\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ˋÄɨt¤÷\"],[\"@@Ňŭˎ࡛λӧŜĉӅñÙøࣽΣ̏Â¼űϵŽޣġǲǨԃãѬɰدÙδ˖ЗZÒӮőźɰŦ܊ŎǧÜƹĵحÅϜɆƔɲ̴Ģӫ~ӝƦsŖͬ²Ƴļ˖à@Ø˯_¸Țȣ¼ĒౖaßĘЬʚՋ͘ǪĒɎԜĢRʇ̌ͨ̈Ņɍũ˧˗̡Íƀē̩ƱјɩʂUˊɰ̜̇δ|\"]],\"encodeOffsets\":[[[-10186,55208]],[[-6367,55387]]]},\"properties\":{\"name\":\"Ireland\",\"childNum\":2}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ȝȃեĝϜȂIŖѮHû}\"],[\"@@͂|ొٸ˜ʇǽƃǂȅʝƑԄϋɶrüқǰʑ߬ǋ͸ͣӰɫ࣒ķೠʸŮ@ȣÝʔ±ѴڈńǚʶКɰݠ|ƚƚنƈȱނʵҰdТơźɏԞʑɺ˙ٺLþϝ¹ǵČğTȻhÇE³ƋõiΓŇǝgĥã¿S[uTuvańŽȷYƁǱ@͑ôĻ˾é̙̯bťŒͧĴ̍CçƱCğHǻ|ƑYɎȢ{˄Ăą¸ǳEƅwçȋțȑȡЧщǈǏİķب࠷ܺ́j͵}҇ΐY|Q¼±HwÁRǕQ]±wcƟܙƥÓőĩXʃţ»{ƛuŷamÍ©McT·ĝqʡyë¯MĵÿؽƲŹżġĿߍƜ΅ÃȽŘ௳Ȧʣࡒʵ˞ԡ`ଝՙїǈҕ|࡛ԈǹʘϏǪχʻɤǻԂǏŨRǊǙìsɰЗтćɸѡƛѷʰǒŜȅé͕̻ƃËēȼ˅ưIѲ˥Z@ͰØǚÜǌīŢĻŸáÀƵʰfƏOҩ̰ǉĄálƻNgfYª@¸¼ôJ²ŁƼԻҲŪȴéɊĤŘOȌȲȘĶªü lÎŀşǞÈŲŦæVzė¢͡BΏǌķ˺©VD¹¾ʍ֞|ŰȃŨbɴ͇ǔȨΪŵªuϚȽҔ̮ǖ̆Ȗı֎էՔŇ\"]],\"encodeOffsets\":[[[57537,27568]],[[47222,39811]]]},\"properties\":{\"name\":\"Iran\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ŗPģêɉũȳԼұłƻI±»ó@·Z©heɞyǊăҪ̯ƎPeƶʯâ¿ļŷĬšÛǋ×Ǚ@ͯ˦YJѱˆƯǺ˕ûqċfǳìƅ{Gy˭ĪзąȯϳŗǅÙóƋƍƧ൝Ŋ߉վ෗ਚഃۀğ˻²˗¢ҷèŮĴĜǥɣ࣊ᇴࢴǪ˸ƆܸµزĶŌ̺êӐјĆhưĸĘĦTĀÌSžӪşƊGƪúĐWgbMųä×Ü¢ǢĲÂE¾Ooʎ֝º½CªUĸ˹ΐǋ͢AĘ¡U{åťÇűŠǝĿkÍûķ©ȯȗȋ\"],\"encodeOffsets\":[[46733,35404]]},\"properties\":{\"name\":\"Iraq\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ߔźѫɋΜėŇɋκpåǱʴÈҤĻƿƏǦˍϏʙ˹H÷ɃϝƣݽťڵʻধŷŋƫקŇಙŲʝŌäĲȥÉуǨఽį¥Ɍǈû˔¢،˸ӷÅĒǜ̢Ĥџỵ̈ɚଏ³ǧŀਦƶݬDĦŞؕR֒ɂࢷŐ࠹ơӛİȒø͢ÛȡȨАćˤÐҟČʶɅŘ̀NeƂθǗ̠ƃƤGƊуŤϴ®ՍÔƠúѦBࡨͻʅʅeѼϧ˚̶̌ÅȺѼ׾˧ĚʶҌĞעϙŽΤ͠]̚ƭͮȨ˄Ý̔Ð±ɂʔÜɜQϊʉ\"],\"encodeOffsets\":[[-15916,67818]]},\"properties\":{\"name\":\"Iceland\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ǷÿGkcȋÉNå¤açjģlŅ×¯Ĺ¯ƫȹWqsPclMÐlØkÜÉɅŭÏȟӐĤБྣÍßփบĒìDÐƨƎ£¸NPǎʮβীʬOϨ̚ЛŁǷ\"],\"encodeOffsets\":[[36647,33521]]},\"properties\":{\"name\":\"Israel\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Бٗǒ͹Ƶ̯ԣĢ̝ʲȥEء͆ѽĬǣȎʤ̨ƚů͜Ƃкǯ૤Ơ͊ŚàÏ\"],[\"@@µċ¯ŮĦ¡\"],[\"@@ãĪľç\"],[\"@@Ƣ͏ƋșåएыÔ÷ɳˉȗɼňՒŝàẦɿ̠ɘ̈Áր΂͚ȫbœ\"],[\"@@rŧʍzɜĮ\"],[\"@@ǰFgeqË½¥M}PmlYúLÂǁƘģģýûƸΟ@޵˙¡ǡʢɯɳȷŮлঘշϒݍѾϏՆʻ࠸ɛ͑ႮܛьηįͱɟĬǳ˾Ͽ¼ǹƌɃͿׯӾ̯º͍ҵǕÑ͡Чϻ˩EßĄȜӢˌŪ\\\\ƴѣࢤدȾEȘƳǘΧÍĶŊΓêʻΤթPϩȎ࠱یзĒvŪϫʹǋ˝࠘டЌٕҝљğŨͮˋuΙǔþа̛ȬόƠÊŢ̗̠ȘƺkÖoǖ֒ĔöȬŴîÈÀÔôǗ̢ƙP_£ÃƨƕÐ`ư̾ĎɶĂ]zBĐƧ¨SºAŰ¨Ćl°KĒĽS¢Teŀy¶xMnÂv®¦^¸LȠÏi¸W´PÎ ŊvSĎAĠOÐ«ÎeĊKÈPj¾ÐÞĢǂNĂ^ȼWͦĆxOJ[p¥Īċ¾Ù¸µú}ׄċƶ]ŜEǮgµ[×ƍćlė\"]],\"encodeOffsets\":[[[15951,39138]],[[8683,40006]],[[8485,42025]],[[9864,41864]],[[10645,43887]],[[13744,47322]]]},\"properties\":{\"name\":\"Italy\",\"childNum\":6}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ފʱŞȧ˃¡˟ĞùĿƧíƑƁĲͿɵʞʛĪļƈ˾ØԦÃ\"],\"encodeOffsets\":[[-79115,18901]]},\"properties\":{\"name\":\"Jamaica\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ǻ¯`øǜ\"],\"encodeOffsets\":[[-2067,50413]]},\"properties\":{\"name\":\"Jersey\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ůįYӱŭɛÇԱŽɹÍɍÃ࡬࠯į³ǋāgcacãƗ¿őka׵Ň©ĥƑīƟǋŝǵŻऱŸnǞВྤĸْiƂdȌHlǸĀӬ̇ϒÏ࿦ࢲɤࣉǦěŭĳ\"],\"encodeOffsets\":[[40085,32896]]},\"properties\":{\"name\":\"Jordan\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ǩúĆƐ«ç\"],[\"@@Ɓƙ©öǾŶQÑ\"],[\"@@ƥS^ŜƈŇ\"],[\"@@͡ǭÁʑų·ɊԌǄuƂǸHȕ\"],[\"@@ĉNPƜúƩ\"],[\"@@ïåǝĺѴɤȥʷ\"],[\"@@ƩDµļĠÞŪÛiŁ\"],[\"@@õ Ǆ͔čγ\"],[\"@@ŝȂ®ãý\"],[\"@@Ĺ\\\\¤ɺƄhǛįġ\"],[\"@@ȔōǛwƮ\"],[\"@@áĤĦƲÔŝėŷ\"],[\"@@ķǘƺßř\"],[\"@@ķQĲàğ\"],[\"@@Ѯ@ƅˡ̠g£ŗżȡ˻Ε˕ࢻɡxƱ΋ȭø׈ķXĉŽ͓͙Ĩ­İŮxŴőƘN˒ϐѼţ¦Ʀʹ̄ģÓ¤ɇŶD\\\\ŵʉÎʉǙ¸żŭˮˀǫΉ͔|ĜȠkeĬҐǔĴǚȚĀȦ³Ȇɥ\"],[\"@@Ʈȣ¶Ô\"],[\"@@ÿlzƨļµƉ\"],[\"@@ɼ{ĐͿ̣ǳǏ̡ȉǜ˛À̅ŵʷѣơ÷ƋTÊŠǷ\\\\çќ͉÷Ԣ̌ʖ;ɐƋ͜ìlȐ̄ĖΆû\"],[\"@@č»ÍĄƜ\"],[\"@@ĝïƁü˲ɀÑɋ\"],[\"@@ıbƸˈÅ˩\"],[\"@@ōqĪö Úŗ\"],[\"@@ĳPrȾɈȦ¥ȫĸSȗȳ\"],[\"@@Ȑsֳ̰γưܥÛˋ̇̕á̟̝ÅūǃࢅΫݑʦыΓǷđˡѕɡc͎ɪʐəÔƹȽtɓǛŲȋiƍρȽȁ̘Đ¦ƹČѽѹթÌЙçǴǆʽ¾ûďtʬý^ɫ̹̈ȳuġѱū΍ԫȃÙȱÈ˙Ϣwʀˆˢ֧Ůб§ɹƿۛȋС±˿àƕУͽǶۓÛ{ʊĬŌ̌j೎ईࢶGৌȬŸȅ̔mȈĔǊƊẘՊՀŪՠЖŞΡͻİɽȖëɤǖڲɢӆՂДɊςڂɚزÏȘɅÆɨ˸ó˴̜ȼÂ̜ʄOĸ̫ǀĢƶ·ł˖ύÇDĪŔɄʖŏ\"],[\"@@¥ĴńÝŻ\"],[\"@@ų¤ĀĐŅ\"],[\"@@Á¿ǒĐŏ\"],[\"@@ݠǁռͲȕ֑ǚ̡аìމ͕ߝĳґϳǉΗ୕ӠύΝǣɵǴȓHŻɟۘЧŵÉ˷àɱʟʥí÷ŤĦ˰ɭ̬rʮӔ̼̊ظĻȤČ͘ৠƫ֢ìȶɪĞߒ۵߆ҭ\"]],\"encodeOffsets\":[[[126862,24863]],[[127277,25105]],[[128455,25337]],[[131337,27293]],[[132095,28387]],[[132560,28886]],[[133758,30990]],[[134103,31127]],[[133511,33202]],[[133205,33004]],[[131754,33571]],[[132175,33629]],[[132600,34021]],[[132911,34559]],[[134323,34410]],[[135441,34760]],[[132383,34943]],[[137583,35079]],[[137577,35312]],[[138172,35112]],[[132491,35179]],[[136572,37073]],[[141665,38730]],[[144619,42366]],[[142829,43091]],[[144687,46203]],[[144459,46421]],[[147277,45176]]]},\"properties\":{\"name\":\"Japan\",\"childNum\":28}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ķȤøÍŖøĤ£ǲ»ǢŸłEŶRÚ^́ǋɉŋĵ½\"],\"encodeOffsets\":[[78898,35953]]},\"properties\":{\"name\":\"Siachen Glacier\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ǁèĪŨÑŏŪÿ\"],[\"@@ѝɑѩڥťȉЁŌ։ƟǅחȝĳŢճCࠣǺ׷೹ʠƝ÷ʣɋĀˑ·Ʌǂ൏˽ƿĻԢƙŃԯβ޻ͩıŰƛ˯śNқśĨűĢγ½vȍƴĀbᅛǔ˹řUӝTûR§GěđՓØ۳˰˕ĝˣŉęʥyğÒƹåVă¢Ϋ´ďÞǭɣâџÄȷ¯û`Ɠ£̧ͥ®ûທەӍңWɇɿȳźÆȂƩƘਏcǯۆЩVúࠢʟħʳζӹͼϳƍਡÞ৻ŗࠛݸᏟঊᓡһBᶡҗsӣ֚؝̶ࣃƿҿ̯ĒࠖוĠʁʐˏ`LʶЃװнŐáŖƂƌ॒ý҅͠΀ξຈuΩȮ̤ԴÅ֐ӱŔ́Ƌ߭ʀકѝҏÛīƳׅɦbŶͶdڕ޸ֻĄǃÁȑаͻưͤˢ̂ȕǼòˤҒ֊ɶjՊѩΤÐőֺזȪƦȚؼǦҠτ̶çƲƟ݀Ƞ̐ȑ٤@ڪχΒщòЎ࢚έڲξѨβƧͮǞѨwѲ̳ӎ×ÐŅʐöȸɦ̮ƝѤbϔƒƔ϶ࣹ˜ιʂ߸ͺȃ˶ɰʠ࢈ΡȈϯº~ƄʲÞұĊɄͮזÓᒂπՄ͜ʄᖮ̔¨Ƹ٪Ȕ৤ȏҲŤϖץý͗ފMƴĶɖ͑ƨǊԜƩМîͿ˭ĎɓϞƠвōČƆ٦ȺǼǐ୴̒ƵʟȝNÂŇୀهᅂᐳπƞrȦʌĢͤđ±ȇˈWàǻࡸWɤƒԄĐӴȁ͆҉֖ƫȲϏߖĭдɸ£ǵגБ\"]],\"encodeOffsets\":[[[51389,45932]],[[89419,50264]]]},\"properties\":{\"name\":\"Kazakhstan\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Κi²ƿk§mŽNţɒ˷ݒ³ȾƁڒяŢćŜ}Ȑ[ƀIݘťƎĸŐƪªĆޢΠɌǹǚħŶDĠdɌ`ŬAɩ͙ɭ͛̓͗^ᶻɪ̋ƬȕĂĻVĹɟȿ̓áPȷɇɧΟůęҿɉ˛̵ݵɥǷഩ৐Ϟḭ႘নǾδɀɚÒƦˈǞƬЌBŤYǚå̘nÀϩָǎO°ǌGŁďäj´­hſ˦ǜǘǠǜɔɊȨȠǦǞƸƲ¶Ņ\"],\"encodeOffsets\":[[36174,5494]]},\"properties\":{\"name\":\"Kenya\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@·ƭé¬¿¨ɛ×Ūȓ²\\\\Ú[zl֝ǫʡǊৡ¿«ʪúz¨¸kÈTIÒE~мƴՐȓ͢ɾ˂͜œςʌɐWZŴǞ©ѺʬЉʛƤÍGåsuXKþa°£\\\\ÁmÿnãPiĮÅĒ^³tôwO}Hŕ»¹AáWǥ_Yʁ|ȿÔŃƨҫƞ֨ϬƦ ǒîHpgjçā³ec­ų̈ͦƔ¤ü_ȸ°Ͷ½ĪEɤãǬĒÝά³Ą¡æUÑƺzĠĚʦˤŊ˖Ğ۴˯Ք×ĜĒ¨HüQӞSŘV˼ᅜǓÜġþ»Ôµ¼ÁвÏŲġŜħŉWaeUʳcÍg×ą࡯˵Ǘččãa÷ȇǥƕsšJăřԁ á_ëīƏ¡icãíćŅë¹Ý»â͗ŅǍFĹˎDɽŭŉuęGśÃÅ|ċΙǇƙƁcÿ«Ã¯ďy£iyH£ěOy¥ěuë[ƉXéc§}ďŁYϿr\",\"@@ćXÍ`]@LgÐÓ¬Gø|\",\"@@nƀů³ÎeFÁìăAaå¬SüC¨R\"],\"encodeOffsets\":[[74384,40332],[72361,40812],[72916,40850]]},\"properties\":{\"name\":\"Kyrgyzstan\",\"childNum\":3}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ұȲʃđĮƴȆǃɎƭȍǛOwҠƩ˂]ÉǓ͐f˲ɋȴƍݞǮt̨ҪʒǐೢĄʜǛ¬®²\\\\TFwl¹·ĖùƴǪÏüĝÖ«ƌE¶ņyàûŖsä|\\\\Ƃ`t`ôSòWü¼°Â|{uÈÔ««iĀ^rC°ÂS BƸƨôPĖŢƿӟɰׁŉ΁֓ħĕƱљ˙ʉ}]ɗͣÒŽĻJ˹ʰɍFȱʻÎćł̋ùęɧÈBǭǑƕΣĻ\"],\"encodeOffsets\":[[106933,10662]]},\"properties\":{\"name\":\"Cambodia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ƔĭͷƌŤ¯ÒĊÝâĶ³iĥ\"],[\"@@ÄŃőÞÎ¦\"]],\"encodeOffsets\":[[[-161118,1901]],[[-163163,4018]]]},\"properties\":{\"name\":\"Kiribati\",\"childNum\":2}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ƉöƠŰӂ°yƣҝı\"],[\"@@ģÖȆĎġƣ\"],[\"@@ƑŘÒ ĀƷ\"],[\"@@UćƳvŞȞË\"],[\"@@ÿ½ƁňƮŤÔǭ\"],[\"@@IōýfWǘĠï\"],[\"@@࢚ೃ]ࡍƚCŹҫ˽̿ӅkÉȗ΁Ŷ˓ÉBȝʽĐÚǓŻƋŵêÖǬ̋ˇţÖȇǕɣ̠ɖrÌńơAŇˤ˔ΖĿÜɞȌǳʜ«ѸʳCiä˜Ȣʢ·òĽĘĪȗɊĥӴϦфߖr˰ˆ\"]],\"encodeOffsets\":[[[129359,34021]],[[129264,35196]],[[129201,35565]],[[131140,35642]],[[131831,35634]],[[129558,38643]],[[131456,39551]]]},\"properties\":{\"name\":\"Korea\",\"childNum\":7}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@āYĉǀĔưƎǑÕƃ\"],[\"@@٫SȧϨݵĚƌƎÚôŘǆȰϴиĆĠiȎÿvŭŚəƣȹȉˢ͢ڿ\"]],\"encodeOffsets\":[[[49434,30336]],[[49606,29228]]]},\"properties\":{\"name\":\"Kuwait\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ϤЋâȓÞDxödRŒŁĉΑÁȄʻĚ©Ɇ»ƠéϺȾĀżýȠƣ§û­sÑrcĖUĺJ`ÁlgŲEñAÃħĩYÉ·çŽŕOʉØǓMEe{çXå¿ă¯sI੊ջAµĵxù̀Ɂ¼ÝÎÿĒȷˆ˓ɚǕÄÕþšÜ£pÝP±ZƛĢƃêªfUıϸʹGû}ƟéoĪƷ¸·Ȏƙ¶å¯gÅÑ½ÙÝrÃjU­Jĥ­§ďOóƷƧAT­ÁqDÿ]j¬Ó¬Çv{|ɵđós_Ɓ_{[tãþŕxßµŅƋFÕ¬ûĞǩÐƳĕú¸mºCx¼lĊ¤ä°®¸l¼tɆpöYĠð@ňŀȚpĈDÒeȉŊNƄÙ¦Ƴ²ďÊȓʲËƴMȤ`Ǌ´ȊÛƊʽȦėİŃƢŭȒĉĒ§oęlƍÆšķJß]EauÁg§µëğȳé÷­JygK`eĀÿhę¾ǡƂNÇñóÓ³fóŧĻËQQšÿȷȁ¿eǑĔȢҺMŦñĶEȪ҈õ̎pƆQ¾חJīǠĺΠǝǪċßÿsXPºN²°ǼÆŠÜÆèzƂB¶IhËJw^ÐƔɒ͆Ǽ¸Č¶kĩÅQÃZ­pu[ƌ ĊFƌëpN²¢bPÝĒrʔGƠM¤ǱΪnªªªŔrRlIæđƸ¨Èu\"],\"encodeOffsets\":[[104579,22917]]},\"properties\":{\"name\":\"Lao PDR\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ϧ̙ʫPҐ঒ˠ͌΄z¯ƃƦÉäǯʳʝòï͇ñ¤ƕƓŹ\"],\"encodeOffsets\":[[36730,34235]]},\"properties\":{\"name\":\"Lebanon\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@àūìЭɛίʨƟʲĀ§òǑÒĳĀWƴÇ°ʓƻՑV˿|ȅ׵Ȫܻ϶१ࡰ࡝ԢǹȀȪ˜͞ʲȘȄÞʾ®°ƂÀÜʠ¨Hðê÷ʂĜɜǇŰգÿʍ̄ǗȒȘΨƢŉ\"],\"encodeOffsets\":[[-8690,7740]]},\"properties\":{\"name\":\"Liberia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ʡˏĞտɏБɶࡥ@᳿@᳽Aေ࠽M@нủཤ↏Ⴒࡉϕٛ̓؟Ҽౙ˴ϯڞۑȦʑÅşĘɉخҫؠɢ͢ʠŕךƘϤġୢе߀ǬĪ͂ƄņżƀǠďֲƈȆǜ¨ŐǌǾŶƮüƎìǄöŮÌ~ºCªãİ@ŞLĬPÌǼŸÁƀsϼȟЊµѾĨཤѯѼ߷ᅀн۶їϢűӸȈͰЌƻܖǐʹо̦ࡠ̚Ҩeݺʥ`ʋƲı۾ǡؾsɮˡ\"],\"encodeOffsets\":[[25755,32415]]},\"properties\":{\"name\":\"Libya\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@³ĕķŰƒȒZɫ\"],\"encodeOffsets\":[[-62356,14154]]},\"properties\":{\"name\":\"Saint Lucia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@|ÙſŊń¯\"],[\"@@ɪaϬίѠܣŪ×¦ʃϞܟY͙ȋЍލϑϧ~ƟŦȣ֪ũ଒ĦɵŪ݌ƜʾY̰˼ą͏ƚÁƎ\"]],\"encodeOffsets\":[[[81792,9268]],[[81902,10049]]]},\"properties\":{\"name\":\"Sri Lanka\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ɉkɛ̓Ñęʭ͝˒ƛ˴ŗˆȦĚψӢȊÈŀĀŰàȪðĤlZ֨ёîȕĹ±Ŀŵőǿϛǧ\"],\"encodeOffsets\":[[29335,-30849]]},\"properties\":{\"name\":\"Lesotho\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@µPǸˤƁ˳\"],[\"@@Ù~m¦xʁßÉ¹ÅkƩXuĵkoϙçåx~Ս×jǠë¶ñĥédJwfépÏLµïŖHÐŠʸɏǀгJ۱ǚDǆƧ̞OǮO ɦĲ˶ńβüڔUþ_Ú³ÜNÜަđڂŒƖǓԀăްοCqÛ¡ĉ¥ÛW{qƼWâY`iƥţʹR]ÙķçŇ_ėwŗǛTŅMuyÃÙ«éiTiŪeÀĥǉ\"]],\"encodeOffsets\":[[[21461,56606]],[[26187,55440]]]},\"properties\":{\"name\":\"Lithuania\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ţ̃ƍ½[}¿Q©R}nyZÝ`YĐɼ|¨¦ÐĠîĨYjNEMïz»È·ÊyǸõ\"],\"encodeOffsets\":[[6643,50994]]},\"properties\":{\"name\":\"Luxembourg\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ӑ́ѱϫƍޯπӿĄƕǔځőʵÆԯÛÝMƕÔړV̓åÝU˵Ńɥırوքغۚź؞Փ̢ıؠɼ¹ԶIĄոžƌ­͘õ՜ˍȠÏθàȄÏŞYŤCÎÿɐħoTO«Ǉ̋Ɩl[ĥĬşĄ¯P¸ĻnÑT±­į\"],\"encodeOffsets\":[[28824,57491]]},\"properties\":{\"name\":\"Latvia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@řŰƒ࢖Ɨ˲ϩ̦Տۄ̥ĘlǨþ®_˞@˒Ěڔ˫êFמƵTЋːǓĮ˟ŮåƄ¯ÆĕOċUïǨī±ǓcS͇ĔŹZå÷gFGł]fFƿËF¿\\\\ÕÀĥ£qÝĉÑġSí½·ėµÏÏNŭǁg]«\"],\"encodeOffsets\":[[28890,46542]]},\"properties\":{\"name\":\"Moldova\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ĥƷǘ͠ñǧ\"],[\"@@ŉkkŀĲÀƓ\"],[\"@@Ͱ՝ʢඇȼչɱәǁƄŃ̂ȓÃƦ߷Ó˟ˉΧzփīο஭₵́గ͋ލϗ̥Ӎãճ˩ʫOছӚ̫אª٪ϧ६tϜǰӜʤƪԖ੎дǭ̔KˬǋϞ»ݬϊׄ°Тζ˄ȊĴïɌĐƮϪÜȰƽËǰŦǚϼʚƂǷMʆɔ͒Ħ¬\\\\ʝʞ̺ǆǇʬȈΆĥź¶ŨĊÈǺĻҔϞļάŏ̲Ūɲ̠˨̑\"]],\"encodeOffsets\":[[[51135,-17308]],[[49503,-13684]],[[50728,-12730]]]},\"properties\":{\"name\":\"Madagascar\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ōAɼìŭé\"],[\"@@ƾǸöƩɳ\"],[\"@@ĕ¥ŘŘñ\"],[\"@@zĥƉǆŐß\"],[\"@@ȩȴŘиύŚʝ\"],[\"@@ĿƻǤêg\"],[\"@@ƵĴɞÂʣ\"],[\"@@Ûȣȡàú̚Ŝèȡ\"],[\"@@˹Ɋùɠ͖ɩȿ\"],[\"@@ѫ೑ƥཉâͻϖҕÿʓtʚ̵Ϯӊહؘ܇Ɣѵјҍţ^ʚŇÿÞҎÉ͒ƽ˶̇ނɜ֘όǨϼ¼ƿ͊ÓɒƘËɶÿUזϲ͆ǜǼŜࣀ҄ɠଔʜϬَƁÀČƱxˬfǰƝªɩŻ̩еұi̳ȷȋéȄ|ȟșFÿż|ɕۻĵƟƣɂr˄ɛ̯ȑuʃЗ˝LyſໝBGӁǟDǵBθ͙ɠƅ¨ÝtÇ@¯¸Ėy®£@÷SĉZ÷ÙCƳ@ɵ@ϡ@ʫAȃ̭ĿǩĕƥĦȹqs]ÛΗඳ౐ϩȚ©·ΦǧևƶØĪǟyËŎƋšȆË˭࣡Пԁ̓ƸӍ¶ٟ˴ȯȖޭƺঁКْ࣏ٿĔدɚЃцࡵИҗ֖ƿΆΆǌÇƦƹ²ɲʼz̸ȇņǽ̴H˶ūʨ॥ੈۣӺȨĥ^ňρłˣϼȖ]թˈùżȭ³ŤɆʻšǁŔʲȎɮê«ƅʀǧƪɫOǃ̈́ηźǷʾÀˎӻĔ࢑ࢪݫൎXѺӝƖŕǲǁÒǛĹڅͦŦɇýЫ˨॓ڜջɌχʚŅĦʉȈóŘԉͼʩϼ܃ƎćăʤȎƟɺޗԖޟxѵʖȭÂȪʀƑ̆љɌƳÙˏѕɟ̙װ૏ߜĳ[ɩʢF؜ʵբե̴œ̦ĭŽ˛ÍȱȶԓɄāǴϡʰĚϼ·ɨöCąȜčõȴě^Ǿаݛިإͼ͙ࢢȟƔȜˡ̦¹ƜĐĮȑŬɽҊ፺ƴġǧẘষᛠJFϚ๠WʢˉচگЌ߿ͦʓߊ͙ɶǾɸҊ̄ĴۢāּԁϪܕڔٻ¤Э̊ԡผәȖø\"]],\"encodeOffsets\":[[[-93884,19126]],[[-89026,20791]],[[-109058,22130]],[[-113220,25604]],[[-114746,25135]],[[-113766,26646]],[[-117934,28744]],[[-114895,29702]],[[-115871,29750]],[[-99477,26585]]]},\"properties\":{\"name\":\"Mexico\",\"childNum\":10}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@аˏƖɇó͹ōI·ŹķġkʹǅwǵƱŷ¯©wԣeɉàȃ̂ÞԎƆ@¬ǔʂĎȐÑĒĶƠxB@Ɇ²ѼV\"],\"encodeOffsets\":[[22881,43330]]},\"properties\":{\"name\":\"Macedonia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Nᅫħ՛ɹտ˕ǿ_ŃύÒ·ïෛÍ̑ʑؗÏϟŮѱWʏȑޣ̧ŝʍЉºʋɷÝʫʡV­ͅȍćΛȀǟăƫƿĐ˙ɇķª˭ɩɗӵȻϝȫ˩ԭ\\\\řMų©W¡ŃĥéNķºEd¤úD~¹ˌțƁçtõÐmoS±KÅnĵoɏMÇǗ̱ǔɵòˡɝaƆɓƐÏъˡfɤ̜ΡʴHȾȍЖ̏Àǫͫȍѩƶιˁȉʴ̹ǅǓƸĨǦAҌȵάǑ­ȇˊĀȰ·˦ǫɄ«̎ƨÁpjºɘԶìòƤŀ WюЋɄɬي£жîAĮl¢Ú°`ŵoẀKŸڊűƆĳńyȬyȾyȾyȼíظǙฮ̵᨜íظ³к{ȾuȒʴ@ˠ@ˌBی@ᝀ༷᣾ၭjʅϐəØƩௐѹŀσŕʵȤĭܺƀ\"],\"encodeOffsets\":[[4330,19603]]},\"properties\":{\"name\":\"Mali\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ŉíƀǸĿ\"],\"encodeOffsets\":[[14916,36714]]},\"properties\":{\"name\":\"Malta\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Ã±ƤƤğı\"],[\"@@¾ǳǅŬňÈ\"],[\"@@sǥÿz·ȌƬ\"],[\"@@¥ưŦŅÿ©\"],[\"@@ÁģÁÊń\"],[\"@@ĽũřC˼Đã\"],[\"@@KƏɤ¦ē\"],[\"@@ÑHĀĢmĩ\"],[\"@@ÅćoŪǴǲĽɓ\"],[\"@@ā¬¾ǘɃ\"],[\"@@ǟƸɎC­Ƴ\"],[\"@@ȚŉąũKĥƚÐÂ\"],[\"@@lřčǒâ·\"],[\"@@ZăĝɐĄƋ\"],[\"@@·ċͅǻõǉi}]ÏxÌIJgµƁAçyÛÅÅş¯ǻM±ĳÀ£ÃRƛĉɗxǳΉ§ƃ˛қë̙¼ǕʏÑܹ̹ÏɒȑØб؜ۑȆթƦò¬ÅÏƝȍŋֵ̭ƏVȑ̲ԭӊե[ֻʀЛǮ٣Υ֧εύ¯ЃŝŽćբǮʼÈԖŔňȫf¼ФąjàĒđۂ̿ی§˧ÆUϖǅЮĠ@ǧǦďࡢŁŨŢҤ̍ƧӔ̉ʲ¶̵ťˏ˫ǣȯɚŖ˕ҽɳ̽ϑó˺ƛɫȟO¥̬șɹԜɗΗǽß̬ಬΙ঎ÚRƧŸqͨĭ͙ȉńǳ˾˨ŋƤǞ͗ˮĄŘϩƂĵǱŅǼÆʬȧǙÀƎŽȈYɣͱиŧфŶŬʨőƊUЈOĪźB¦wǌďĚǦúŴé̞ŀˌŪ¤b ޴łÛȘf͢œȀϚìŸĮƎǮϰųİĪȲ˘ʾpŤàØ°E|kjČQʄŢƖࠪԶԚƀƍŰcD¢ǝɶeÚâƸò¾ʚȆĖjŎÚČĚƀ¾Nϴ˥ȤՕżĚǖëôڋ­ԅķĭüǫ˓ɷǅ_ŏɹǅç͍Żā©ʃƪəťˋծǚԼVƃǻžɽηҰĹöğ˃۫،ćpɧǨɷϨQЌʄºƿ\"]],\"encodeOffsets\":[[[100539,10172]],[[100567,11216]],[[100920,12027]],[[100881,12191]],[[100420,12688]],[[100776,12901]],[[100675,13414]],[[97081,16199]],[[96745,16329]],[[99917,16644]],[[95940,19133]],[[95964,20028]],[[95736,20370]],[[95243,20403]],[[103567,22086]]]},\"properties\":{\"name\":\"Myanmar\",\"childNum\":15}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ϡʉ֢˯ʑÉTǳɳÑőŸ̽ϥ¾ʭݿ׈ĠæáŖmǈb|z^Ŕ`CĆ¬ĚÚ¬ĐÀìM­¢NTÄąŞV~p`®Sª]TªP|Crë\"],\"encodeOffsets\":[[19680,44493]]},\"properties\":{\"name\":\"Montenegro\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ܷ˵ԛӉߧˋēcշkџ୵ƅݷʛҭȇįå×Å¡ËiНÂ@Ȁǋʵ£ʉ՛ɊлðΗÆƷ¸ˁʆåpé^͹ZӕÆε®đNџğ቙ȆۏÍѳҲ˫֬ǙðrȨՙÖ৑ԀؓúǫqŽCɁvţϏP҅Šơkǹˢ˸іIÎ£ÔĀØВÙŔÒÏ~ëfǿʀÑȂßþa¶clĹtóÙŎÍR¡ái­FǻƬçrγuÛ¢­áZſÌę¦QĈ¥ÈēhēÌˣêäŸȓìõøŊĴ³äRUĸD¬nòÞǐφǖâXroUĐzÐ~nÂŸ_â¤ĖØdSƼΆǆԐňº ɘĠǲÈVNØC®̜ƠʦCôRƎƎÒ»ǚī°I¶xÌÞVîWƌƣ॰¡Ĕ˫ɔǕ¼H`ǲ@ƴĝΊoҘòȾć֞eȈŵŶVȖƜΐĒȺʎ|ȚœÇ£ǡ˸ɸоҌˊɆˈࡺ̥ĨeǐMȪGÊY܂ɕǄ^ɀʔËH«cTĝµjȃĐģyŏࡠ͓ˢ¿ø`ânɶmરːۮƛŴ\\\\ǦVŘ_ȖĭČġĒ­øĪEʆGʈ¤ʙψɏĬ¯üeԼXǼÚu֞ċȔ¦ʀÝĲp̈́ŚŎªþ[մèΒĞǠsĞbĞŠ¢ÜÔĖżÞńÊņÆ؊ɢϐɖăɬǃøÄ_ƆSňKàtŌǪºèCŔǚµŎąܥ਷{ĹJğUćū¿ĩ±üɋʀƿĄræàƀÌðD¾_ŔIŜtĞJŠa¨aĲ}ǺŝÆ]Ζ˰ؘGÎļķÎÃĶŘÄՊчƾʕƻĳkïCūnţYƛrǡĆħt­[É¯×TËSƧXă\\\\ŷïWˣůǍÐĝC_[čBo{Ћvʝĉ̋ͷ`X¥³ѡɿѥËȱWƱƭ{şƿɃŷñáǟÙȋŏÅcҍÄ˽ÖğćĀó ʣJãfœcзבѾҫ­œ\"],\"encodeOffsets\":[[114564,44729]]},\"properties\":{\"name\":\"Mongolia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@èĞ¦Ïō\"],\"encodeOffsets\":[[149250,15497]]},\"properties\":{\"name\":\"N. Mariana Is.\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@MˎÃȨfɜĥ¼఺ƽӌɇΈɏࣤŢĒࡂࡄÛƊŜАр֦ǷԄÔʈųƎʘӦĭఐÒƞࡏʄס;ڡz̒Əո᠂ࠒκүبŤŌơחʛҁʂЩ;χƮśƯº£ÞGÒZdlSʐ§ƚ©ÆU\\\\ÚƺĮǸȬĠ| ČĐࣈuzgǊƁǦǛɞħŢŅƌȝɈͷǤÇȆEĜƹߎȼЌ®ĐƖZŐEȈHȤQðkºFÊhżŊłCƞéþÑ`½Ī֤ŞͦťƚƸĂǐʊӒĳиȸۢɊƠüЌ̚ŰǓĿēĢÅǍуň֟ЧĀţť̇ŎCvख़ĶûÍ˗ňİÎʟȏͭũ֕ߵǋÍ®šٓҋ߃ɧݳйʱɇ҇ٵş¨wţ͍ōݿۍʣĤĚĵ§յɸ˩ʊ܁¢طÊµÖ˶Öŏ׷ǣۭƞu©ȭлӭၽ۷̷ћɒɛĘƺkƙӟEe҃YŹzñK\"],\"encodeOffsets\":[[32884,-27483]]},\"properties\":{\"name\":\"Mozambique\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ÃćĐŒƀ}Ƈ\"],[\"@@ŷډṿL³ƦSk£Bĭгíً¤ɃɫэЌʯǙËƱȽűǅ¹oiʭŦ˛Ȱ̵φʯЦ̅ĨĥqγζׅĆٷǉЃ ǝ˝ěmƯá@ϖÔ˄ζઌƵबʧ̞ǬŴŝȠيȁΦǉeɇϞĹ¥ȝ_þČβพD६BϪBȖ@Ȗ@Ŷ@QŐOĘQŢSŢՠ·˚ĸưŖöƀĔĴà¾hƾx̌ŲNц@΄@Ҝ@Ŗ@ɮ@΄@Ɍ൞@޴@̼@ƾ@Ǡ@@Ī@Ǝ@ȌAȎ@ǖ@̪ἢኑۋ@ˋA˟@ʳ@ǔก̶ᨛǚอîطzȻzȽ´ЩĴŃŲƅ\"]],\"encodeOffsets\":[[[-16766,20180]],[[-5488,16674]]]},\"properties\":{\"name\":\"Mauritania\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ó~ĖÁ\"],\"encodeOffsets\":[[-63640,17143]]},\"properties\":{\"name\":\"Montserrat\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@˩¶ĈȲȮǎŔȇşɭ\"],\"encodeOffsets\":[[59035,-20976]]},\"properties\":{\"name\":\"Mauritius\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ŏFƕYYÍȻЋƺߍFěÈȅ͸ǣȞɇņƋĨšǜɝƂǥȃďࣇċğ{ȫĭǷÙƹV[ªÅ¨ƙTʏckÑYÝH¹¤ ưƭŜͽψʁЪʜ҂טŋƢاţЧՄƕËƷːŃĊʠ̬PѰҌ̔ƟóǐªΠÑɰ\\\\Ĥȸñʲ̴ʤĝƌ_QĮǻǔtì\\\\üďĒďžŷeÙǸࠀəĚƦ˚ȣȾёĈҩ¹ʍƔɕĮ« Ínī\"],\"encodeOffsets\":[[35799,-11856]]},\"properties\":{\"name\":\"Malawi\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ßnnˤ²̑\"],[\"@@û²Ėŝ\"],[\"@@ȡa¸þƪÛ\"],[\"@@ćW°ƺþµ¥ī\"],[\"@@ÐęƥăćžǞ \"],[\"@@ȪÏǎʹӀϡˌҷpྕ̼̑΀ܛ˭ŕrŏǰTƙʟIǷĵĻǼՉʺளࡼJ̲ӭ״ä´Ʊ̎ɫഢȋϪŤȮìŏΆ÷ĴǷưEÑЅŎőϊɪĺŇǐ ȒΖ\"],[\"@@ЉƖӯջmƳŽȋঃǩQŇŋɕĊģͣɭɩˋѹԟcɽǕԭǖÁŐϻOʑĵěʝɧōשԃǁ܏نīʀúŎȢɛРܾ˕ǍƌȪӨ¹ȪȢDÌ̤ఎΚ޾ࣨŞ̊Ӹүƾ̘ÿ˚ɾƴäѓƸųҠȠưƈœːƺǄŘÏŘæܺନĎų¿ȃ˺̨Đ{ÄəˆƑìƋ¥̉ţįфƚĦǅƱÙå͊ČȰǵՆƯĕůʳŗշÙƇ̈́˛[ĻґŇʽþĹơ\"],[\"@@½«aŨǚüFŋĿ«\"]],\"encodeOffsets\":[[[114063,2474]],[[106723,2798]],[[120714,4287]],[[102696,5422]],[[102245,6621]],[[104552,6393]],[[120397,4271]],[[119954,7341]]]},\"properties\":{\"name\":\"Malaysia\",\"childNum\":8}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ݨƈϪɦ§Ɏȋ̋yͅșʋ|եν͋ϰስˍJᵥࡃFᙵ@ᲃ@šυĻȏƃÉƙë܍¬ܧǂċǒVȜƝŘōĐĻµ·ùmŋµŇŝíؓնͅӤǝ݆Ɵǆŉઆ˯ۨๆࡗಂʁؚ׭੐ֵިɀRфƈnĤ¸ǘĘEPǄMՌȬʠËҔ̱ᅌfሼSҺ͹ਨ»Ҫſೠƶࢴǒ\"],\"encodeOffsets\":[[23942,-18064]]},\"properties\":{\"name\":\"Namibia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@č_@ĈĎç\"],[\"@@ņ]eƝŹsŷȼƤ²ný\"],[\"@@˟ƎÚƂĴőêȰYĒΫ\"],[\"@@ȞٌХЄл੾ەxțǑ­ʱĶಓ߼ُںğ˶Ťĕ\"]],\"encodeOffsets\":[[[171566,-23166]],[[172044,-21944]],[[171419,-21668]],[[168144,-20731]]]},\"properties\":{\"name\":\"New Caledonia\",\"childNum\":4}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ǠఉΦӋgȅ͂͗ȓωɕᠵङঃޛଵ¶ȷĎίƭEēϝȅǻĹǇȝ౉ɺЛȷ¥UӍϫΏVϛðʛŸ̡Țŝƕ^ؙ˱ɅĜщҨīJ̃Đ̅ĜÛ[­mĵáӝqѡɳǙֵʧȵ©۫ڑׂσƋp˙ˇΌźƂķȢґÇӟ΀D˖ǲMө̄ǁɦɰǿɄ®ΐؘÐ̒ʒොÎ¸ðώÑ`ń˖ȀɺրĨ՜Mᅬഞ˰൪୨␤ᕨౚ˳ؠһٜ̈́\"],\"encodeOffsets\":[[15339,23549]]},\"properties\":{\"name\":\"Niger\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ƇoòŎÖĝ\"],[\"@@Ɇěؚ˲Ɩ]Şվ͑ϜïΐUӎϬVȸ¦МొɹǈȞٮ̀ƮF˜ϑŎƯĄϹtƓô÷ȸ·Ďŭ¹փ̛ȋ¹gïGÙ÷ÑǉɡƏɥķηŧœÑЇɧř­ĻÍΕqËŉųȻÓýƧßŗǻ׋ǧȳÕĂŽǡƑÝ¿{ǉͭɑ¡hÕȬßẩʊǉƻĵAó^ilc oėÙƏı­go¯ġÅıƛħЯсʁܷǙˑɿƶº̋ձħŊȷěǩƚàǝșĻŽˬþ̏ȑ­ŖsœʓPļćŻǟ¼͏ʸŝʤÃƸþręCŤƴŘƍÓƽŎɎàŇĄǷÇɃ͔ί˔ࠗâɢƞʋÕāŅՇw|ȎdÈl¦k¼kæUńôK˞`xdlBçݨÔ֪ɨɾאɸȎͼŀRÀǄßƌʼk±´ŵǾFĖÂŐÄÎÆc٤ʨȶǚֶѢɴӞrĶâ®nÜ\\\\ڶǵъҧ\"]],\"encodeOffsets\":[[[7476,4525]],[[6968,13423]]]},\"properties\":{\"name\":\"Nigeria\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ñōǥ§׷ʼɳč֥ȴƇŃྦྷེîàƊĹò¶ɺZ¦`úǺæ\\\\ÂJfz«˔OÂX¢tbľXȜg^ĀŊòĂ¾¤Z´íǔķPhNLdE²¤¨ЊˢŲɪǖȒǸűĞwݸȲĊĎĸɐ_wqÁĳÃöÍÛĪÝĤ΃ȋ˿Ż֩²ރĭ¢ɈƉǱØБñ½Ǖľ¬Ƶǹ˻Ȏ͏\"],\"encodeOffsets\":[[-85649,11180]]},\"properties\":{\"name\":\"Nicaragua\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ũVĪĚį\"],\"encodeOffsets\":[[-173878,-19541]]},\"properties\":{\"name\":\"Niue\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@£ħīɪƐƁ\"],[\"@@˗ƭЁçŎ݂R\"],[\"@@łù́¼ɀ~\"],[\"@@ƩƪŮ@ĥ\"],[\"@@ٷżʜ²ѾĿɧŀƮ\\\\ȣǚҊоʊՎʖhЄʸѾŚو͎ƃƑՍ˓ŹʌëʽʥÜħ܏Ƒɀ̑ËʫɭįǆĿ¯ŻʥrĒ͆ӧłƷǆگé\"],[\"@@ŕLͤɍ©\"]],\"encodeOffsets\":[[[-69842,12437]],[[4328,52620]],[[4044,52982]],[[5004,54345]],[[4328,52620]],[[5454,54668]]]},\"properties\":{\"name\":\"Netherlands\",\"childNum\":6,\"cp\":[5.0752777,52.358465]}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Hıōɒņş\"],[\"@@ƅCÀĤĆğ\"],[\"@@ʣÜɨ¶|ő\"],[\"@@ƷhВİlč˅\"],[\"@@ЭJʀĞǮħ\"],[\"@@ů­ȴɂăǓ\"],[\"@@ȌܱȇÒƒӔĖ\"],[\"@@^˛ۉ Ր˲Ɯµ\"],[\"@@ӌˆǆȱҙȗ෽ǱॾΦÐάӆɒʍح\"],[\"@@тù­ʵϳAͽƷɭ¶ǈʔ̠hŤǸ\"],[\"@@ǅ{ÎŜĸğ\"],[\"@@˃Yzńʘ`Mŉ\"],[\"@@̒¡ɯǗҥȭջiȀǮ˚\\\\Ϫϴļƫ\"],[\"@@Ȫŝ΁ǄƘ¥\"],[\"@@ϥɡǿƌԘƠÎÉ\"],[\"@@ʩIÀƼȪƱ\"],[\"@@ԥɱЁu̩Ţ௒Ɔ\"],[\"@@QȵֱĈýǟחœΟɵĵžЦʞǇǖ୧ͦԵƃԏRϟȉ˗םڳͫࣳǴѽƁލÒۉҮѷ¹@ơϋIы_ȚƟͅбඕǘ͗ӷӻŜғǫտϿɶ̷ࠗӅ¼Ʒ߅ƩÁۣ۟؁άįÂʓƱƅٍ¼ΉÙԯ͹ƧʯʮࡋŭӃ،̳ƣʕ΋µʚҩđ˿گѝİʫŽ̧ƟaéńҭŮȩӤΓى˱§ʇżČšఫۛঋķŃńʋ­ÎƔߟɖŵϜҚĕɞŊɝ£ǭŬÀǜ϶ȼਯ͓ÌͶȘŲʦ«ώƂУԴЬȌPǩЀ̠۽ƓࡍקºϘО͹èůȬіȰͻıŅÈě͸๨ĔɖǃDŜӄĴɑøĆŔɧɧӕľǻŽ޳́ðĕȶ˰¬·ȌDƘࣰù׸è௵ÈĽȊ٠ɎƦÉк¸Ħ¼ҳ»ǼǠદĩĞюĊ઻¥ǦǬՌƚѼOѮȵϹˆВƲɱƀǺĒҺOhőҔƒ˘ȝتÐƎժƲǏĀʂĖųͣŅjŵ݉ɏЧǎ࠾ײߪ˜ĠÎ˱¹ǌȆ֜Ǡ̊ã΂ȬлŽʃĂҰԼ̀°ȽŦੂǔޓÇþΈؼźʵĦϨǴ઴êࠉÌѪʮՎȏĈƢϋæ²Ǝϗď±ŪˮƐЦqʱĶ׊ƈʮ̇ĝμଌĠ࢏ĚೲԾƄ˂րœʧžӪɎѲåָ̛ѪɩԥζǮɆkįͤҔqɨľҖƭԳͰߺ̨Ģ֚͟sȊࣼдƁŀͨƦԜƃцT؋سലۦÛѽͼĐǎȜ̦¼ʽȚ̌Ũڜĭгʟ̾SáΛ՜Ԭހǻ˞²݈έֱű௫ڠīǈȽʞUŲŨǆŝψ¾\"],[\"@@ҢūҩɣÖɬĞ\"],[\"@@ߞ˴Aŕߛǝ\"],[\"@@̝ļ˔HŃ\"],[\"@@μeɌ̉ॸß˭ƃຈȡጇЩŌʊํÿ،϶஥Ұ୊İ\"],[\"@@ܮͅ࠵ȘӁτ׊ʕ\"],[\"@@ղMີ«ԺĬҊ±\"],[\"@@ࢢęƓΏؔȀʀ˽৺ǥ׼¨ٺ̭෱ŋ᠏ၽይվ̵ɰטbȎƐᄨĞĳĎᛗŃ·ɎՄmఐ˒ਂүŒˬƈଫǅʢ̱ş˝ú§ʳѷť߯຅״ߪȩ̒щb̷ŻЃ͠Èɺ̄åҬĔӮěOĒஎîũਇũٺJגȗӂϢเۓѷצΰ̰Ҕţ\"],[\"@@࢙UᅮĠओĉ\"],[\"@@ୢǙƊ̒ҶÔĚʋশƤᓂǛ˴Ʌವч෋ǫ࢙Ʋ၉[؛üϡĐठƂႷXЁƚԎĜ߃Ěபṳ͞঒ȓ\"]],\"encodeOffsets\":[[[5208,61755]],[[5078,62551]],[[8298,64858]],[[8675,65196]],[[11501,66423]],[[13284,69504]],[[14206,69904]],[[15573,70598]],[[16139,70207]],[[17924,71267]],[[30676,71472]],[[21278,71772]],[[19718,71749]],[[20242,71902]],[[24183,72243]],[[24595,72261]],[[24004,72516]],[[31611,71459]],[[26201,72850]],[[-9168,72540]],[[19681,76177]],[[22127,80482]],[[11521,80498]],[[29745,80806]],[[17190,81825]],[[33307,82042]],[[21400,82176]]]},\"properties\":{\"name\":\"Norway\",\"childNum\":27}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@R¡ĲƃķJç¥ś³ſyYקmɫǐ˃ĵ׍ǶǳµõǂáVɵĉčtэɲ¨BĦ[¤Ň¦ɁäśÂəĩçfǏ¼ĕR¿i]ãҳŰmÞÞ¡\\\\ƫ_ƏîƧĞÙ£Z]¡qOֹЀӥ˄Í`m{a»Nÿ°ĉ´ŽĜgľĘrÂÐpļCĘÀŰîƄŮƜɪȂzjº¸Pǰşà®ƌȴȌ¦Ǵqǂƪə޼ϛάί̒ĆðuâvÁ¢ĵ®Ŀӊ̏¸MǶ´¶MUBióģ³øoǖaɤDæµæíæũ½cÎr^Ű¸æýĢ¿äĞĺ¼dÜOzq£Ƹ­ðĸ÷Ųa˨MȨÒȾ_Łأ\"],\"encodeOffsets\":[[90096,27786]]},\"properties\":{\"name\":\"Nepal\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@§ÓėØƀC\"],[\"@@lë̓ǲɨƔiǝ\"],[\"@@ďÑǔŗ׿ǁɼ̐cǨƠJǄƕ\"],[\"@@ĳŉ¸ð¼\"],[\"@@ǡŁuĘĝoƶȫƳûĩäØƺʗzʂĚ͜o\"],[\"@@őµƸǪ¥ų\"],[\"@@ۦ̖ů̇ǜɺʬsɛȇ˨Śʧ˙\\\\ȭǘÏࢽਡԇʝĤéǩğƖjĨƩɢ±OǕӁmĮƷşɕƔŨǍ߃̱āկūBĪŅ΍էÚƽ̙Ï؛ԡ́Í߭`ǋȲ̅GʫǼƝý՗ƺȬɡëÌŸȍÙIŐѠĴǥÈǌĪɍWRÚƪ¼¥ĆʊċØĶǡƖȞÃĴǺŖ²ŋfǀʪƨĺÍ©ƐԎЂ؆İSŘ֐Ȭ΀̼ƀeýØʸ`óêŢ¢ÎËȢʾƕ`ǄʈȢƢ֔ϲɌǈӺтΰʮAǯqyĽʆƱńα\"],[\"@@Ǔ¾ŞżǛ\"],[\"@@ƮútđՌǑƁƬ®ɔҏƹW΀їãҁӞŷðǳƂJç؎ʾɑ˰އঔ̉آςѸŗɥܟʕƝÉѣ͕Ɣϑůř˩ƞıɣПܟࢱ֡ͭŧǌʅM_ǜȗÇѸ֘ü˨ĉƦūƎࣙϊƝǆæưҮƪǘƬǢݜńü˽צŰįǐŌŭŠʱDʋϘǴğQ̦ĿÜ]ïǻńĹǶFğȾʹĥաۊǶȊȿƳ¿¶ǓȦØǄСҼ˴vãęʲͱ\"]],\"encodeOffsets\":[[[173239,-53757]],[[170211,-51979]],[[172181,-47986]],[[170987,-46264]],[[-180405,-44790]],[[178089,-41844]],[[177271,-42269]],[[179757,-37149]],[[177428,-35773]]]},\"properties\":{\"name\":\"New Zealand\",\"childNum\":9}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@åO@ńȲ˾ÈƏȓʡ\"],[\"@@ɄёОЩ൲ϵրܙͦŵmʏέ؅Ѝ͕ΟץɝdƦÙSʵ́ŭӇĈ։ࠣɛωٟݻŧȉɏhɝǯʁ࠷ϩȵѱĥछጊᠾ࠾֐၌ϣמ\\\\˦˨چÁĺѢĺ³ŸƕxՀǤðÂǷ˘Ȭ\"],[\"@@Źn̚ñ`˨ʎĩי\"]],\"encodeOffsets\":[[[60132,20704]],[[57742,25579]],[[57650,26267]]]},\"properties\":{\"name\":\"Oman\",\"childNum\":3}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@MΥ٫֕ۖߕÄ޽ںՓe˂ȕDƳ¦Ȟ_d[iűĩĒǖJ̆ƷáśīÉ_˧şĕ·ãÑ{­_©ÒǃZ·¹ǡaÙüÕ`NĻÙŇÇ@ˣ̻ġíaéÏR¹»ÝËΫƅГݽһɷ§¯ƍ̍Ʊƙ·ŉeí˟ý̛ʻįÛIęº¿Ƙȍôƅù§¥āŻŹȅ˟ʣć̵ըɋǛ£οƐǟ¼iľI´HÄjàHȱȎ̡ÖƟÐővÍuKÚšA}½¯Dgååa§O³Pão¬R°eɏ¿ǅËʗĹõNç¬Ù¢īDǫMīBËdÇ[ëhuC¡¦kMg_WuGʧȡFěaĉmıÑ£ēɋŲǇų̟̂řӨϿĖG̬̿͂ǉĝ˰£ළřıĻԋȀх¥ÃţྥqjbzêrʤĜSºNdÎªbnvŸ|Ɯ¼ʄŤĪWÔŒܚƦdƠ²xR^QǖÂ Gx²»{RΏZ~҈iͶܹ̂ا࠸ıĸǅǐ͌ğٶǿЎĹࣼöҀėʜŸל^ॖʴĮ߀МϮԼyʈĠƅƌӨʠξ@ɬƙΈʬиɔӲٔɦ̹؀ٞ¯ͮĆːŉƊվո£̨͗и¢âࡢԨ۸Ŋ\"],\"encodeOffsets\":[[74844,37750]]},\"properties\":{\"name\":\"Pakistan\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ȽĸŜê|łʏ\"],[\"@@¿ƌÞr]ƽ\"],[\"@@ēƇʂѵ˽ͿȉŐśЁѩۨŒ~Ūʜ͎Ʌ˵̨ĽċƧĞUųĕɰӓ̴ΝwƯĳŇǱÆ׫͍Bŗϔӛսɱȟ¨ƍԼǡɱȣĄȉΔγ¶ÛĮϋVƽÙ[ƧůɢƔĮbUŪ½ĘÄżĤ¯ØĉÆ·H@͜^jX|~`ºlƂïäÐÂ­ŊāǿŶc³ƇƖąʢnĩƶҐ̟ѢĚװ˔Ҧ͜శ̥תӝ\"]],\"encodeOffsets\":[[[-83561,7509]],[[-80791,8473]],[[-79231,8867]]]},\"properties\":{\"name\":\"Panama\",\"childNum\":3}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ԷσȕŗȳÏLŃo{iij{sªÖë°] {WýƶЃŶħgRI«°ñĊÅŐƏĆġHŃĵũĳũۤĉǖбۼ^ȊŘØͼ˺|^Èty©m­MÝଢ଼À~êß¸¦OªFÐbżÄĘ¬ĸEƒkĄFݦಧʙͅāګǠУЩՁ]ƗǞɯȽͻǢя̾ǃǃřXƓԓҷk¡ľşVÑ@@AÙÉĉÛƕ­¦ʋĽǹЯśޙ֎Ǐ͚޹Ӱ੕юୁڒίњͳɠω٪İºδԝ࡮ˏʐÉͬ΍͂đϜϙغӛఈԫڀԯࣈ७ײmƴȞ¤Ǧϡߺ¬̆پۜƮĞæǁ¦ˡeq³őv«i¹b¥JĎEùŃ·T°Cø ĄĘ¸^ÚĎ¿Ĳ±¢}ðRÖZ¼¾^ŋă²×ÎóÀ{æAĢl¾j²^Môf´¤ƨĔ˂ʬܐĖÙ͊Ь঴ΚӸΰѦԐŴӎZƄwS̤ƑƴÇƈÏ¤ÑLʊgǞü˰űlt­ÂÚ¾»¤¡¢¿êɩ¨ÝǊ·ÊÍºwÄÑǖ©Ƙύʦřϓƒ½¤¯؈MȠØªÄ¼Ä¾¨\\\\ǌÑƌġǚlêÊòh¸hɚŕ¶ÁÔYʀő¦¯äÌe՛ऻǤíEÄhJ}¶ÖƗŴģ¨×KÅu£KÙ ġ]ß°u¬½ŁcǅRß]ƥƩܷŻΉȳąĭīśĝùµŏw±yýљƵʡăuÍĊ̱\"],\"encodeOffsets\":[[-74892,-6621]]},\"properties\":{\"name\":\"Peru\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@έƽ̀ɚîÛ\"],[\"@@ɂŕĭÏΗêʄļ\"],[\"@@őYŃȼȎÞɠśȗƣ\"],[\"@@ōýbĦĬg\"],[\"@@©Û·ôržêfFƻ\"],[\"@@ËoKľØč\"],[\"@@šUWĀźé\"],[\"@@éœķöǢ\"],[\"@@ƾĤ˙Ƒ̙Ȑģþɿo̵ŔŽXίͧ͝Eҗ̩ࡰŕÏʷӕǪȋâУˑ͉ĩЄʯǍ׷̜œƠýӶȆ͸ғΠơSďͳʛʘɅƝ©ǊƧЉہƫfȚˎض֘ǲŜɸ͒ɨΒɩ¥͑ͰƲǨ̶˜ŚΆɮēÌƄʐWwخ҈λ\"],[\"@@ÉÔèȄĊɑħ\"],[\"@@Ѕǁƽrĳǌ̚ˌƌrȮŏdȩ\"],[\"@@ǏǢƠ˒pѳ\"],[\"@@Ļ}¸ƺƀÏûë\"],[\"@@ģ¡AƶƐŐ©ɣ\"],[\"@@ŗIŅɖʯƎƋ˸ÒŜ͔ŀΖƔ͐ɰĜɈÏ¶ţͿޓWɑƞ˩ǃǫ\"],[\"@@`Ѥո઴ܽʯɫˣ֭\"],[\"@@¸ŏáBjŎ\"],[\"@@ýÓŎ̄༾๜èиȺ˺u̡ƈϟˉơƫɡ·ŧ̅ևऽۇ\"],[\"@@űč´Ŏþ\"],[\"@@̘|ĆƉ[ΧɊБŁıŻƬ˭ȷŖLԨĽƲǻīԦȴǉ\"],[\"@@ĿMĻưŴlĈǍ\"],[\"@@˼g´ŻɜĂȽˇʟƓۇ͇Ų৖ƿǰĨϾɽ\"],[\"@@ÿYëɚƦFǵ\"],[\"@@ņ¬òǩʯGĿʖǸŏ\"],[\"@@șŪƲ¨Ƶ\"],[\"@@äǥǺŉԇè̙ƌǁхĄǕǒįǼÞǨң͚ŵΖߐ\"],[\"@@˘ˑJǵӑ϶ˇʓâքЖʝ\"],[\"@@ãȽùȎàɢŦ°§ʡ\"],[\"@@HñƁʸźȅ\"],[\"@@ðŷ·΀˘ɇ\"],[\"@@мːʧdбū˳Ɓå˃ʖɫքʿȲÀĖʮ\"],[\"@@ǚÝġɑƥľîǲ\"],[\"@@ƭčŗŎƾΐǊǧÁȧ\"],[\"@@č̋ÿ͐ǎ\"],[\"@@شˏǌĞƆĲyħڙ̰ґ͑߃ґɃXɛǷ́ʮӳËŽŜ΍ϐȧÜÈóŶάƜʴŉƘοǐðnȎиȋSīɍÛɨ̓ƃ̜ÙéϿƵļÒȐՙņŭͮӋϺŃkǘЭÉǛȉ˞ԉΖɵăƁǋȽ~ɉǤǟãi͒ʲʰfŸ̛ȤJͯű{ǁ˸Ɨ¶ʹ୼¶ÒˢɻǬÀU౺ȰܶтĜ\"],[\"@@ă«ĲƘmī\"],[\"@@TùſîŬL\"]],\"encodeOffsets\":[[[123137,5383]],[[124068,6222]],[[125024,6583]],[[125888,7587]],[[119890,8073]],[[120172,8412]],[[127803,9363]],[[126667,9460]],[[129031,9545]],[[129085,10001]],[[127585,10023]],[[128707,10153]],[[122795,10738]],[[125594,10725]],[[126087,9282]],[[126332,9677]],[[126728,11555]],[[120127,8643]],[[122739,11802]],[[127565,11616]],[[127600,11769]],[[125437,11894]],[[122920,11985]],[[122983,12460]],[[125599,12605]],[[128246,12829]],[[126686,12583]],[[125025,12652]],[[126746,12753]],[[126241,13162]],[[123602,13803]],[[124841,13866]],[[127339,13960]],[[124963,15366]],[[124008,19063]],[[124848,19349]],[[124438,19827]]]},\"properties\":{\"name\":\"Philippines\",\"childNum\":37}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@áŦŔƾ±ˣ\"],\"encodeOffsets\":[[137826,7560]]},\"properties\":{\"name\":\"Palau\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ȌġǧɡĨéǌ˨ŷ\"],[\"@@ƅÁćÞɎ[\"],[\"@@]ßĉĨ\"],[\"@@ǺÂÅȧɫĒƷ͐ʰʻ\"],[\"@@ɔÑĘȿϩÔöÑƨü\\\\\"],[\"@@ȡŎĊžĤµtȕ\"],[\"@@˒ġ^ŝϝǘĮ¨\"],[\"@@dÑĳʀĦĘU˅\"],[\"@@ɝĪɔoJù\"],[\"@@ȵǘ\\\\Ŕɖĳ{Ƿ\"],[\"@@ȧƧ̿ŢšΎϋ̈́}Ф̬Ƨ̼ѱ̘ȡŔʳ\"],[\"@@ƝŀłĮȭ\"],[\"@@ę˔üĆĂǡãǷ\"],[\"@@ŕ¸Ħņpƽ\"],[\"@@ǜìʐŅ¯Й̯ɅƆʁÇďǯę̍Zʉً̯˿ۏwɩǲʃٗϔĂǔުĥЈ¼ŌÜņμä·ćȧĢǷ׼ÞΪФ̂Þßֶ˔ă\"],[\"@@qóđłĄ¬ù\"],[\"@@AᇴħƔĨͦCᲘ@ǌྴׯԖġҶ̽ΊiԠѯȺζοkӣ໒ջȢɏ̇؏·ƑħȤҙ޾؍ĶϙǢşŐ̙ԬhÄϹؼǅȿıĨǧࠌȇ͹Ñǜǯ˝ŗʫÞəȌအʄكִ­ˢ˩Ğԇܾࢷɲġƞ̓Ä̯ǅЧʠʌНĝí˅zĄǙࣷķƩżşyɦƣ˖r˂ŇɠʍUǗ؁̭ΕƄअ©ƁĒ\"],[\"@@ÕÛŷǒÑш͛Ҧ৳وˑøäƔ২֭ࠠܕĬȷƕͻ\"],[\"@@ɫBǡƾɠøǞïPǇ\"],[\"@@̶ĉșĻևuĠȠΌ\\\\\"],[\"@@ȁèĲƺǙ\"]],\"encodeOffsets\":[[[157221,-11751]],[[157984,-11634]],[[154521,-10818]],[[154707,-10260]],[[154142,-9570]],[[153954,-9721]],[[156295,-9174]],[[154734,-8943]],[[147033,-8685]],[[151579,-5966]],[[159701,-6847]],[[150709,-5562]],[[158359,-5563]],[[149524,-4839]],[[155562,-4399]],[[156335,-3208]],[[144360,-9337]],[[156637,-4870]],[[154048,-2725]],[[150598,-2007]],[[153360,-1590]]]},\"properties\":{\"name\":\"Papua New Guinea\",\"childNum\":21}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@βছثНВȷ¡ѭºǩδοċÁĀɹıķɕ֥ГˣʗµÉX¯ºŉX·uĽŢ÷ʷQÅRϟņ͋ǞҹNǯēыÐʱǡʧpdƘ˧ȎʗǕˇĤɩ̲҅ƀŹÁȹŨÚǆʋ«҇ƢĠǅ̍œέ˒ǬŴřèɱ࡛͸UŅñqñEJZĔŘòy˸{zƱ¼]jzêŗǤŴȾÓƘÃzg`Ò¦ĈėİɕŘĿĄV°żĀÚâþDdDÊŽϒ˘ùsƸ̅ņဌ˸̾ɜ๜ʆμŻ˕¼ʹ̿٤øԖ࿮»ӂSN¶ÐKêoexIêcĦòìµǟ\"],\"encodeOffsets\":[[24049,55235]]},\"properties\":{\"name\":\"Poland\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ūɸGŋw\"],[\"@@тÁPś̍ɥ਍jÉ̶ĘŔࡼ¯\"]],\"encodeOffsets\":[[[-66995,18541]],[[-67716,18888]]]},\"properties\":{\"name\":\"Puerto Rico\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ƈȝϛĳЕЃ¡ܗ̯ŋۣԃߋ̉ơӗ͢ĻӴϯ˯˅ߕqϥуɝĆɅŕ̇ȲΉɕĲ˓ôǾŴџ¢̈́άФň͕ĴȮО£ȨӯȚŗťɵ͞ѸϤऌϐوېǲȎȥࠀťŠȂȳ݆͊῭͒͠ǚҨ˾ęLŭɾǫ\"],\"encodeOffsets\":[[133660,43557]]},\"properties\":{\"name\":\"Dem. Rep. Korea\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@мġ˙ăǩĖĐ\"],[\"@@ϼGQÕҙAģŌǔ«\"],[\"@@è͝GÿĢͶÇ\"],[\"@@ǛÖŨ´ħ\"],[\"@@ʻļɒpªū\"],[\"@@ũYlĒľ÷\"],[\"@@έƣٙĮͳõƸͰÉࡠǴmŋĀΏÏǬȖøȖ˨́˯ȃĻĎĘҒҌٸŸ՘ÏߒōÆĢƪіǒĨ˙ؾlɎŮѺÜɧˤş׹ѭĲ֓ȇƧŘũáȉţĭΗiҎԗ̃ԉȦɵŰNУϭң\"]],\"encodeOffsets\":[[[-17603,33658]],[[-26264,38750]],[[-28822,39376]],[[-29328,39450]],[[-27725,39571]],[[-31884,40353]],[[-7583,38072]]]},\"properties\":{\"name\":\"Portugal\",\"childNum\":7,\"cp\":[-8.7440694,39.9251454]}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@lÕ\\\\±«{p¥pǉÂîʵĥڧYʻলŷ˞ƺ¬_ïĚñ²_ǖ@ŤwĄđNđňƃâޅjº¹`ė@Õxï¤ä[üYĨhĊp̜ƊƼõÎÍňÛɑŽۅĉřǳIţaίʭɋͥǝȓʑßq¹ËµFåËåµÙCƋúǳHɭțนɾνĲpÂͬМ˾ȨɈ͊Ӣɑ˴ଫӘףЀߕȢȳǜ׵ЌΓӎƃƤƙöíºB|sx̾ঘBцѦޘเ̈ޖVވѿj̅\"],\"encodeOffsets\":[[-59555,-20648]]},\"properties\":{\"name\":\"Paraguay\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@đëì]~ɼɘ D_ƫȝ\"],[\"@@ÐȠɆŮÛÊ×lÏkkNOdÔȺ°Ƭ°ĺņØĤkêi`æ£ÊKjƃķّӏģ\"]],\"encodeOffsets\":[[[35173,32044]],[[35718,32121]]]},\"properties\":{\"name\":\"Palestine\",\"childNum\":2}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ŨIĿƅŊȥE³ƞɌ¶Ɨ\"],[\"@@°£Ə¢ĠB\"],[\"@@ǒʳóĢŔ\"],[\"@@ËÈÖIć\"],[\"@@ŧemŎƴG]ğ\"]],\"encodeOffsets\":[[[-152905,-18114]],[[-146883,-17018]],[[-142360,-9927]],[[-143437,-9652]],[[-143434,-9124]]]},\"properties\":{\"name\":\"Fr. Polynesia\",\"childNum\":5}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@÷iíkÏ@³RlÓì©Ģ¼XýіȾӨɒƠʀȿ·ͅľЅƱ͓Ƈ½\"],\"encodeOffsets\":[[52499,25198]]},\"properties\":{\"name\":\"Qatar\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĘēŒ¯˲©MÎĦiˢĨƲbƐ£ŚġůΕёï Ǿǡ³ʱধ̧~˳Ǹϫ˵ŮܷƇ׿˱ᓝƐ§ĨƈŊ˗ƈaVǋƾºĘÆlæM^Yáŧ²ū}ųīěgƷŀɯħäƍCvP¶HàNZjƧøĞƲl՗ɴgʀ]R[SeUeE³ÑøȇĘįŒrȒĘŬĨ̤݆ਈ݄ψƮºìæÂEǤāȄLߚÃʹǧТƾȌlȂɈtÖÒ¤zúŘvƪ~̦ėՐۃϪ̥Ƙ˱Ƒ࢕Śů\"],\"encodeOffsets\":[[28890,46542]]},\"properties\":{\"name\":\"Romania\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ýÎɚbƛï\"],[\"@@̢µջ˯˝ɑ}ƱāǦظՄ\"],[\"@@ֻ˝ɋ[ٓӕ̊Ϟ՜̶ƂŎķɤjШȒtŭȧ\"],[\"@@ȭ£ѠήӺƾܫӇ\"],[\"@@ɻËӆ˂ʉȵ\"],[\"@@ǗcǶ̒]˭\"],[\"@@ѱɕŻ¬qǢϲĒΖ̸ƧЁ\"],[\"@@ȥØǬŊĤeéƻ\"],[\"@@ӂறƙ݉ŦϛѢଋݮൣ֑ԠˇÀՃħѿृa˫ֈߋɦĂ͡ů˧űѾףŢсڃȷ҄Ǫׄ×ϔǾΨ˅ئɴیÛࢾŠӼПќ½ҌǐѪҞˌƀ͒¡ưϖ̷͔ΪĨ\"],[\"@@Ļƣ˹~϶Ŧ\"],[\"@@ɠ·С̵ɑǮȕé̂΀̨ĕ\"],[\"@@۲ǙдIɐƿşʷGÏðŕԇFࡹಉÊ̶ϲҞÖ͊ʖ¶O̥ʟʹáǌ ˢ\"],[\"@@IũݥԎѲdyū͸˛\"],[\"@@ĵǒĚÛš\"],[\"@@ƏÿʒьھǦ˯ࠗʁ\"],[\"@@ǣȿƤʌ\"],[\"@@̳ÀűƾӘ±±ǋ\"],[\"@@ަƻƲǩԄĹƅɔÖӝȒ܆ɫ¿Ïሴҝ{ˑ̺äŸóÙ؍ΠïĠǋʺňhȱʔǤϩǔŪʼϵŮܶ°ѮÛƓĩÄĩÈź֢ХĦ৲ŏઊӵāāʬ¶ĿϺu­ŧ׫ŏŁȳىǂˆʣڧ_݃ƼҨȍÛƯ̑w͂ÔƁܹșʆuċƋоǷ˱AƏĨµǕ˅©ɀͷƥ۹̒ۗîϫǬȩϮ߳ŤεġޣOѵҌǊeȂ͚˹Ƿɳǂƹǳ̗lęʃπ͑կϙ@ȶ@ȶ@ȴ@ȶ@ȶ@ȴ@ȶ@ȴ@ȶ@ȶ@ȴ@ȶ@ȶ@ȴ@ȶBȶǜ\"],[\"@@՛˛׹įЅÀĳ϶ѴȎ͊b࢒˙\"],[\"@@͓ъ΢Ȟا\"],[\"@@ܑìНȤвĬࡢőƣʩ\"],[\"@@UǫګIœŪҥvεΦѺŤ୸ѳ\"],[\"@@ʐűƛȹٯˈռä\"],[\"@@ƫɼ૆δ@қख़Ɠ\"],[\"@@ȻëխĚن¸Ťå\"],[\"@@ذģԢʣཡȹӫÖ@Ҝ़\"],[\"@@ٗt݆˄Ԯů؛Ǉ\"],[\"@@ܱňҀȲ˲̹\"],[\"@@ЕĐdŒٚʧǁ\"],[\"@@ϿŷâԸ\"],[\"@@ठěʵͧ׿ɍėԩং۟ঞͅЕŝٕŨĪƕڿŀ࣯W৽ǌʌǶТطǸDǄఉ¯ΩƢÒ΢֜¸ΆǨɊ˨˱ļڒŀıɢಬǢѠá\"],[\"@@Ցµ˒ߎž־˷ߝá\"],[\"@@঄˝Ğ˳༕ä޹Š݃ąતіऎ~\"],[\"@@ؙh˨¼Ͳã\"],[\"@@ԍßǹˆ܂Lyȱ\"],[\"@@ԕʱ੻ɐ͂VǤƼબů\"],[\"@@ͲDĿŷ֙Àͨô\"],[\"@@ǍƟ˕¶ƎϠÂNă\"],[\"@@൘ƄƩሜãƩǱࢣƟધxᅭͰ͐͜ɐǯ\"],[\"@@йiȺϦЂȩȁǑ\"],[\"@@٤Ǖ֜юসɯࡢ@ඤ˩૷У܋ÔχȄǴ͂ՑkğʣޮΡջűСƞกŧӱİӧʵࡍŠ१Ѻ˼niͶπTūǒծƆײèै̱\"],[\"@@țſࠩþÎØॸU\"],[\"@@®ƝҿƪђK\"],[\"@@فWࡐŒɍĹ\"],[\"@@㎅ޡ࣡ʵȌđ۝ʛιêǗǧыZêɫ܍ǳUȵϋÎȖƯӟʕ҅Í஡ƀקđҋΒ݊ǌזϮڞÞүŌޔˤׁƖȎÎ҈ăɰɆٚSϜ˒ۖǊ୮Ȯ֎qɔǮ๨రŢᧂՐ۬ÝϦȏ঩Ё\"],[\"@@࡟O੒ƾȱƭ\"],[\"@@̹ЊìďĹ\"],[\"@@ƇȞđǈըƦǂАC׌ɯٮϸŞ;˾࣬ʟƬĎÔ̪ɀĢΨդʲࢰӮΎƽʶČȘ̹Ķۙɵ˗RνƃșțౝKȓʺÒ˔ɃɖBɒ̛דкη]̣ȎסϗȞ΂ɅŠ}̜͏ͤө੘׉ֲӗƊəÍৡΌᔹɗݡйuŻӴÇĀЃֵеݹ৏ƶŃïǱڷȇӟ˥৅ʼōĆǙ¶őéDǩ·ŋÝsŉLƅTÃ`÷ɫǄɕĄϏ؉ɣŅÅŃÉŻÝÓĕÛş¡ĝĝaǟtΑĝճçý\\\\ō©̓řıoɿÞęGĹ֝ČÙvǻԻWùfĭ°χɐ£ʚʇʅHĩF÷đ®ċĢȕĮŗ`ǥUų[ۭƜયˏϏ_ŗvÙnį\\\\࡟͔zŐďĤiȄ¶SĞdG¬ŏ|ƃȿǃ]܁ɖÉZȩHǏNħfǝĮۛȸɅˇҋˉɷнńŉÞǭ¤ÈÚWºo{șȷʍէɭŵUȇŸ֝dȽĈҗñΉpƳĞĳJýI_»G¥ÄǭŒēˬ९¢ƋƤëXÝUËµw¯J¡ŷàÑ¼¹[ēű͙M̛Ɵ­×DMÇUǱƷûßc¹ԍŇ·ǅTƻ×cĕá£ŷ`mÁÏ}ďyVqpWáǕυµÏgĿñ«mķC©FȷċÿRבВ¤ǶгɷߕĮȱϐ֕ƬͅҊӳȂԃďɣƑࡷXßǼˇX²ȈͣĒʋġqȥοƝᅁᐴିوÁňȞMƶʠ୳̑ǻǏ٥ȹċƅбŎϝƟčɔ΀ˮЛíԛƪƧǉɕ͒ƳĵމNþ͘ϕצұţৣȐ٩ȓ§Ʒᖭ̓͛ʃՃᒁοוÔɃͭҲĉʱÝ}ƃϰ¹΢ȇࢇɯʟȄ˵߷͹κʁࣺ˛ƓϵϓƑѣa̭ƞȷɥʏõÏņӍØѱ̴ѧxͭǝαƨѧڱν࢙ήñЍΑъکψ٣@̏ȒܿȟƱƠ̵èҟσػǥƥșוȩŒֹΣÏՉѪɵiґ։ñˣȖǻˡ́ͣͼƯȒЯǄÂּăږ޷͵caŵ׆ɥҡɁǃȱܓ̍ƛĄÈųƭʿե׵ԌͳžҡƺˢƷ܋ठ৅ځէЇêӋѾˍàǽĊӗǺG|þȬkpţȁKƵŪõfŇÓviSáŉáþ¡tř\\\\ƩȏñĉkyōJÅnknVYƅ¾ÅϿŨõ¼Qșàয¦ĵ´đ¶ɱšş¾Ź®Ӂh»ËųWॿۆ҉Ōˣɼ̗GʓɸӝƮ˂ŜȃèŪ²̈ŽθĘǀːξæÆĥĔƈʺIӡˈŭȖؠx½ŲܖʘćƎƟFăą́sǮĤҡƛżѦҀȶ݈Ʈ͎Ĺɰǅ¤ŮǼǰ\\\\ˉƾ΢Ȳy˚ʥIԗʆɍևȒǱōԽЮګǝхǘѳɻ֦Ȼƈ܋ªýΤɶĐ֍ӄથʿɍ̟¨IrÉĂ¡nqxPȄiȐ}ûÂ÷Òµ´xĚĺp|Vζ÷ʖ]˞ƮĞÈb¼Pɇˈȿņǩ`ƟIÇfÒŀXÆW~tƍ°ȋîĕĄĩƊġäĴE^}př ƻôOn\\\\°t®ŰŖ@g¦åðÁ²GzVpäÈLƢɿĆ͡ƮǇQėR±YµãsħeůÉÍ¹ºlżࣷİŗò®İS²mÒ·ļOǯǐUê|\\\\ƕkǈ̌P¬SpɏĨwà`ıH¢ŜŤŐȤÒɵ̎Ëӈ׼ӲśĠʢɶõƸƀΰiǘƞࠎŁ¦ìϛȦշEΧƸŉʪ׹şཤࡔ఺޺̆ͼ̑˖ৃѶњʊTƮЇȲ˔ϿǠȈƪǿĔĞ͂͘Đࢋঔޠٶեͦօņǵʤʪ̝̐ÂҪĲΠɶטŔþǠֲćRȶ֬ñϚĨYŦ࡮șýĵإÔǚǏԺQiđЎ¼ˁ̟ҘȮᆤı༼пט˯ड़ʅɊ[]þӒˍӰıͤчƛ͏࣯ѵௗșᥟ˞ׁǸ˻»Ď઩ǌȁȰࢇÚ๖׿ʛħلĕӢɯîƷ̵̹Ոߥ٢ĕӀ˩ࣞǃѶŖĀŤĝȔ٧öҹ˼÷ǂ̈Ȟᝂԃʦǎ͘PիӒfȼආѴؠͬ࡮ĕΜƑģŃʪfɖő˚ްիˈΠ࠾ܷΜ׸ĿༀËڤՋঋûՃ˿ֈȑ˖ʛԜù঎ƨȀԞ߬ĆáǸͶsᛶ֘͸ƽ˚Ŏͅľ௪͚ׄE׍íŒЇ֝Ɨ৺x͖ýҴ̮Հæ࣪āࢠ˰ݒĮ˂ɣɫʛՄûƜ̖ӾnώɐٙԖبɌ᪂ʿפʋᄚ̽଴ҹ٦՘ԇbҋњ͋ĖҹĠƗŝ͚঺šĊυeÁɚൊԐ૾તłą๚zાȇȧ֭ץү۲гŅဵ࡞УϝʧÓΏਁٓЙƤɹۃƏ˽êʸŦ΁¹ͿƆևaǡƲǭ४ȣࡦdҸħ;ðĄȔୀκʂΚ׎̐ͅռǂ˦౺Ȍ̐DټёÃׅԈǫॴh૫ƌÜςˤÎ˿զ൳˨ӣHԗůࠓ¬ɑֈ٠ٴ੍ܮӮʹૐʦǣ֖̮ӶҳϽ˳¸ԯആǵֈؚȥԸHŢÌзQ̿ɮ๻ʊͳ̞۶ĺހǑϤĮǻŞѯikĶوƼ৔F૸ʓݲ̻आ¢Ўăމ΃ƅ֋¶ǝծҸƊ̧̽̇ͰĽMƸ֌ɨӭҶ͒Ӥ˫ǆұ¨ҩ˸੡Ȉ^ϰΕʂƆ˴┰Ÿ්Ɣऍϗݔ˥ا̌঴ƄϚǒ࠿ζӍÔͨŒфĽ˨௃ʀΊƞϚő͞ĆΨȠѹ°ÊĐ֒ᑜϲ὞˒হE̴Ǆዎк±ΟǃܖĨWĩᆒ̐ञǵȕȗʼŎsǦࡧ̂ႌيï֛Ĳ¾θശѤ୼Ȇႜ˷༙ʍᘪÉШĝࡡΏસTϮǺ᧮§מǧŵċ֪Fˣ԰ǖʔ̟ʘ|ʏ̑फɘцɑʌОƉڧλᣭ׋}ŷഡЍޭÕӻʑЫm࢛ѿӄº٨ʬ੮೤˄Ѳ_࡚ɒউZҰɰڜßÚĪΚq˓»ƢşظĳհǼǒ£͒ɟɓǁˬħ̧џҌǑϗƠ֞Ғ́ƆໞǔᲄƑΏÕuǽૐɣᑔĉаvřĸҞÕϲȨōЊࢨîࢴʭրĎʢǵЖǴ׬Åଢ̳уǽΘmȞƕۧƛܨćňɫЍñ्̖Ł࣐ҫʤƊɀƩԯÛޚҙٴȑȂÐɞǻ࡜мԲֶ࢈Я࡜ܚȈҀT༌УăĀЂĊͩ¸ˆǲҞΰƹٲ ɕ̩ͦÈۢȪࡗwƔϮƔఔúɫʰ੆ƛ⇈ɻcû௫ԙĻŀÇᒌĒ׽̍ĮǊЅöCʇ׉]ŀȗݒĦৄѨሪƍѠɥ߿čãĕൎƝхʙܶżԬÿєɛˣغů↨ɒଐ­ૄȽվЗɷσ঴ɝŀяɲĭϡϋ׮̮{ЌՈȜࢊĒᴴǷࢊȔϒϥࡐǉʤʙެϪȂ΍ҎΟ˜КᚔʅƊļᐜ©ᬐՕؐɳ@ᾕకϵ٫Īܱ̪ҏג¡ƼřŻÙࡏƤ౗ɵ౎ȄʜǗǭĵઊƬLˋɈŝ̜ïƺŪŸē̎ӿʓ½ʬǯ¤ŪԄͥŇśʾˑϙ̭ໟɺ ƶ˅IŖǹᕩإݟěЯʹɱÀ¨ƁїŧEėງՃɍЁ̱ĐًѼࣷmއƕߡҧŗļǺь੣͗ŋɉέǾΉƍlð͡͇ȷûЕ्ܕƱ̷β̟ɚȚӔƃϑεXЛŌŷˬâϣʍǁǧlǱƔΈʒ̯ťȕϋƝ̡ӽ͎سЙȣ܏tו̑șͽƴջρĞ۹ˡɯľŘƅĭЫ͛ӕ੍ڭċȏΊſैɇ̚ЫှÅОάଆܮԄņƨŭ˂ԸhǺȄԞU޼є՘Ԟྀࡲ˄˄ൢϚſĠϞˌǛİͺۦ͠ƬԢąǬÖ࠽ɐࣱŹˁևȪǇƟŇȕŒϳൃރӽīǦ͚ӵÍѦ߀ٍƥ̧ǮळƧԍ͓Ľ଱࠱صʱ֫җťʯےáǄɓםvϓşˇŲ˫UҗʍлĖțĵٕǣǨड़Šދ˴ܩÇƸ¾ࡳǶӝŝŞţ΁­ƅȄIȥġЁƀرūࠏǂЧʉеȲጥԣŉຑ޽˿Щ຅܉ࠃۛᎯ৑IǯԀůߒßۇξd]̢ѴĐ˝ƷжŹӥͳה¶Ӟ̘şˍʛǜZȾ˪ή֎ė͚ìֱּ࠘ʭǉɷ˻ÔΔȹĻͻ̒ɏıɏηʧ΋ۍĔ׽ƋƝ°˅࣓̅೫௻Ƚћշ؋ಗૣɣīر܇षӟ܍ɁϙƮͽPJβωǿÔǨٽ֧ϗ~ŀőŭȃ\"],[\"@@ǵÕࣇè੾Q\"],[\"@@ЅΙ୚˂նɥ׎½ƖˍӑƇ࿏ŵ೽Hෟǹჸା֊ÿźƪЖƭ\"],[\"@@ૺű߃O͵Ƃ\"],[\"@@ળŴŭǐᓘŁवȁ\"],[\"@@ો܂ĨЊų\"],[\"@@٧|ՀŒŨƍ\"],[\"@@mͯߎʖ௸ɳ͉ϟ՝}ݚ˧ౣƣᝋʼѕک̌७ĀྔԐʜÇ፤ņ\"],[\"@@зì˞ÒƚŽ\"],[\"@@ûɻথ`ǴɈࢮT\"],[\"@@ফzіǄ࠼œ˥é\"],[\"@@Խɏ˰ᆲųܛqχǏ\"],[\"@@ԓFÆňҎō\"],[\"@@ࡈ¡ȨơࠓŎೃˋƟļࣃᒌȲ\"],[\"@@ûǽࡱǕٯÜՅÁµ͖ᓚd\"],[\"@@நȩᝣ˫ƖǇਭåƀƂݷ±̅İ੄ȔৈYƂʲࢄĘ\"],[\"@@ޭĴŰࣀUɅď\"],[\"@@ࢿ¤ୈĖˇŹ\"],[\"@@ๆįञȱීŃ৷ĢԻŐ֤ȴ\"],[\"@@ʶǭէÇࣙɄ۶ĐӖÝ\"],[\"@@ٿźᇮ̀ՔɟჁș\"],[\"@@˿Ý૓Ěඔ{\"],[\"@@૾ʿ܁ȑɰəᵥɛᅋ̌ศζ֛UĲüᏘͰՠTؐǣ\"],[\"@@وŅף§õǕႭfȿļጀȢ\"],[\"@@ಛÐഔP·ß\"],[\"@@ƉĦॆvĂāࢽ\"]],\"encodeOffsets\":[[[150236,44794]],[[149717,45566]],[[152166,46406]],[[153281,46738]],[[155651,48023]],[[158526,50496]],[[159664,51510]],[[160159,51874]],[[146188,55700]],[[140471,56423]],[[141252,56415]],[[21746,56591]],[[170650,56156]],[[154205,60436]],[[167563,60010]],[[36676,66747]],[[71702,68099]],[[-184113,70595]],[[51472,70847]],[[165343,70555]],[[173262,71251]],[[61902,71614]],[[54174,73078]],[[183155,72527]],[[141271,73224]],[[-183169,73295]],[[79496,74027]],[[81410,74468]],[[76453,74623]],[[123148,74844]],[[56648,75068]],[[72371,74850]],[[145598,75670]],[[85555,75850]],[[144395,75776]],[[116109,76187]],[[88733,76781]],[[84145,77230]],[[150319,77180]],[[139212,77220]],[[143410,77649]],[[98850,78109]],[[115178,78460]],[[152730,78500]],[[69392,78068]],[[98597,78876]],[[91663,79042]],[[133824,43318]],[[110281,80007]],[[105354,81157]],[[78079,81563]],[[94908,81598]],[[52644,81863]],[[61122,81875]],[[100019,82083]],[[51254,81997]],[[58449,82280]],[[54806,82110]],[[59348,82047]],[[55722,82405]],[[48581,82795]],[[63660,82775]],[[51485,82870]],[[81948,82789]],[[62609,82894]],[[56033,83063]],[[60030,82987]],[[64895,82637]],[[93765,83089]],[[98844,83022]],[[59198,83504]],[[65179,83568]],[[59695,83677]]]},\"properties\":{\"name\":\"Russia\",\"childNum\":73}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@aM¡Ýľƅà{ª½¨ĕÂӣkĹuÕÇ¡PµSÁoEŧòʓēƿÞ¿̓ƛßʵ]ʍǴóĽĵîcȢɊǤÆЌ͊˨Ⱦ¬Ėœΰͪ¬X¶EA\"],\"encodeOffsets\":[[31243,-1092]]},\"properties\":{\"name\":\"Rwanda\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ÔôĈț̙ǪºȊńʋ\"],[\"@@ݶęȨϧ٬T̮իWƟφș¿¯Ȗɍضѥš`Ǧ̵·ǩĽVѶࡱĞĻ¸ÿâãľǍk´QÐ@îløjÐÖNďȗɒ­pǩߴ३ᒤʽèèϤם֏။ᠽ࠽ុΑܵΥӽשř˱ʣƑƕNȻʾ৉͙ŀਙđлǈȑƁu֛̫ˉыࣂҙϚѧژЃ֭ࣞі̑ľϝӬƵ˰®Ǭƅ̦ØװԇऴқЊ́Ě̥ѺîŠį˦࿿ᘲϩĄćÅ˜઎लŷǶżǌŞĮƠĤƒª׶ňlbÀŒäƘbdhdǌĂİ´сѐ̽̈ūŘɎÄɺÎԲžɜÈӲŮZŰİȊ˰£˖¡˼±ĠഄڿෘਙߊսൠŉƦ\"]],\"encodeOffsets\":[[[42996,17117]],[[47649,29795]]]},\"properties\":{\"name\":\"Saudi Arabia\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@²·˦БAÍęÄSĹªܣɺધड़ۃƿƳsWwWuµmi[ЃŃȡőµƯƋIá_ĝh©C[gŻFÇùƧt˟̇޹ŝȕlǉpǟ¬ЗͯఽϣőҷڳƱߝƇıǗŒȑȅϽȝؕǥü̘³ˎٵӄ³ܢłԤБL^ǵ֑EɢʝèԷ৏ઑЁËكҠͯǳōʝбƥŕɥڛFƙɰڳXΑŉةּ½ȦիÝŧɿѥɇݙ͓ȅԟŴÍʤżȎpМډआÀΨ˥ȠUΈĝàĵӾΣdđĦ͸ҐĹЂζ̦Ɓ͜ʐƠɘτD̸ƞƜܮfRṴ@о࠾NBဲᢴ@ᢲAƘPŞǚð¯©ŷ⯀B\"],\"encodeOffsets\":[[37757,22525]]},\"properties\":{\"name\":\"Sudan\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Iޓĳď֡Mʁҋݼ͟ƊʃլӅɰګʆ̫ƷƱǥǝȧȟɓɉǟǛǛǗȟȡơơá³Яŀ֋ƣǗƽ˳ʂɁĿͩĞˁʛåŒƝ@ßǰˁŬѣԖǩtȳȁлĨʥƳȡvͻʜ͓϶ɑԪՉ̄ǥ͘®ưࣩږćŊhɂ̇ˢҽżŧ͔̾ȆɈݚʀѦŨլÞ¾ȥتֻΒŊڴWƚɯڜEŖɦвƦŎʞͰǴلҟЂÌ৐઒çԸɡʞ֒F]ǶВKŁԣ´ܡٶӃ´ˍû̗Ǧ\"],\"encodeOffsets\":[[34896,9689]]},\"properties\":{\"name\":\"S. Sudan\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@¬̍ǬɃ¸˥ÿȯȈˉǒ®ȶΫBҋࡓÃҁǊŉkŦի˯BʅB܅HƵùǑĉɝ«ʯhć]ƥÙĕgŕb¯S£ƞˊìŽĘũŉgДĪøۄFjƘѸÒŖƈݼˏΜƠųŖέםʸˍíçşࢫBǣˊŲŖƣ̓ՖƫöĉÝùĔ͜Ɩʮ̺ɮφĔânưĜǞ˞ЄٸǊ׆ąδεĦr̆ħʰХ̶υ˜ȯņã\"],\"encodeOffsets\":[[-12575,15165]]},\"properties\":{\"name\":\"Senegal\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ˍKƘĸŶī\"],\"encodeOffsets\":[[106465,1364]]},\"properties\":{\"name\":\"Singapore\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ͳ´ŻːVѺїʋēڧѸصƠZŀͯސµ\"],\"encodeOffsets\":[[-37993,-55363]]},\"properties\":{\"name\":\"S. Geo. and S. Sandw. Is.\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ùMÚĊ`û\"],\"encodeOffsets\":[[-5828,-16381]]},\"properties\":{\"name\":\"Saint Helena\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@őaϧːӺʭ\"],[\"@@ȕÿĥÈȜļĠă\"],[\"@@͞Çɦ̳ӱĘȽŶ§ǢǉVĺΈƵ\"],[\"@@NŧŧôˢƸɭ\"],[\"@@ȂƇ͔X϶χƛÅ܅ƒǅʘ\\\\Ɔŀ\"],[\"@@ȪŧʫºÂî\"],[\"@@ŷ¤þèĊÿ\"],[\"@@ƛ«yƞǐ|Fŭ\"],[\"@@ƩŰƖŨTʗ\"],[\"@@ȼʡ«ƿǶƋǬձԃծµΤĽƖƆ¸\"],[\"@@ŔɝßėșƔ}ƨɋÁíÐɰʢɮɵ\"],[\"@@ǳĀÆŬƌÕ]ƕ\"],[\"@@ƩǺ¦ŒȼűķǙ\"],[\"@@޻дУиɶ¹הΥΌʡǩ\"],[\"@@ƋP¾ĮĎĽ\"],[\"@@ā˷ĐկּӠɇƌɥʚƛ\"]],\"encodeOffsets\":[[[164431,-12081]],[[170121,-11015]],[[165597,-10636]],[[165425,-9856]],[[163585,-9495]],[[164013,-9211]],[[163010,-9342]],[[161903,-8892]],[[161167,-8922]],[[164608,-8513]],[[161550,-8439]],[[160944,-8302]],[[160449,-8113]],[[163717,-8739]],[[159580,-7267]],[[161267,-7506]]]},\"properties\":{\"name\":\"Solomon Is.\",\"childNum\":16}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ΧŔ˲ÈĒ¯[ū\"],[\"@@ÚăIy½śFwh[ĤmĬ̷ƩʋÅt[R¤UG¾ĒĴ^ÞUE{ţĻǯįÝʽȗȃ͝ʱȩ˛ࠓЖL̰ǽŹĒė˜ǉÎĽǺǀKǈǤʍ«qɢŮȝƘǸjĴǌǠĢǔ˦ŊǌʊmȚİ՘HÌer«Œśʐ͵\"]],\"encodeOffsets\":[[[-12826,7615]],[[-11016,9611]]]},\"properties\":{\"name\":\"Sierra Leone\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ȰԞ͡P]N¹^§ErŐÊŀƈĝĊ`øIÐ£byÇʕű˹ىĐƤćક͂ʓƪ Ɩт˴uŰǰt\"],\"encodeOffsets\":[[-91507,14762]]},\"properties\":{\"name\":\"El Salvador\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@įehɼĈɕ\"],\"encodeOffsets\":[[-57617,47963]]},\"properties\":{\"name\":\"St. Pierre and Miquelon\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ŝ¯©ƊȀƬÀƉ÷Ļ\"],[\"@@ýìĄRŋ\"]],\"encodeOffsets\":[[[6820,124]],[[7602,1606]]]},\"properties\":{\"name\":\"São Tomé and Principe\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@tƱ­ăĿƣ_ŧcĳO³»ĕũɃőıAMWQBqèŻR¥ ¨U¤uGÅQ×Pć¡·U¡̃ȏĪmuĕsyoQÄm®á¶¿ ±K¿O÷ùϳČȅĂбۈėѲ˿b΁תǪӈÑŸǦƜ͌|ĸƨğŞľǴȌώؠě˴ƻWǌɘþۄFټƱuʱͱ֓ňځˈΥ\"],\"encodeOffsets\":[[-55331,3717]]},\"properties\":{\"name\":\"Suriname\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@]œƃÿƿŷįWƍ̩É˅Ƕ߱sſș͏ů˙Ü۫ȇÉǳ߱cԫȤɿ͌òǲƶȰԼ ˞ƪÚǊ֠Ɉˈģʘǖ˨ȍcƗʨoʲǢьÏǰĔҺM͌ǝϠŅÆQ\"],\"encodeOffsets\":[[23080,50251]]},\"properties\":{\"name\":\"Slovakia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@õręVǷŷйǭaJàĿoĹ̿ŇÞÕÏãPZćuŋTſ¤ƉkťĀ·âmLiyãíµqЭ«ʧöɢÜYòƗĤÁǂùKkZOnN~¾¦ÌfrEhǯkĘƎĈØ\\\\j¶܌ĵ̀ǦࣄÒŖƼǆKȜ̛\"],\"encodeOffsets\":[[16913,47616]]},\"properties\":{\"name\":\"Slovenia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@će˚Ԧٶзࢯ\"],[\"@@əŇĀʷٗБŞƎűЊͶɰ̨îƨã\"],[\"@@Ïµ¤Įǒeƥ\"],[\"@@ࢭÍכłūɝׁǃūǕ´Ǝǉλˇٍ͎̃ԃᅿ׃ʙƳŴčʗęɛĈŌʋǟćΣLȈɳɑ̭úƵɥÇůĸܿΆƑʜ®ݮӁİɥࡋͯԄɱʇવϣٛc׬ťɫ·@޷ʫړѭӭ࢛wŇ̑±ƽŧłʯƗŋઋ^ô˲хҖˤuŧƪǜXtƒϱʐࠅ৲eȆƵzďԶ¤øǊêŃƠbž̨įʬڰўḔʙҪΌ¶Ƥʖ؋̴Ůӄʭࡌƨʰ԰ͺΊÚَ»ƲƆÁʔΫİۤ؂Â۠߆ƪ»Ƹ࠘ӆɵ̸րЀҔǬӼś͘ӸඖǗ͆вșƠь`ୀџܚŹڈ΍ƹгɼýʙ̈ˋʍҷϤϓ\"]],\"encodeOffsets\":[[[16926,57642]],[[19535,59224]],[[19617,59313]],[[24736,67385]]]},\"properties\":{\"name\":\"Sweden\",\"childNum\":4}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ħ»eɛÄȧNˍóz}MwţkǳZŏǹGɯ^Ǐ´ǯłĿǔ¯ļÛNYlR̎ʈζĴŚņô ZGьȇvX\"],\"encodeOffsets\":[[32715,-26580]]},\"properties\":{\"name\":\"Swaziland\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@DýƅƪÔ¦îő\"],\"encodeOffsets\":[[56874,-4805]]},\"properties\":{\"name\":\"Seychelles\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ӏї̹éĵŋ¶رƅܷǩ˷ᇳࢳ࿥ࢱϑÐӫ̈łǸМƔź£Ɩ͈òñðʴʞãǰƥÊ°Ƅ΃yÕڔśŶÚɸ®ÊØMƈßvDǌƜzƘɖÀJ|ēǎR¤¨ǐÜ~rĲSƒ±æ¥̶SôǒÆƾ¨ʈĜӘǫŠDǜ]ȾBŨlƺˤòׄɮ঴¸Ƣ¤ĜêR_jIķ\"],\"encodeOffsets\":[[43376,38000]]},\"properties\":{\"name\":\"Syria\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ǂ·ǇFþ\"],\"encodeOffsets\":[[-74068,22376]]},\"properties\":{\"name\":\"Turks and Caicos Is.\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@QṳܭeƝƛC̷ɗσʏƟƂ͛ε̥ĺЁͷҏĒĥΤcĶӽĞßV·˦ȟ¿Χ̭Þ؇̓ó̓އݑαɹ୕ǁÏđȈƱқԡޑ½ܩεȩ˄ƕƵΝƧБbÎɜη٨ڃլ̗Шɢʎஊx͇̌ťʖđϸªؚȟւ͕Ѩǻ²ƱBōư˛ϒčΰµȸޜଶच঄ɖᠶȔΐ͘hȆΥӌǟఊࡊϖ←ႱỨལ\"],\"encodeOffsets\":[[24556,19965]]},\"properties\":{\"name\":\"Chad\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@řԛӈ͝²ՓǸʽrႫÿIȺוŽßλŃϙ̨ǯͰĞцœǊƾڸˁͼĮüҢʗÄĠŠßĮլϻ͎Ą̈ßĂҾƉ΄\"],\"encodeOffsets\":[[923,11258]]},\"properties\":{\"name\":\"Togo\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ĥŁt͠ĨåuƷ\"],[\"@@ĝƑmŜŌv\"],[\"@@ĿOqƞŲƍ\"],[\"@@O¹tWƬŠǞǩĹΟĬǟזIT½oƅö̍ȩ҇FòĵNťȡҹ Ų½ÀfȸȂŢĀRRļÌôŨ´eÔòôÈ MǢƁĚ½ĀgÄō_hL̸ǤĠ¶ì¨ÂhbvFà^ĸIŢƎÅĚk¨pĊđŮȑńơĘįʾȥÜƉ³ȉ_ǉNȣÎƳȒʱĐÉƴ±Ú¥MƃȊŉfCÏoćĿț@ŇïZğoõsɅk»­·ã¯ĉ£»k[S±«­ʛǜೡăʑǏ̧ҩǭsƎݝɌȳe˱ǔ͏˷и­ÿףҀ޿\\\\Äٺ̟Ŗ̯éȵȭČǕŁ̗rѧە།öࢯӦpżחŞƉäĮȫɠ࢓ę®·ɖąTwȊăƧɚΉԂ˝ЖJԔԻȑΕǏĹňωɩōŒÒІƯFĳǸ΅øëŐţȭΡκrȖƕĨŘȧbăȸƻČuƜəƠíǒĽôƃƓĭ¢ÁҖϰ஠°ЄζώΦ֨ǭ٤ɿМ\\\\ּӉզ̱ԮUȒ̮ƐֶȎŌÐƞ«Æƥñȅժ؛ے×вɑȒ̺ÐÒܺǖʐ̚»ҜìƄ˜Ί¨wǴɘƜĊÄQ¤Ĵ¿\"]],\"encodeOffsets\":[[[100771,8092]],[[102473,9817]],[[104886,12277]],[[102526,20805]]]},\"properties\":{\"name\":\"Thailand\",\"childNum\":4}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ĕÃÏÔMh^@Î_ĈW\"],[\"@@̟ɝՏȔлƳF}åÇ·ly§ù¬ʩৢÀʢǉ֞Ǭk\\\\yWCȔ± ũɜØÀ§ê«ΈƮЀqłZĐ¨~êdƊWJ©{ƗǖɕğĩĘȹȌÉɄĶ҆ǗèܟȌǹȑŹ_TċÒÑʻr÷E±ΗćăPuløÌb[ÁX©`ĽtćQƟ­˅šȧȧ࠯˧œŰćʂŲڂ}pÃAćsÏIb®ɄÝŘѧĬˋ̅ǟŵ]²ķGč¿çÍœnƏǏ_őÑÇkó~ĝ]é»µ¥Qí¨ȁƔ£RuK}Ua[]Y·T­Sʁķó£]©oo£RŧÓġnĻüÙĞÔ`ȰҊ،əɘϢοÊŘʑîÌȾʘƀشíƨʪȖÎÁŤƖ˻Þը~Ë̴Ŵǚ̚ġׂ͆̌ʿ͉˳ʀƷʲ\"]],\"encodeOffsets\":[[[72361,40812]],[[72662,41205]]]},\"properties\":{\"name\":\"Tajikistan\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@¥GקȌǭˉɃIǵQřŕ½ÕƯщŃ¯ñ˝Ǉˑŗ؛ƓƗĥțÝĹ¹ƛā͉íǿǬϿ¬ɵǔçSSȼċĠºǶýϞٹKɹ˚ԝʒŹɐСƢүcށʶƇȲمƙƙݟ{ЙɯǙʵڇŃചƏɔ̱ŎƯÛầ̰½ŋĸ^Ȯнà¢ǵșɾÏ̂Ǯ՞ǜǵЄKɈƛѐµŢ̬fǖԝϖʓԊ՝oǍıŽɝѕ̙ӤӀ̰ࣄǀ؞̵Ӥ֙Ҙt࢔·ĎòŻю˜ɢѰÈǸʢϐǁ˓ˢ˚ĦĮٞϣՌĥȧɒƛĿ\\\\̟̬ƭڎɈò΀ƵӤय઀ۅҞƷબا̞LՔɏãǛ]ƽAşXġ\"],\"encodeOffsets\":[[68119,38245]]},\"properties\":{\"name\":\"Turkmenistan\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@΄ŶƋȧȷò\"],[\"@@ěʤŞp¤ŮǱU]ĢɌʜǠÔਨĮ̆Ŧˤĝ͋ʓ౏һ˷ȣ\"],[\"@@ÇƟÓŜŔ\"]],\"encodeOffsets\":[[[127014,-9565]],[[128070,-9740]],[[128662,-8335]]]},\"properties\":{\"name\":\"Timor-Leste\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@êßőǥƀǜ¿\"],[\"@@īAĎÚ^×\"]],\"encodeOffsets\":[[[-179365,-21677]],[[-178128,-19086]]]},\"properties\":{\"name\":\"Tonga\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ݥÅ΀ǘlˮơĬ؞ĺĭƝl҇\"],\"encodeOffsets\":[[-62476,10378]]},\"properties\":{\"name\":\"Trinidad and Tobago\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ȡbpŴɮÅ»ď\"],[\"@@ŻÑŎŜnÉ\"],[\"@@ƇȅĐ֯ſǟŅŽ́ƃʛ२ÁȼĭϜׯЄȃјȡİ˽Ҟiؚ̦պȶĘèĴÛϜ״šŶͦ˄qĔतͺŴOƣĴ˒£ĆΣĴ¥բ˺ÔǕձחĪʍΎɅĮͥίҿӓͯÍȉɌ˟΄TƥȢĦʤˉ¯¹ʪÉCuǅOËKɇäıD©}¹ŭËǃõƍëƭû¯¹ƍûŏǋǛ§\"]],\"encodeOffsets\":[[[11221,34532]],[[11549,35588]],[[10522,32446]]]},\"properties\":{\"name\":\"Tunisia\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ʩ@ɀĐªď\"],[\"@@N£ʂ͙ŷȥĆ̗ԼïД˱¤«ȕĲṶ̈̄̅ȾғvϙŶ©ȧΩ͈ǓaɳȄŧ{ůp½PÁFǡıÛ¡JÎNŴa hďXƩùƇHӫŠŽƋ SėĥƯķągĸ iL^Qěéơ£঳·ɉõιƷˣñƹŧkȽAǛ^şCӗǬʇěƽ§ǑÅóğHŝRķEã¦²ƑıT}qÛ§ǏQ£Ċȉɕ¿yƗũÅ¡ĕuCƇà×Nçͦ͆̊ŝɄտ˯׃ȰࡑՓݳūΕŰ̗֛̐ɠשÄǕԃٍħϹƘɇ֑͠ĆʇƫÆİՋҪĴȦǔࠕ©ŲȠϻдƀÊRɈ߉ʢŴ̪ȞʱЂĮȥ~ťȒɂƬǗØżƟƪǼɎډçWĐäΞҴΈҠ²ǆŕɆRĶ¬ĭĎŤĬowĵ࢜jȁŦƞĆݠŊءƬʄᄚħǠǲ܊Έࣚʎ଴½ɌĚŰŗƦƋɖāв¢̖΁̺öʎƯ૆ɓ࢜ƶ۶ũیʦ˦ƌĄĀǈà}QĒÂҒ±ĎĴpXbPÚNÔM]ÑîsŴĩüng}mXy¬Ȓ\"],[\"@@ҐnƸΑܠ˗čȅڅÔ֡ěȭʉУǃӍΟ¨ȪҐʾֽ_ÉĮʘȒAʆʚƎǘɕĬîŶtÐ~¨dɨvêƶd¨b¨[ưŏ\"]],\"encodeOffsets\":[[[26594,41100]],[[44476,42144]],[[28135,42954]]]},\"properties\":{\"name\":\"Turkey\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ĝʮʌǏ˟\"],[\"@@ÜǳûÇʣʀńϚǀϝ\"],[\"@@īҍđÚvψǈl\"],[\"@@Ḯ႗ϝപ৏ΕୃÎɗ֠׉ɏгCɧŢsZǕŗεŮнǄȿìڵبϵЋ̙ƟûۡɉзȷӑĴǏʉƷāƙͥŦ֡ŝī_¾ýÒƝêŁDŻŉÉgũfȡRȉGmĬÎĭ¬ƓɖºʎćҪȽђ˙Ȥęƥ߿ɚƏîہɦqĦhËjŧMįĔěŶć ɱIĝ¼ÛÞ½öğʀ˃զÿɎčƔęĺŧĦƍĤõÚĳȈ¥äŢuŮVºĘǄV¬YÔ©ŶǙѢeìDÂà˶A ˆKȔŰϠպ͈͠jƄ}ŎÑPėõd¹rmfQ¨¤ň£¬dzüǀhvFÂp¸T OÈvÖlĺWĊÞKͼ§Ė©¾ß|ĽƆÞN¢bTHŸXÎÊZ^GlG౶@ಀ@\"]],\"encodeOffsets\":[[[40665,-8168]],[[40445,-6322]],[[40822,-5023]],[[34717,-1026]]]},\"properties\":{\"name\":\"Tanzania\",\"childNum\":4}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@BµF«WίͩĕŔȽ«ŠతǼʹRː઺਎ÛȎϓƼİ͢ûǎŸ̰Ëè˂ʜͪĝɂŀ˴ʁǘƾ֌ƤаĿâ´ƢƢȠȢƀ˥®gk³ĒãłHǋP¯ǍϪַm¿æ̗ZǙAţƫЋˇǝÑƥȿəǽγধ౿@౷@iF]JÉYÍÕeáNSG\"],\"encodeOffsets\":[[31243,-1092]]},\"properties\":{\"name\":\"Uganda\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Ś£ӯĒ¯Įцƛ\"],[\"@@֝aؽ̡ȡ¤؛śڿѥɠƤ¥Ɗ͉ɁƢЩκ͓״Řͼ¹Ƴ˟ѭ¹ͯþ͓ʝԯåһ˫ϫƔĖҜ࢟ʲঀҘÏŲƏȑİ؍ûթǖƪŰϟľڲáǼŠ҃vʇӐĨҿ˹^ĦƇůԙÛӝֻӹŧÞϱřĢƏ¤Ʊaˡħĥj]ol˱ªő°ėĔ¬^Ǆh^°mþÐÐĘ¶¾¸TîĢĊÒrÞ¤¿Ħ[ÖEÀǀÌE^eHŁhEȠÞ͈ēTǔd²ǧĬVðPČq¸ʱŖĭˠˏǔSЌםƶéEړˬˏę˟@­`ǧýkƩ}ɻȥɇsȁȋkСƽͳǨߙÄȁKǥĂÁFəŝěƌƽrˡɰķCVƎŸİĀǀŔƄ^ʸRšø³̰¶Êˤʘ֦ДɖĲĸHðćǊČÂγπ§ǸþĮîGÖ[ðxLŰÖźĢèþத²ࠨŷƮaĸNÌQżŽͦqTāƆĪ֢}Êg¤ïcKĲĜàl¨Tx¢vDȴȵۄĄʐǡƶæiªSÄ¼yÄ¨þìŀôæú¶ŔĀȦHņ°ȒFǄM̠§ˀɎદ֎ӃɵďþΣ܌©ȼƇɼ֥ѴцǗڬǞԾЭǲŎֈȑɎԘʅʦJz˙Ρȱˊƽǯ[ŭǻǆ£ĺɯƭ͍݇ѿȵŻѥ\"]],\"encodeOffsets\":[[[32781,47313]],[[39132,48222]]]},\"properties\":{\"name\":\"Ukraine\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@½ɤĄĴĤ¾öJÌ´Õ˴mxfÈĸʎΦ˹Ά͝gŻ\\\\óŌTȸǲrNs͒͹è²ϖǥ̵̰Ϫǝƈ̃А˫õëăęíéó·{g¿@ПƊñ£«Ï¿Ɨǩțŋ͏ʑ؝ə٫ƂӛĿޝϖօqӏӄؘʀʎŘǆĂàŴHÖÂYÈjÊGÄyÀlªŀĔìǆjàŠȄrücƖÚà\"],\"encodeOffsets\":[[-59198,-31599]]},\"properties\":{\"name\":\"Uruguay\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ʥ¸ƕ֮ȔɞWɘՐɿͨЁٷљ\"],[\"@@Ľ_ÝžƜOō\"],[\"@@ǬhʎǍΙŷÑǒǽŮĦðĊđ\"],[\"@@т»ŭĉα´ÞĒ\"],[\"@@ƐűЋXƍɢʼĮƎȵ\"],[\"@@ȣmƱŎǮƴȒGiʋ\"],[\"@@ýMǨ¤ĩ\"],[\"@@Ǖƿ˖ͤĿǣ\"],[\"@@ș֊`͂Ǻࢋ\"],[\"@@b×ɡժɀӑ\"],[\"@@ǳĠŌèş\"],[\"@@ǫU͊ČƝõ\"],[\"@@ıkƂĘë\"],[\"@@¨ÕůJĽŮȆá\"],[\"@@ǩĄưZzĝ\"],[\"@@˪©ɓ»ÕĦ\"],[\"@@ũeź¶Ьˏãǫ\"],[\"@@įŵŦǼuÅ\"],[\"@@ÏÃ֬Şઓ΁ۑÓŖǮʲņߖÔ̐Ɗȣƕ\"],[\"@@ɉlǈĢÂō\"],[\"@@ˍcǶĊĘå\"],[\"@@ĕmĪƺSƋ\"],[\"@@ȋĦƌĦĽ\"],[\"@@ĭpŌþÿ\"],[\"@@Ǆȝ̝ʪĨƆð÷ŻÅľÓ\"],[\"@@úśüķ٦ŕŨåˤúĴXΠ»˰ŏðƃÈ@˾tԲȳ̀ŖǠNÍૼœࣞʴՔȯҊǳ҈ǱࡪΓӨȫǎãǮ̙ȌˊHŪΗ̦ŬĹĻƫ֢ʣ̲ƝÈɛ̆ౙ©ą̗܋Ӄ̽ɱϞʧɂ@ϸǶϼǶЖŨپĲࣘ͐ɐƈÅÔöę̢Ɯ¼Ƃ´ŀɘNܦEٶ@ՒԪ̰ȎΘʮͼǖȠ|ĊJᥬFǄʄϴgӌՔʐڬٞيǊĨǷלŔήɛJଗ̴ĽÈίȰGŚ˻ǡŷկĉǽǉāĲʣJçȽɻæ¦Țϵӫʛ÷ðÇđ{ĨŽȅƁêǵõҭבăȳǺǝηʕʶđˀЅΦÎȩɞŎYŌį|ʅשţưϽȋhɌĹÃĳĪŏΓ୵ÿࢿ҅Ĭʮĉǎ˭˱͕ʖŇěԣ^Ǣؕ࠭Ƈ©¶ǐՃ̂Đʦ̊ǎ˝ŷƽǅǐҡʮ˅ĉƽŰƑݩੱȸˆҲǇdO͠ǉçǵƀBƐȺtǑŐŅ£ƢŦƉČǎŊčĠêļɸ¼ŅŌĎïØˋə­æ÷ƭųŦţŋ½ƐבʃȲR×˞ϙѵʬmćģŸșǞКȕʏYȻȐJڂϵãǽůNԱОҾзȴćǷř|«ĥʭȚЊϟį»ȗȘԳĜӠſƺɵШ`Ϻࣿ΍۸ƹƢ̣˟ƔCŏķ×˧čƥǶPɫրZ[ɻȖɨĂį]ǑͱʗˇóŖƏďʡĆѶɏɟɻʓƐĂŉȘëʎ¤Ă­ßýܙȫĭņǡ̷ȯƫ́sȖ¹ɏͣLλǋ̑Еƈ¥ɧѻ̇ŅnOţΟƕɫXƈ÷ėœȇƈĞțΙ˱ ùǋȽìMǥƭþõŹÃ×ͭɢࡑ؎વ½ǵň̷ŹɶF̄ñƫJȞűƮǿזೕÛࠋ̝ԓՁûsƠǐơĔɁ϶̍ŶȱюŊǔǯœvΆȕĥǕǰɯτʸ̨ɧĎÄƽōÉčŘǈ࢔ࢗ࢐̋ƬɟÕƁ޻ȑāò@ÚĊëİ˓ȸÔƒŵĵחȜ˦NőòߍŹǺüWŜơġǗǏxČƣŇ͑Ǻ¼ȃ͸Ľ˝٧¤ΓÏɣƯҋǠǥùåřȦģπŦÖ±ųğƸēȘŤ ȏ̯ǙפΕŝƻãÄşčÇǴ׹̀ĘǛƅșƕǆ̹ƏҏƂŞ|ćȸɟQ͇ʀȯŗ¨ęƩޏȆյ­]Ɋ£ʓܳʯȞƐɃAǞɿŔ˧͕Ϳ߯ЍȊŦοǇĪȀɁɉĭćäÅȏˉ§`éĚĝ̝ůŤƕų˻ˡňÚƛǪ¥ÍɩĴЙʐѱȕ÷ปӚ̉Ԣ£ЮړټϩܖֻԂۡẴĳɷ҉ɵǽ߉͚ͥʔЋࠀঙڰʡˊ๟XEϙᛟIẗসĢǨ፹Ƴ˵٘ԧΪˣlăɰՙĂϱʴܿ¬ƏĞ[ҘǕòǺ͑ɂӿռÐѪӳ̚ĕˮ®Ɍ̀ˏ˃МÒ ڐ¤ܱöŅˋΉȔÇÇúǪڗװōܲѱԂʈࣶϽଔ݈͠Ȃཔ»դ٨ÅȵİԛRz˚Ċơ´ȒȉǠɨĎɥÔwåȥעʉˆ¡΀ؠǱࡄāǐÂĺɋĹţ°ˉ΁ǼlŧOfâѠφţʳĈˍǅÙ»ĲǗǓ˜ÿɖ¡ΎƈȐɳŰĞŒɕƠƢaƐ£ĞĽb¸ÇŞ୎@෤@Ϊ@Ψ@ܒ@੼@。@。@　@੼@ܒ@Ϊ@ܒ@ȤAN͆ʨÅM¶ɋ\"],[\"@@Á¹ÁĜń¡\"],[\"@@ƯnÔüƳŜѲÛȡƩ\"],[\"@@ѭ_ҼȔǳ\"],[\"@@Šŋёōɚ͎Ęĳ\"],[\"@@ȉØļ¨ĎĿ\"],[\"@@ƑjΚǚɇȃ\"],[\"@@Ѿ³ڿƁÚτZ\"],[\"@@ŽBŲĬƀ·ųµ\"],[\"@@ԱYࠪǎŇĎɢĔļ«Ùțҳč\"],[\"@@ˏ̼ú«ŕ\"],[\"@@ԾƉсċυƼˊÚ\"],[\"@@िћͲͪʺ´þǼϮPŗƍ\"],[\"@@ȲĈŢÅ˃ǧǆ«зȃޯŷըȐĶƠǨ«ÊÊ̩ČÌň̪Ä¶ė\"],[\"@@ǹa}Ĭǎǚęů{\"],[\"@@VŰŤóŹ»\"],[\"@@ŕìƜ¬ŗ\"],[\"@@ĆƑʞūɱÈ௹ˇÁǂ΄ʤ֠Ť˦Ë\"],[\"@@đāÔƚ~×\"],[\"@@TǇəŚvȨȐƹ\"],[\"@@̕ǥ°ǚʈŴ^ŧ\"],[\"@@ȴCóǩ؉Զ˨ùȢˍ\"],[\"@@[ßƣØǀH\"],[\"@@ŎÆÆǏʵÒɔ÷\"],[\"@@́ɱñȒδ \"],[\"@@ƟRŦĂzē\"],[\"@@ǫʁɓǞ˃ȱëɂȆΒ̘ľɬȑfȩ\"],[\"@@̨gĚȕоǏΦΏ˵ĨĵķǶTǰɑȘ_õеࢭԪƈÌÙǌիǐςŖŉĬ̷Ñǲƴǌ\"],[\"@@ɉĀŐĦɮųƏ\"],[\"@@iƓŻ[̹ŲɾΜˀɇŕ\"],[\"@@ħ²ǰćó\"],[\"@@ʀƃ£Ļø\"],[\"@@ǛĘȒɲǿƭ¥\"],[\"@@ɂǍǯѯȫ§Ę͊ʏ͎ȘĀźñ\"],[\"@@̶ÕɅÙ³ʙǬƞ˫˛еҶԦK\"],[\"@@̯ÓöŐ̈́ĉy\"],[\"@@̌Տ½уʣʬĈƈϓŤŌǤɉȈ̛ȫUɬ̾ɈДƷ\"],[\"@@ЀD­ĹɢŃǑĹѹɘŹԁĳϫƣøû͓ƵȠǲϙźăȇ˫ѴҶǤά̃ŹҶ̔ōɪÄ´ƪʼÙ¡Õ\"],[\"@@İɅɢŐ͢ğ_Ǖ̱¡̠¢ȱՏƼŅȷǿvփѴȺȺƬķ¦Č̪ \"],[\"@@φcΖџЁΔ͌׉ԕʹ|τνܼȲǋ\"],[\"@@ϊ¥āōǗÖįʏzˣƙϟĀ;ǮǢeÍŚΦ³\"],[\"@@ų´Ȭà÷œ\"],[\"@@ǱüΔńǡǿ\"],[\"@@ȿWǊĊ¶ñ\"],[\"@@ŌӲΐƊs׹ѧ\"],[\"@@;ÍŚͳҳűࠫȴʟǖԌV̢ƒ˺B\"],[\"@@ʖѡřëŔʸ\"],[\"@@ŇɭēĸȜŶ\"],[\"@@іƃͻ|ΉȪʰġ\"],[\"@@ή¯آĂضʳ۴¿ćԓʽǷţƔࡻ˔ڃÿī̐ʄ¿\"],[\"@@@݁@௯@݃@௯@݃@௯@݃@ӫȪȦÖæЖĭʠŪψVžH@Áµě¡õˈřҨ˭،͓ÔʻèYƊîŶ¬˂ĠȠDĦʶǂjŀԴľˮ^ˈƑĜʑɢõʆǅÂÍĤ÷֠̅ɬɽɰɱϜϗĜýŢŋÎÝ¡­·ÅƴŀkÕąȨÃǝ̒ۖʗƠÂĝˆ[ìƃǙޥ̣ɋɱǓ̌ʤƈ͇դĂņفǱǗ˻ơÄ©ż̨΀ʘ ˱ʙƮգՖաĮƵЂ҂ÛΙɢ˺̩ ƍãʷȒżϒ˧ʇӉȄӳߺśǻΌߧЙƔ˛WũΠǼÜǅqŏƦÛʃٙɨÏƉϐÃŊǇɒ_Ɛűҟǫ޽˴ࠃӬ੏̤ɔƞBɌȎ˽ÆǬȞ`ϋƪࠧʩࠩǊ@Ǹɗŭੳń৛åŔ׹ƺǮˬҵʏճĈȊƢݩàƮèȷðƀ˄ºങȇĩàɈɂӹƅCǥǱwʦŵ͑ƻѪîž÷ϻзۯTŅĜǟ˯ĭŲñƳǡ ǉǽ΅G˝ˁȽ¨үģǱÜÆĸРŊ̔Ɍ͹Ĺ͹ŎϨвϖޒʨମŭࠓʜԶˢҗȃՕl࠙ˑߓ׷П~̬ʡҩŽĲŏҹ¿ѳЭٔǑgǣ܍ϙŧٕť٩ϕփǩǋ̋ງӗřĻɶįȓőñĺǕǓ؝ƩŗƹģǺؓʭݏƓ½ŢȰ~˅ÚҳЕʿñȳǎȿǅɉĢWůǡÝ´ʂ̺Ø৬װМĪˈwęęǞŏĆĮΒÅȻǜȦʶ୒ӌȲó^ȶ˸ɒЌȖ͒kȟƢð̺ΖŤʛºƘҤ˄ƔͰ˩ɍࢣɛʿȤàŲ̂m˻ĦɋƇŋj҃Ƌ؁ьȿùωȚݑɃĩŉڅsΞŴäˆ˱ŸϊӽאϬΌ؇ΩĪɻटǁϳĄݑԔ˝Ҥ̎Фķ­ƭ̼ƤɨƧʸƖСĆː¤ƍÈȵĕवÌȸƮΉ¶LĘʕơʡȞfǜʵT_Ė̠ɧĜϺÈāȘњ̼ξpƚǴǟïMʜΒĦqƺϺ˜ĹķğȞøǼ¹֔Ȃ˶ɚʸÛܾĘ˒ɖǫζхƶҸŨÜƪɱƜՇğࢡχͫɸºȓӍƒ੟œএň˳ŪÆǖљȘ٬ňਹŘֹȢහФ٦Yũǀ૆ɨ۔[ɋBŝ̡˴ō๘ДȪΞýïŪڝÞՃͦƴŤ٪ЧଠŇǊх¶҅ıϫŰŘːຽèӿшᖉن΀ÆƞϮঔEনżဤજǉƛࣞŤ݊ʌɂʿ¨Ȁάx׍ĢʹŶ̮üÂŉૼĤ௄Ң@ĭݠƝӉǉƤïڴɎࠆʡ߲Ōذ§ɐÑƓǃՊ»Ƨĝᖨ¤ೂʃཐµՀŵဖĞіéદ͉;E@݃\"]],\"encodeOffsets\":[[[-159315,19469]],[[-160613,21272]],[[-160242,21435]],[[-160986,21725]],[[-161586,21972]],[[-163197,22459]],[[-82989,25311]],[[-82311,25746]],[[-99502,26788]],[[-82111,27934]],[[-93996,30209]],[[-86945,30355]],[[-91365,30807]],[[-121188,34187]],[[-122924,34733]],[[-122759,34898]],[[-77357,36086]],[[-75912,40634]],[[-74250,41970]],[[-71657,42256]],[[-72202,42370]],[[-72951,42488]],[[-69823,45397]],[[-125331,48533]],[[-125514,49313]],[[-97078,50179]],[[-180517,53036]],[[-182148,52890]],[[-181399,52958]],[[-180831,53112]],[[184042,53152]],[[181674,53128]],[[-177718,53388]],[[-176603,53527]],[[-178869,53284]],[[177893,53617]],[[176960,54286]],[[-171995,54626]],[[-170614,55195]],[[-169821,55369]],[[-169534,55436]],[[-166193,56164]],[[-167399,56301]],[[-163343,56476]],[[-134491,56402]],[[-163709,56452]],[[-136050,56212]],[[-164177,56666]],[[-164541,56643]],[[-136504,56877]],[[-159299,57161]],[[-134122,56821]],[[-136771,57692]],[[-135966,57598]],[[-135283,57456]],[[-157909,57872]],[[-173829,57995]],[[-135932,57883]],[[-137205,58210]],[[-136567,58372]],[[-156679,58496]],[[-138209,58728]],[[-156567,59212]],[[-138987,59643]],[[-137912,59558]],[[-156074,59761]],[[-156145,59889]],[[-164781,59983]],[[-151574,61507]],[[-151281,61249]],[[-170122,61833]],[[-149907,61901]],[[-151202,61902]],[[-176888,61909]],[[-175578,65168]],[[-144386,70425]]]},\"properties\":{\"name\":\"United States\",\"childNum\":76}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@§QûD«TæBbëĄÂfE´ÍŰmſ\"],[\"@@d´fĂèhiGo࢟ӹҬƝńƧɀÓǂ@Ā{`ZZǦƺt¸Ƥó´s]ÆđjĭäOĀmÂn¤[b¯LývWŴ|ʜƣЊѹʫǝªYųɏXρʋ͛Ŕˁ_ʱɿƸ͊˴̋ˀׁ̙ͅĢųǙÌ̳է}˼ÝƕÂţȕÍƧʩسîʗſËȽʒí ŗπÉϡɚɗ҉؋_ȯÓMx«xýI÷ÙQĹ£ĽtŃČȭʱoWĢBŠ^ƾäǜՓɐ̝KફبҝƸ੿ۆӣरͿƶɇñڍ̫Ʈ[̠ŀɑƜȨՋĦٝϤĥĭ˙˔ˡϏǂǷʡѯÇ˛ɡżэčñ࢓¸AᶢᓢҼᏠউࠜݷৼŘਢÝϴƎӺͻʴεʠĨùࠡЪUǰۅਐdƪƗÅȁȴŹʀXɈӎҤຘۖ\"]],\"encodeOffsets\":[[[72916,40850]],[[72650,43263]]]},\"properties\":{\"name\":\"Uzbekistan\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÿŊňÒǛ\"],\"encodeOffsets\":[[-62642,13474]]},\"properties\":{\"name\":\"St. Vin. and Gren.\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Ñäźļ®ķŕç\"],[\"@@ķǦĈíÅ\"],[\"@@ËȳСĂǄĖƺíưŊ\"],[\"@@|SwÌǷͯΏɷeғˏ˧ĉɏ¸ʩśŧΥЙַ̎]Ɲǔ͑\\\\ǱŖĴɛϖΥƦ࣭ւùɋӛȋǑ͵ݱΟ̳ΕéEžƃŠ͇ǕʋeѻϦ˫খ΃ͺȫ@ҢԺ̍ϖǋզ~ٚ̎ֈOɀ̓ĠԧŏߣםۤԛŘ͡ē݅Ǜ˴ɝźèٚɳ˺ŋКɗŴʵÅ̠ԄŘמừψ̤ʒЂ՜ǐ՗ʕĸ͉ǌƩõeŘ˱ѥۻв٣͆Ħƀǀ̜ω۞tδਤ΄ŖŮʖWǖ́¡ÿɘìǲǖä̼וڮ¡ήɫĒЅƀǑཤŞͪ̿؈ƿɼz֌̠Ϧџ§þ᎚ĘсǍ҃]Ȓȯ¯ȝǆŨȖΗČČÊ»CƂâG˺˿}ƶƬäڞ҃ȗǥȋү̷E˄ƽцƴՒrŴÉƼȱcµĭ³s}ĝЗȫǣɷĤǷuğ¦±¼W¶nÖC ]h_H}÷³˕ƫΫÕµęnÙ~ÇA½pƝÅßãóġ^ǬțǶȥǲȡ\"]],\"encodeOffsets\":[[[-62461,9081]],[[-62280,9358]],[[-65381,11399]],[[-62199,5327]]]},\"properties\":{\"name\":\"Venezuela\",\"childNum\":4}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ƽʷ£ļþ\"],\"encodeOffsets\":[[-66320,18222]]},\"properties\":{\"name\":\"U.S. Virgin Is.\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@̥ƙ˼Ǹj\"],[\"@@ĹmŸŊ}ě\"],[\"@@ǗĽÔƨń©\"],[\"@@ҿȉ±ȕǃęЙªÐɟǟǩnœӵϟ̥ࠇɢϵԢұgȑĝx௴ணǒRڔߟМ౫ӝŸ˗j̗ğŶĭėðɉĉrOׅƅŏ«ɋݡσÿƩث˓ɉɚ·ɕȃŖķÏŖi`űʗF˒Ƴǅɍϫ̦άэãſչψˠͿTǓ֗ʭ͕ϵ́łŲÝ²vڮȪ͞ʁǨśȥȮΤļǒƖAǮɨÇúĚ̌ĈŁʼÍEȲʯɎI˺žļͤÑ^ɘʊ~њ˚ƲĨĖ֔Ŋ΂ɯׂǀӠIĨV®iqÄÚÞ¾ÒhÆ°µæĕØķĂ·¸ĩƸpƠê~HüϹʺĲeV©éġƄYƜO²oÞțɜɛǖ˃˔ēȸÏĀ¹Ü˿Ʉwú¶ĶD੉ռHtĄ°ÀWæêfzFǔNʊ×PžŖ¶è\\\\ÊĨĪBÄòűFkh_ÂIĹĕVqbÒ®t¨üȟƤŻþÿϹȽƟêɅ¼ęªȁʼÂĊΒĕ®{ÔcQwõÝCáȔϣЌ¤¼ªƜȮÄіʫ̂˔ƔƳņǌ˒ȭǜɔȔąˆĲƬ˄ΊǬӊΡʰ¢Ōĥɚ¨ȨŉȕɷĨѭʶ¯͊˅΄Ǵū\"]],\"encodeOffsets\":[[[106562,10641]],[[110102,21429]],[[110186,21727]],[[110564,22025]]]},\"properties\":{\"name\":\"Vietnam\",\"childNum\":4}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ŧéŉŮ~ŌȴǏ\"],[\"@@̇Ì|ȒņZǆʷ\"],[\"@@ŞŹ»đ̭ôĪƄƢT\"],[\"@@ɟsƖʾš\"],[\"@@̯ĜȠŮŐɉ\"],[\"@@Τ̓͗ėčʹǓØ¢ǐŖÞƯ\"],[\"@@ȥ_ˠƚùŹ\"],[\"@@Ä˥ɠȆŀэęř˯§ŃȎÁٜƬƹ\"],[\"@@ŻgĈĄ²àĳ\"],[\"@@ąĲöâPǓ\"]],\"encodeOffsets\":[[[173560,-20009]],[[173399,-19394]],[[172489,-17963]],[[172490,-17181]],[[172336,-16728]],[[171431,-16482]],[[171942,-15806]],[[170748,-15182]],[[171607,-14603]],[[171509,-14240]]]},\"properties\":{\"name\":\"Vanuatu\",\"childNum\":10}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ϧœŨϊmŲƕ\"],[\"@@ƀȁ¡ĳʻZȱɲϐª\"]],\"encodeOffsets\":[[[-175569,-14383]],[[-176469,-13788]]]},\"properties\":{\"name\":\"Samoa\",\"childNum\":2}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Τv˘ġ͍ǉ·͹ǶȀƶȔß\"],[\"@@ÇĖþ½\"],[\"@@ÿÌºtą\"],[\"@@ُ̕Ź˱ʧݧίဇӳֳӳ֭Cӧ͗ԳǑोŃԳѭΝBԥǫ̷Řūɋӌ¨ΨǋˌŹެãǎǕČŢĀçˠĺ̈́˸̬ˊv֜ȒƂмǇਚĒ͚Ŀ৊ȼʽƖMʤƒŚ˲ӾתܶΦូΒजጉ\"]],\"encodeOffsets\":[[[55054,12941]],[[43783,14034]],[[43815,14307]],[[54360,17048]]]},\"properties\":{\"name\":\"Yemen\",\"childNum\":4}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ɡǘÐÊę\"],[\"@@ƾӋÃ౑ӯǶŅóĳřʇεH̹ÜM°ĻŀǓǰŁǐ³ɰ]ǺHYŐlǴxŤ~NôyòLźyΤVĠD̏଍ȽΟߙٍ଩࿋౫ફହݫկȧԻnșʣӑ¾ƩǏșIݭƴίõ׵Òʷ·ϧʭੑùё˓؇ƞĺțŤɡ[áʀɃuȧğƄæІӧݞĪĴƆǜȴīٚܧઢͭ࢔ǭͨʕ͢ʶƒ¶nŌü¶¶ļŎďƞŗöέܨǁ܎«ìÊƚȐƄφļ@Ţ@ᲄϜ̵̦٥ŷ۝ĊęߤP¨ĆȈØä²łǈɈƜÞ¦ɾ֦ɪƚȬEъʹÚsȊMŚğݐ[ʰĀͦޒĶČɠ¶°͒˼ɀ֎ֶήͮΐՊǴĘðÊĮİÆȠhZBʈ Ȭʎěɨɂ̦Uļú³ɐࣣɈ·\",\"@@Ɯ˳͞ˑʮÒĚɜ̈́ɊlϜǨȀŶŒ²ŀĺíȖ֧ђYģkȩïůßĿÿȉÇχӡȥęŘ˅\"]],\"encodeOffsets\":[[[38766,-48070]],[[32563,-24465],[27847,-30659]]]},\"properties\":{\"name\":\"South Africa\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĐŽĐđ[ûuëǾǓRį`ĞƋ̳ʣòʱģȷ[Mįàſ©ΟôǏƠҋ̓Oѯʟ̫ńĉƸˏƖÌ®Ó᠁ࠑƐշޅ­ӗʓŷҙ̩۟މࢿȭéϑĦ˳إƪɍȌɥ¨ϩݧƇঽ࡚ǵ֢A౞@˒@˒@ڠȘ@൒@ĶZåǄH²pĜØފcܔͲɑXʋފǤ¼Ή֪ɡڢÙˮ͖Βխ۶ʓŜˋƮõʆϋǀ{̒ŲȄǃjંʋÓmǅΟÎӥҌċȶɘࡢܸǟϢЀτzʦ༔ʖâǇ¾õÜÝĞ»ɰJĊð¹lûİēȶFÝlۂɥƎíÜǷŸf\"],\"encodeOffsets\":[[33944,-9834]]},\"properties\":{\"name\":\"Zambia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ǵḀ̄TɁ}ɩʍĜȩʇYA¥ßàǍ¾aȄࡗȲ́ЬTҼͯrđ͆ࡓӀȕԌבࠂ`ƨئƩ˴ϒĥȮêފࣀ̪۠ŸҚӘʔކ®̑ڢyעͽࡐʃÑƝĮఏʗӥŴƍÓʇǸԃп֥śЏÜƉࡁࡃšđ\"],\"encodeOffsets\":[[32039,-22939]]},\"properties\":{\"name\":\"Zimbabwe\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ڽը¿ުەߖ٬֖NΦxHޠцǒŴ\\\\ǔéº`Ęfú[ǜ¹~}¢ũYĨĀcĖÌ£¢áfÁnÛ½˩ƄÇÞŻ~eÖBŒvİ¤RXĩÌĄ§a÷Îŕ÷ĸȣ¡ıǽûsmQ}«»ď§řjʅõōDđ³Û«ŷ³அɘŅĭāuƕɳ`«Ī¢§NÙéõʠ{ɩɥƤǵšɇ\"],\"encodeOffsets\":[[75785,34052]]},\"properties\":{\"name\":\"\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@͙̄͟ƹիԠύfʛϋӻýģлʫ@˭ƪǕIđmɜ\\\\cȝ`¥CƴˁȖƈʊƣǶɪɦʟ|öÜêO¡¨ĩ_¬ƖɴĂxĮņஆɗŸ´Ü¬Ĕ´ŌCʆöŚiĐ¨®¼P~tnǾü~Ðd¢̀ǊŰÜŀÄĒ¬Ȳ_́êǁƘ˹ҎǹÒĽȱǷ´ǡæͅìíƐĵn­ĵ§rчɃŝƑŢa¸ȵw\"]],\"encodeOffsets\":[[[80376,33312]]]},\"properties\":{\"name\":\"\",\"childNum\":1}}],\"UTF8Encoding\":true});}));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'singleAxis',\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/single/SingleAxis}\n   */\n  axis: null,\n\n  /**\n   * @type {module:echarts/coord/single/Single}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this;\n  }\n});\nvar defaultOption = {\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  type: 'value',\n  position: 'bottom',\n  orient: 'horizontal',\n  axisLine: {\n    show: true,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    }\n  },\n  // Single coordinate system and single axis is the,\n  // which is used as the parent tooltip model.\n  // same model, so we set default tooltip show as true.\n  tooltip: {\n    show: true\n  },\n  axisTick: {\n    show: true,\n    length: 6,\n    lineStyle: {\n      width: 2\n    }\n  },\n  axisLabel: {\n    show: true,\n    interval: 'auto'\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      type: 'dashed',\n      opacity: 0.2\n    }\n  }\n};\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar Group = _graphic.Group;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar SymbolClz = require(\"./Symbol\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Symbol with ripple effect\n * @module echarts/chart/helper/EffectSymbol\n */\nvar EFFECT_RIPPLE_NUMBER = 3;\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nfunction updateRipplePath(rippleGroup, effectCfg) {\n  rippleGroup.eachChild(function (ripplePath) {\n    ripplePath.attr({\n      z: effectCfg.z,\n      zlevel: effectCfg.zlevel,\n      style: {\n        stroke: effectCfg.brushType === 'stroke' ? effectCfg.color : null,\n        fill: effectCfg.brushType === 'fill' ? effectCfg.color : null\n      }\n    });\n  });\n}\n/**\n * @constructor\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction EffectSymbol(data, idx) {\n  Group.call(this);\n  var symbol = new SymbolClz(data, idx);\n  var rippleGroup = new Group();\n  this.add(symbol);\n  this.add(rippleGroup);\n\n  rippleGroup.beforeUpdate = function () {\n    this.attr(symbol.getScale());\n  };\n\n  this.updateData(data, idx);\n}\n\nvar effectSymbolProto = EffectSymbol.prototype;\n\neffectSymbolProto.stopEffectAnimation = function () {\n  this.childAt(1).removeAll();\n};\n\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\n  var symbolType = effectCfg.symbolType;\n  var color = effectCfg.color;\n  var rippleGroup = this.childAt(1);\n\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\n    // var ripplePath = createSymbol(\n    //     symbolType, -0.5, -0.5, 1, 1, color\n    // );\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4136.\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\n    ripplePath.attr({\n      style: {\n        strokeNoScale: true\n      },\n      z2: 99,\n      silent: true,\n      scale: [0.5, 0.5]\n    });\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\n\n    ripplePath.animate('', true).when(effectCfg.period, {\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\n    }).delay(delay).start();\n    ripplePath.animateStyle(true).when(effectCfg.period, {\n      opacity: 0\n    }).delay(delay).start();\n    rippleGroup.add(ripplePath);\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Update effect symbol\n */\n\n\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\n  var oldEffectCfg = this._effectCfg;\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\n\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\n\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\n    var propName = DIFFICULT_PROPS[i];\n\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\n      this.stopEffectAnimation();\n      this.startEffectAnimation(effectCfg);\n      return;\n    }\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Highlight symbol\n */\n\n\neffectSymbolProto.highlight = function () {\n  this.trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\neffectSymbolProto.downplay = function () {\n  this.trigger('normal');\n};\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\neffectSymbolProto.updateData = function (data, idx) {\n  var seriesModel = data.hostModel;\n  this.childAt(0).updateData(data, idx);\n  var rippleGroup = this.childAt(1);\n  var itemModel = data.getItemModel(idx);\n  var symbolType = data.getItemVisual(idx, 'symbol');\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  var color = data.getItemVisual(idx, 'color');\n  rippleGroup.attr('scale', symbolSize);\n  rippleGroup.traverse(function (ripplePath) {\n    ripplePath.attr({\n      fill: color\n    });\n  });\n  var symbolOffset = itemModel.getShallow('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = rippleGroup.position;\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  rippleGroup.rotation = (itemModel.getShallow('symbolRotate') || 0) * Math.PI / 180 || 0;\n  var effectCfg = {};\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\n  effectCfg.effectOffset = idx / data.count();\n  effectCfg.z = itemModel.getShallow('z') || 0;\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\n  effectCfg.symbolType = symbolType;\n  effectCfg.color = color;\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (effectCfg.showEffectOn === 'render') {\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\n    this._effectCfg = effectCfg;\n  } else {\n    // Not keep old effect config\n    this._effectCfg = null;\n    this.stopEffectAnimation();\n    var symbol = this.childAt(0);\n\n    var onEmphasis = function () {\n      symbol.highlight();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.startEffectAnimation(effectCfg);\n      }\n    };\n\n    var onNormal = function () {\n      symbol.downplay();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.stopEffectAnimation();\n      }\n    };\n\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\n  }\n\n  this._effectCfg = effectCfg;\n};\n\neffectSymbolProto.fadeOut = function (cb) {\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  cb && cb();\n};\n\nzrUtil.inherits(EffectSymbol, Group);\nvar _default = EffectSymbol;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _parseSVG = require(\"zrender/lib/tool/parseSVG\");\n\nvar parseSVG = _parseSVG.parseSVG;\nvar makeViewBoxTransform = _parseSVG.makeViewBoxTransform;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar createHashMap = _util.createHashMap;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar _default = {\n  /**\n   * @param {string} mapName\n   * @param {Object} mapRecord {specialAreas, geoJSON}\n   * @return {Object} {root, boundingRect}\n   */\n  load: function (mapName, mapRecord) {\n    var originRoot = inner(mapRecord).originRoot;\n\n    if (originRoot) {\n      return {\n        root: originRoot,\n        boundingRect: inner(mapRecord).boundingRect\n      };\n    }\n\n    var graphic = buildGraphic(mapRecord);\n    inner(mapRecord).originRoot = graphic.root;\n    inner(mapRecord).boundingRect = graphic.boundingRect;\n    return graphic;\n  },\n  makeGraphic: function (mapName, mapRecord, hostKey) {\n    // For performance consideration (in large SVG), graphic only maked\n    // when necessary and reuse them according to hostKey.\n    var field = inner(mapRecord);\n    var rootMap = field.rootMap || (field.rootMap = createHashMap());\n    var root = rootMap.get(hostKey);\n\n    if (root) {\n      return root;\n    }\n\n    var originRoot = field.originRoot;\n    var boundingRect = field.boundingRect; // For performance, if originRoot is not used by a view,\n    // assign it to a view, but not reproduce graphic elements.\n\n    if (!field.originRootHostKey) {\n      field.originRootHostKey = hostKey;\n      root = originRoot;\n    } else {\n      root = buildGraphic(mapRecord, boundingRect).root;\n    }\n\n    return rootMap.set(hostKey, root);\n  },\n  removeGraphic: function (mapName, mapRecord, hostKey) {\n    var field = inner(mapRecord);\n    var rootMap = field.rootMap;\n    rootMap && rootMap.removeKey(hostKey);\n\n    if (hostKey === field.originRootHostKey) {\n      field.originRootHostKey = null;\n    }\n  }\n};\n\nfunction buildGraphic(mapRecord, boundingRect) {\n  var svgXML = mapRecord.svgXML;\n  var result;\n  var root;\n\n  try {\n    result = svgXML && parseSVG(svgXML, {\n      ignoreViewBox: true,\n      ignoreRootClip: true\n    }) || {};\n    root = result.root;\n    assert(root != null);\n  } catch (e) {\n    throw new Error('Invalid svg format\\n' + e.message);\n  }\n\n  var svgWidth = result.width;\n  var svgHeight = result.height;\n  var viewBoxRect = result.viewBoxRect;\n\n  if (!boundingRect) {\n    boundingRect = svgWidth == null || svgHeight == null ? // If svg width / height not specified, calculate\n    // bounding rect as the width / height\n    root.getBoundingRect() : new BoundingRect(0, 0, 0, 0);\n\n    if (svgWidth != null) {\n      boundingRect.width = svgWidth;\n    }\n\n    if (svgHeight != null) {\n      boundingRect.height = svgHeight;\n    }\n  }\n\n  if (viewBoxRect) {\n    var viewBoxTransform = makeViewBoxTransform(viewBoxRect, boundingRect.width, boundingRect.height);\n    var elRoot = root;\n    root = new Group();\n    root.add(elRoot);\n    elRoot.scale = viewBoxTransform.scale;\n    elRoot.position = viewBoxTransform.position;\n  }\n\n  root.setClipPath(new Rect({\n    shape: boundingRect.plain()\n  }));\n  return {\n    root: root,\n    boundingRect: boundingRect\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\n// TODO Batch by color\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null\n  },\n  symbolProxy: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      return;\n    }\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  },\n  afterBrush: function (ctx) {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\n\n    if (!canBoost) {\n      return;\n    }\n\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    this.restoreTransform(ctx);\n  },\n  findDataIndex: function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n\nlargeSymbolProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = new LargeSymbolPath({\n    rectHover: true,\n    cursor: 'default'\n  });\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data);\n\n  this.group.add(symbolEl);\n  this._incremental = null;\n};\n\nlargeSymbolProto.updateLayout = function (data) {\n  if (this._incremental) {\n    return;\n  }\n\n  var points = data.getLayout('symbolPoints');\n  this.group.eachChild(function (child) {\n    if (child.startIndex != null) {\n      var len = (child.endIndex - child.startIndex) * 2;\n      var byteOffset = child.startIndex * 4 * 2;\n      points = new Float32Array(points.buffer, byteOffset, len);\n    }\n\n    child.setShape('points', points);\n  });\n};\n\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n  // PENDING Incremental data?\n\n\n  if (data.count() > 2e6) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n\nlargeSymbolProto.incrementalUpdate = function (taskParams, data) {\n  var symbolEl;\n\n  if (this._incremental) {\n    symbolEl = new LargeSymbolPath();\n\n    this._incremental.addDisplayable(symbolEl, true);\n  } else {\n    symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default',\n      startIndex: taskParams.start,\n      endIndex: taskParams.end\n    });\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, !!this._incremental);\n};\n\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental) {\n  var hostModel = data.hostModel; // TODO\n  // if (data.hasItemVisual.symbolSize) {\n  //     // TODO typed array?\n  //     symbolEl.setShape('sizes', data.mapArray(\n  //         function (idx) {\n  //             var size = data.getItemVisual(idx, 'symbolSize');\n  //             return (size instanceof Array) ? size : [size, size];\n  //         }\n  //     ));\n  // }\n  // else {\n\n  var size = data.getVisual('symbolSize');\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\n  // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n  symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  }\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    symbolEl.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      symbolEl.dataIndex = null;\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  }\n};\n\nlargeSymbolProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeSymbolProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _traversalHelper = require(\"./traversalHelper\");\n\nvar eachAfter = _traversalHelper.eachAfter;\nvar eachBefore = _traversalHelper.eachBefore;\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar init = _layoutHelper.init;\nvar firstWalk = _layoutHelper.firstWalk;\nvar secondWalk = _layoutHelper.secondWalk;\nvar sep = _layoutHelper.separation;\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar getViewRect = _layoutHelper.getViewRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nfunction commonLayout(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n\n  if (realRoot) {\n    init(virtualRoot);\n    eachAfter(realRoot, firstWalk, separation);\n    virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n    eachBefore(realRoot, secondWalk);\n    var left = realRoot;\n    var right = realRoot;\n    var bottom = realRoot;\n    eachBefore(realRoot, function (node) {\n      var x = node.getLayout().x;\n\n      if (x < left.getLayout().x) {\n        left = node;\n      }\n\n      if (x > right.getLayout().x) {\n        right = node;\n      }\n\n      if (node.depth > bottom.depth) {\n        bottom = node;\n      }\n    });\n    var delta = left === right ? 1 : separation(left, right) / 2;\n    var tx = delta - left.getLayout().x;\n    var kx = 0;\n    var ky = 0;\n    var coorX = 0;\n    var coorY = 0;\n\n    if (layout === 'radial') {\n      kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n      ky = height / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX = (node.getLayout().x + tx) * kx;\n        coorY = (node.depth - 1) * ky;\n        var finalCoor = radialCoordinate(coorX, coorY);\n        node.setLayout({\n          x: finalCoor.x,\n          y: finalCoor.y,\n          rawX: coorX,\n          rawY: coorY\n        }, true);\n      });\n    } else {\n      var orient = seriesModel.getOrient();\n\n      if (orient === 'RL' || orient === 'LR') {\n        ky = height / (right.getLayout().x + delta + tx);\n        kx = width / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorY = (node.getLayout().x + tx) * ky;\n          coorX = orient === 'LR' ? (node.depth - 1) * kx : width - (node.depth - 1) * kx;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      } else if (orient === 'TB' || orient === 'BT') {\n        kx = width / (right.getLayout().x + delta + tx);\n        ky = height / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorX = (node.getLayout().x + tx) * kx;\n          coorY = orient === 'TB' ? (node.depth - 1) * ky : height - (node.depth - 1) * ky;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.scatter',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      // PENDING\n      return this.option.large ? 5e3 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      // PENDING\n      return this.option.large ? 1e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10,\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    // label: {\n    // show: false\n    // distance: 5,\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\n    //           'inside'|'left'|'right'|'top'|'bottom'\n    // 默认使用全局文本样式，详见TEXTSTYLE\n    // },\n    itemStyle: {\n      opacity: 0.8 // color: 各异\n      // progressive: null\n\n    }\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var virtualRoot = seriesModel.getData().tree.root;\n    var treeRoot = seriesModel.getViewRoot();\n    var rootDepth = treeRoot.depth;\n    var sort = seriesModel.get('sort');\n\n    if (sort != null) {\n      initChildren(treeRoot, sort);\n    }\n\n    var validDataCount = 0;\n    zrUtil.each(treeRoot.children, function (child) {\n      !isNaN(child.getValue()) && validDataCount++;\n    });\n    var sum = treeRoot.getValue(); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var renderRollupNode = treeRoot.depth > 0;\n    var levels = treeRoot.height - (renderRollupNode ? -1 : 1);\n    var rPerLevel = (r - r0) / (levels || 1);\n    var clockwise = seriesModel.get('clockwise');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var dir = clockwise ? 1 : -1;\n    /**\n     * Render a tree\n     * @return increased angle\n     */\n\n    var renderNode = function (node, startAngle) {\n      if (!node) {\n        return;\n      }\n\n      var endAngle = startAngle; // Render self\n\n      if (node !== virtualRoot) {\n        // Tree node is virtual, so it doesn't need to be drawn\n        var value = node.getValue();\n        var angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n\n        if (angle < minAngle) {\n          angle = minAngle;\n          restAngle -= minAngle;\n        } else {\n          valueSumLargerThanMinAngle += value;\n        }\n\n        endAngle = startAngle + dir * angle;\n        var depth = node.depth - rootDepth - (renderRollupNode ? -1 : 1);\n        var rStart = r0 + rPerLevel * depth;\n        var rEnd = r0 + rPerLevel * (depth + 1);\n        var itemModel = node.getModel();\n\n        if (itemModel.get('r0') != null) {\n          rStart = parsePercent(itemModel.get('r0'), size / 2);\n        }\n\n        if (itemModel.get('r') != null) {\n          rEnd = parsePercent(itemModel.get('r'), size / 2);\n        }\n\n        node.setLayout({\n          angle: angle,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: rStart,\n          r: rEnd\n        });\n      } // Render children\n\n\n      if (node.children && node.children.length) {\n        // currentAngle = startAngle;\n        var siblingAngle = 0;\n        zrUtil.each(node.children, function (node) {\n          siblingAngle += renderNode(node, startAngle + siblingAngle);\n        });\n      }\n\n      return endAngle - startAngle;\n    }; // Virtual root node for roll up\n\n\n    if (renderRollupNode) {\n      var rStart = r0;\n      var rEnd = r0 + rPerLevel;\n      var angle = Math.PI * 2;\n      virtualRoot.setLayout({\n        angle: angle,\n        startAngle: startAngle,\n        endAngle: startAngle + angle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: rStart,\n        r: rEnd\n      });\n    }\n\n    renderNode(treeRoot, startAngle);\n  });\n}\n/**\n * Init node children by order and update visual\n *\n * @param {TreeNode} node  root node\n * @param {boolean}  isAsc if is in ascendant order\n */\n\n\nfunction initChildren(node, isAsc) {\n  var children = node.children || [];\n  node.children = sort(children, isAsc); // Init children recursively\n\n  if (children.length) {\n    zrUtil.each(node.children, function (child) {\n      initChildren(child, isAsc);\n    });\n  }\n}\n/**\n * Sort children nodes\n *\n * @param {TreeNode[]}               children children of node to be sorted\n * @param {string | function | null} sort sort method\n *                                   See SunburstSeries.js for details.\n */\n\n\nfunction sort(children, sortOrder) {\n  if (typeof sortOrder === 'function') {\n    return children.sort(sortOrder);\n  } else {\n    var isAsc = sortOrder === 'asc';\n    return children.sort(function (a, b) {\n      var diff = (a.getValue() - b.getValue()) * (isAsc ? 1 : -1);\n      return diff === 0 ? (a.dataIndex - b.dataIndex) * (isAsc ? -1 : 1) : diff;\n    });\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n * @param {module:echarts/ExtensionAPI} api\n * @param {Array.<number>} itemSize always [short, long]\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\n */\nfunction getItemAlign(visualMapModel, api, itemSize) {\n  var modelOption = visualMapModel.option;\n  var itemAlign = modelOption.align;\n\n  if (itemAlign != null && itemAlign !== 'auto') {\n    return itemAlign;\n  } // Auto decision align.\n\n\n  var ecSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\n  var reals = paramsSet[realIndex];\n  var fakeValue = [0, null, 10];\n  var layoutInput = {};\n\n  for (var i = 0; i < 3; i++) {\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n  }\n\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\n}\n/**\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n * dataIndexInside means filtered index.\n */\n\n\nfunction convertDataIndex(batch) {\n  zrUtil.each(batch || [], function (batchItem) {\n    if (batch.dataIndex != null) {\n      batch.dataIndexInside = batch.dataIndex;\n      batch.dataIndex = null;\n    }\n  });\n  return batch;\n}\n\nexports.getItemAlign = getItemAlign;\nexports.convertDataIndex = convertDataIndex;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel; // /**\n  //  * @readOnly\n  //  * @private\n  //  */\n  // this.hasSeriesStacked;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // this.hasSeriesStacked = false;\n    // each(targetSeries, function (series) {\n    // var data = series.getData();\n    // var dataDim = data.mapDimension(this._dimName);\n    // var stackedDimension = data.getCalculationInfo('stackedDimension');\n    // if (stackedDimension && stackedDimension === dataDim) {\n    // this.hasSeriesStacked = true;\n    // }\n    // }, this);\n\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel, api) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n    // But currently, stack has been fixed to based on value but not index,\n    // so this is not an issue any more.\n    // var otherAxisModel = this.getOtherAxisModel();\n    // if (dataZoomModel.get('$fromToolbox')\n    //     && otherAxisModel\n    //     && otherAxisModel.hasSeriesStacked\n    // ) {\n    //     filterMode = 'empty';\n    // }\n    // TODO\n    // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesData.mapDimension(axisDim, true);\n\n      if (!dataDims.length) {\n        return;\n      }\n\n      if (filterMode === 'weakFilter') {\n        seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            var range = {};\n            range[dim] = valueWindow; // console.time('select');\n\n            seriesData.selectRange(range); // console.timeEnd('select');\n          }\n        });\n      }\n\n      each(dataDims, function (dim) {\n        seriesData.setApproximateExtent(valueWindow, dim);\n      });\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesData.mapDimension(axisDim, true), function (dim) {\n        var seriesExtent = seriesData.getApproximateExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && axisModel.getCategories().length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalProgressive = fields.progressiveRender;\n    var large = fields.large = pipelineContext.large;\n    var progressive = fields.progressiveRender = pipelineContext.progressiveRender;\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Uint8ClampedArray */\n\n/**\n * @file defines echarts Heatmap Chart\n * @author Ovilia (me@zhangwenli.com)\n * Inspired by https://github.com/mourner/simpleheat\n *\n * @module\n */\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function () {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function (data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each(data.mapDimension('value'), function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.center);\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendSymbol(which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n  setNodePosition: function (dataIndex, localPosition) {\n    var dataItem = this.option.data[dataIndex];\n    dataItem.localX = localPosition[0];\n    dataItem.localY = localPosition[1];\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n\n    if (option.focusNodeAdjacency === true) {\n      option.focusNodeAdjacency = 'allEdges';\n    }\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // The position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // Value can be 'vertical'\n    orient: 'horizontal',\n    // The dx of the node\n    nodeWidth: 20,\n    // The vertical distance between two nodes\n    nodeGap: 8,\n    // Control if the node can move or not\n    draggable: true,\n    // Value can be 'inEdges', 'outEdges', 'allEdges', true (the same as 'allEdges').\n    focusNodeAdjacency: false,\n    // The number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      show: true,\n      position: 'right',\n      color: '#000',\n      fontSize: 12\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: '#333'\n    },\n    lineStyle: {\n      color: '#314656',\n      opacity: 0.2,\n      curveness: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (24*60*60*1000)\nvar PROXIMATE_ONE_DAY = 86400000;\n/**\n * Calendar\n *\n * @constructor\n *\n * @param {Object} calendarModel calendarModel\n * @param {Object} ecModel       ecModel\n * @param {Object} api           api\n */\n\nfunction Calendar(calendarModel, ecModel, api) {\n  this._model = calendarModel;\n}\n\nCalendar.prototype = {\n  constructor: Calendar,\n  type: 'calendar',\n  dimensions: ['time', 'value'],\n  // Required in createListFromData\n  getDimensionsInfo: function () {\n    return [{\n      name: 'time',\n      type: 'time'\n    }, 'value'];\n  },\n  getRangeInfo: function () {\n    return this._rangeInfo;\n  },\n  getModel: function () {\n    return this._model;\n  },\n  getRect: function () {\n    return this._rect;\n  },\n  getCellWidth: function () {\n    return this._sw;\n  },\n  getCellHeight: function () {\n    return this._sh;\n  },\n  getOrient: function () {\n    return this._orient;\n  },\n\n  /**\n   * getFirstDayOfWeek\n   *\n   * @example\n   *     0 : start at Sunday\n   *     1 : start at Monday\n   *\n   * @return {number}\n   */\n  getFirstDayOfWeek: function () {\n    return this._firstDayOfWeek;\n  },\n\n  /**\n   * get date info\n   *\n   * @param  {string|number} date date\n   * @return {Object}\n   * {\n   *      y: string, local full year, eg., '1940',\n   *      m: string, local month, from '01' ot '12',\n   *      d: string, local date, from '01' to '31' (if exists),\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\n   *      time: timestamp,\n   *      formatedDate: string, yyyy-MM-dd,\n   *      date: original date object.\n   * }\n   */\n  getDateInfo: function (date) {\n    date = numberUtil.parseDate(date);\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    var day = date.getDay();\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\n    return {\n      y: y,\n      m: m,\n      d: d,\n      day: day,\n      time: date.getTime(),\n      formatedDate: y + '-' + m + '-' + d,\n      date: date\n    };\n  },\n  getNextNDay: function (date, n) {\n    n = n || 0;\n\n    if (n === 0) {\n      return this.getDateInfo(date);\n    }\n\n    date = new Date(this.getDateInfo(date).time);\n    date.setDate(date.getDate() + n);\n    return this.getDateInfo(date);\n  },\n  update: function (ecModel, api) {\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\n    this._orient = this._model.get('orient');\n    this._lineWidth = this._model.getModel('itemStyle').getItemStyle().lineWidth || 0;\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\n    var weeks = this._rangeInfo.weeks || 1;\n    var whNames = ['width', 'height'];\n\n    var cellSize = this._model.get('cellSize').slice();\n\n    var layoutParams = this._model.getBoxLayoutParams();\n\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\n    zrUtil.each([0, 1], function (idx) {\n      if (cellSizeSpecified(cellSize, idx)) {\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\n      }\n    });\n    var whGlobal = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\n    zrUtil.each([0, 1], function (idx) {\n      if (!cellSizeSpecified(cellSize, idx)) {\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\n      }\n    });\n\n    function cellSizeSpecified(cellSize, idx) {\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\n    }\n\n    this._sw = cellSize[0];\n    this._sh = cellSize[1];\n  },\n\n  /**\n   * Convert a time data(time, value) item to (x, y) point.\n   *\n   * @override\n   * @param  {Array|number} data data\n   * @param  {boolean} [clamp=true] out of range\n   * @return {Array} point\n   */\n  dataToPoint: function (data, clamp) {\n    zrUtil.isArray(data) && (data = data[0]);\n    clamp == null && (clamp = true);\n    var dayInfo = this.getDateInfo(data);\n    var range = this._rangeInfo;\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\n\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time < range.end.time + PROXIMATE_ONE_DAY)) {\n      return [NaN, NaN];\n    }\n\n    var week = dayInfo.day;\n\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\n\n    if (this._orient === 'vertical') {\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\n    }\n\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\n  },\n\n  /**\n   * Convert a (x, y) point to time data\n   *\n   * @override\n   * @param  {string} point point\n   * @return {string}       data\n   */\n  pointToData: function (point) {\n    var date = this.pointToDate(point);\n    return date && date.time;\n  },\n\n  /**\n   * Convert a time date item to (x, y) four point.\n   *\n   * @param  {Array} data  date[0] is date\n   * @param  {boolean} [clamp=true]  out of range\n   * @return {Object}       point\n   */\n  dataToRect: function (data, clamp) {\n    var point = this.dataToPoint(data, clamp);\n    return {\n      contentShape: {\n        x: point[0] - (this._sw - this._lineWidth) / 2,\n        y: point[1] - (this._sh - this._lineWidth) / 2,\n        width: this._sw - this._lineWidth,\n        height: this._sh - this._lineWidth\n      },\n      center: point,\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\n    };\n  },\n\n  /**\n   * Convert a (x, y) point to time date\n   *\n   * @param  {Array} point point\n   * @return {Object}       date\n   */\n  pointToDate: function (point) {\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\n    var range = this._rangeInfo.range;\n\n    if (this._orient === 'vertical') {\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\n    }\n\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * initRange\n   *\n   * @private\n   * @return {Array} [start, end]\n   */\n  _initRangeOption: function () {\n    var range = this._model.get('range');\n\n    var rg = range;\n\n    if (zrUtil.isArray(rg) && rg.length === 1) {\n      rg = rg[0];\n    }\n\n    if (/^\\d{4}$/.test(rg)) {\n      range = [rg + '-01-01', rg + '-12-31'];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\n      var start = this.getDateInfo(rg);\n      var firstDay = start.date;\n      firstDay.setMonth(firstDay.getMonth() + 1);\n      var end = this.getNextNDay(firstDay, -1);\n      range = [start.formatedDate, end.formatedDate];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\n      range = [rg, rg];\n    }\n\n    var tmp = this._getRangeInfo(range);\n\n    if (tmp.start.time > tmp.end.time) {\n      range.reverse();\n    }\n\n    return range;\n  },\n\n  /**\n   * range info\n   *\n   * @private\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\n   *  If range[0] > range[1], they will not be reversed.\n   * @return {Object}       obj\n   */\n  _getRangeInfo: function (range) {\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\n    var reversed;\n\n    if (range[0].time > range[1].time) {\n      reversed = true;\n      range.reverse();\n    }\n\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case:\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\n    // ```\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\n    // var second = new Date(1478412000000);\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\n    // ```\n    // will get wrong result because of DST. So we should fix it.\n\n    var date = new Date(range[0].time);\n    var startDateNum = date.getDate();\n    var endDateNum = range[1].date.getDate();\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\n\n    if (date.getDate() !== endDateNum) {\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\n\n      while (date.getDate() !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\n        allDay -= sign;\n        date.setDate(startDateNum + allDay - 1);\n      }\n    }\n\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\n    reversed && range.reverse();\n    return {\n      range: [range[0].formatedDate, range[1].formatedDate],\n      start: range[0],\n      end: range[1],\n      allDay: allDay,\n      weeks: weeks,\n      // From 0.\n      nthWeek: nthWeek,\n      fweek: range[0].day,\n      lweek: range[1].day\n    };\n  },\n\n  /**\n   * get date by nthWeeks and week day in range\n   *\n   * @private\n   * @param  {number} nthWeek the week\n   * @param  {number} day   the week day\n   * @param  {Array} range [d1, d2]\n   * @return {Object}\n   */\n  _getDateByWeeksAndDay: function (nthWeek, day, range) {\n    var rangeInfo = this._getRangeInfo(range);\n\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\n      return false;\n    }\n\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\n    var date = new Date(rangeInfo.start.time);\n    date.setDate(rangeInfo.start.d + nthDay);\n    return this.getDateInfo(date);\n  }\n};\nCalendar.dimensions = Calendar.prototype.dimensions;\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\n\nCalendar.create = function (ecModel, api) {\n  var calendarList = [];\n  ecModel.eachComponent('calendar', function (calendarModel) {\n    var calendar = new Calendar(calendarModel, ecModel, api);\n    calendarList.push(calendar);\n    calendarModel.coordinateSystem = calendar;\n  });\n  ecModel.eachSeries(function (calendarSeries) {\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\n      // Inject coordinate system\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\n    }\n  });\n  return calendarList;\n};\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var calendarModel = finder.calendarModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nCoordinateSystem.register('calendar', Calendar);\nvar _default = Calendar;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed before after series filtered and before stack calculation.\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series:unfocusNodeAdjacency'\n}, function () {});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = [];\n      each(coordSys.dimensions, function (coordDim) {\n        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\n      });\n\n      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n        var value = [];\n        var hasValue = false;\n\n        for (var i = 0; i < dimensions.length; i++) {\n          var val = data.get(dimensions[i], dataIndex);\n\n          if (!isNaN(val)) {\n            hasValue = true;\n          }\n\n          value.push(val);\n        }\n\n        if (hasValue) {\n          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(dataIndex, [NaN, NaN]);\n        }\n      }\n\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    /* eslint-disable */\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n    /* eslint-enable */\n\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar';\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  // if (smoothMonotone == null) {\n  //     if (isMono(points, 'x')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n  //     }\n  //     else if (isMono(points, 'y')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n  //     }\n  //     else {\n  //         return drawNonMono.apply(this, arguments);\n  //     }\n  // }\n  // else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n  //     return drawMono.apply(this, arguments);\n  // }\n  // else {\n  //     return drawNonMono.apply(this, arguments);\n  // }\n  if (smoothMonotone === 'none' || !smoothMonotone) {\n    return drawNonMono.apply(this, arguments);\n  } else {\n    return drawMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n// function isMono(points, smoothMonotone) {\n//     if (points.length <= 1) {\n//         return true;\n//     }\n//     var dim = smoothMonotone === 'x' ? 0 : 1;\n//     var last = points[0][dim];\n//     var lastDiff = 0;\n//     for (var i = 1; i < points.length; ++i) {\n//         var diff = points[i][dim] - last;\n//         if (!isNaN(diff) && !isNaN(lastDiff)\n//             && diff !== 0 && lastDiff !== 0\n//             && ((diff >= 0) !== (lastDiff >= 0))\n//         ) {\n//             return false;\n//         }\n//         if (!isNaN(diff) && diff !== 0) {\n//             lastDiff = diff;\n//             last = points[i][dim];\n//         }\n//     }\n//     return true;\n// }\n\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PictorialBarSeries = BaseBarSeries.extend({\n  type: 'series.pictorialBar',\n  dependencies: ['grid'],\n  defaultOption: {\n    symbol: 'circle',\n    // Customized bar shape\n    symbolSize: null,\n    // Can be ['100%', '100%'], null means auto.\n    symbolRotate: null,\n    symbolPosition: null,\n    // 'start' or 'end' or 'center', null means auto.\n    symbolOffset: null,\n    symbolMargin: null,\n    // start margin and end margin. Can be a number or a percent string.\n    // Auto margin by defualt.\n    symbolRepeat: false,\n    // false/null/undefined, means no repeat.\n    // Can be true, means auto calculate repeat times and cut by data.\n    // Can be a number, specifies repeat times, and do not cut by data.\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\n    symbolRepeatDirection: 'end',\n    // 'end' means from 'start' to 'end'.\n    symbolClip: false,\n    symbolBoundingData: null,\n    // Can be 60 or -40 or [-40, 60]\n    symbolPatternSize: 400,\n    // 400 * 400 px\n    barGap: '-100%',\n    // In most case, overlap is needed.\n    // z can be set in data item, which is z2 actually.\n    // Disable progressive\n    progressive: 0,\n    hoverAnimation: false // Open only when needed.\n\n  },\n  getInitialData: function (option) {\n    // Disable stack.\n    option.stack = null;\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\n  }\n});\nvar _default = PictorialBarSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar actionInfo = {\n  type: 'selectDataRange',\n  event: 'dataRangeSelected',\n  // FIXME use updateView appears wrong\n  update: 'update'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'visualMap',\n    query: payload\n  }, function (model) {\n    model.setSelected(payload.selected);\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./sunburst/SunburstSeries\");\n\nrequire(\"./sunburst/SunburstView\");\n\nrequire(\"./sunburst/sunburstAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar sunburstLayout = require(\"./sunburst/sunburstLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(zrUtil.curry(dataColor, 'sunburst'));\necharts.registerLayout(zrUtil.curry(sunburstLayout, 'sunburst'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'sunburst'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\nrequire(\"../helper/focusNodeAdjacencyAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar ParallelAxis = require(\"./ParallelAxis\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../../component/helper/sliderMove\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function (parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function () {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function (parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, data.mapDimension(dim));\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function (parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function () {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function () {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function (dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function (value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {number} [start=0] the start dataIndex that travel from.\n   * @param {number} [end=data.count()] the next dataIndex of the last dataIndex will be travel.\n   */\n  eachActiveState: function (data, callback, start, end) {\n    start == null && (start = 0);\n    end == null && (end = data.count());\n    var axesMap = this._axesMap;\n    var dimensions = this.dimensions;\n    var dataDimensions = [];\n    var axisModels = [];\n    zrUtil.each(dimensions, function (axisDim) {\n      dataDimensions.push(data.mapDimension(axisDim));\n      axisModels.push(axesMap.get(axisDim).model);\n    });\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var dataIndex = start; dataIndex < end; dataIndex++) {\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n        var values = data.getValues(dataDimensions, dataIndex);\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var state = axisModels[j].getActiveState(values[j]);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback(activeState, dataIndex);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function () {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function (coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function (dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./treemap/TreemapSeries\");\n\nrequire(\"./treemap/TreemapView\");\n\nrequire(\"./treemap/treemapAction\");\n\nvar treemapVisual = require(\"./treemap/treemapVisual\");\n\nvar treemapLayout = require(\"./treemap/treemapLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(treemapVisual);\necharts.registerLayout(treemapLayout);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkPointModel\");\n\nrequire(\"./marker/MarkPointView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// HINT Markpoint can't be used too much\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle');\n      var iconStyleEmphasisModel = featureModel.getModel('emphasis.iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getItemStyle());\n        path.hoverStyle = iconStyleEmphasisModel.getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleEmphasisModel.getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  // updateLayout: function (toolboxModel, ecModel, api, payload) {\n  //     zrUtil.each(this._features, function (feature) {\n  //         feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n  //     });\n  // },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Update common properties\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var oldData = this._data; // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    var constDim = seriesModel.get('layout') === 'horizontal' ? 1 : 0;\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var itemLayout = data.getItemLayout(newIdx);\n        var symbolEl = createNormalBox(itemLayout, data, newIdx, constDim, true);\n        data.setItemGraphicEl(newIdx, symbolEl);\n        group.add(symbolEl);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(symbolEl);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!symbolEl) {\n        symbolEl = createNormalBox(itemLayout, data, newIdx, constDim);\n      } else {\n        updateNormalBoxData(itemLayout, symbolEl, data, newIdx);\n      }\n\n      group.add(symbolEl);\n      data.setItemGraphicEl(newIdx, symbolEl);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n    this._data = null;\n    data && data.eachItemGraphicEl(function (el) {\n      el && group.remove(el);\n    });\n  },\n  dispose: zrUtil.noop\n});\nvar BoxPath = Path.extend({\n  type: 'boxplotBoxPath',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    var ends = shape.points;\n    var i = 0;\n    ctx.moveTo(ends[i][0], ends[i][1]);\n    i++;\n\n    for (; i < 4; i++) {\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n\n    ctx.closePath();\n\n    for (; i < ends.length; i++) {\n      ctx.moveTo(ends[i][0], ends[i][1]);\n      i++;\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, data, dataIndex, constDim, isInit) {\n  var ends = itemLayout.ends;\n  var el = new BoxPath({\n    shape: {\n      points: isInit ? transInit(ends, constDim, itemLayout) : ends\n    }\n  });\n  updateNormalBoxData(itemLayout, el, data, dataIndex, isInit);\n  return el;\n}\n\nfunction updateNormalBoxData(itemLayout, el, data, dataIndex, isInit) {\n  var seriesModel = data.hostModel;\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\n  updateMethod(el, {\n    shape: {\n      points: itemLayout.ends\n    }\n  }, seriesModel, dataIndex);\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var borderColor = data.getItemVisual(dataIndex, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  itemStyle.stroke = borderColor;\n  itemStyle.strokeNoScale = true;\n  el.useStyle(itemStyle);\n  el.z2 = 100;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TimelineModel = require(\"./TimelineModel\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SliderTimelineModel = TimelineModel.extend({\n  type: 'timeline.slider',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 时间轴背景颜色\n    borderColor: '#ccc',\n    // 时间轴边框颜色\n    borderWidth: 0,\n    // 时间轴边框线宽，单位px，默认为0（无边框）\n    orient: 'horizontal',\n    // 'vertical'\n    inverse: false,\n    tooltip: {\n      // boolean or Object\n      trigger: 'item' // data item may also have tootip attr.\n\n    },\n    symbol: 'emptyCircle',\n    symbolSize: 10,\n    lineStyle: {\n      show: true,\n      width: 2,\n      color: '#304654'\n    },\n    label: {\n      // 文本标签\n      position: 'auto',\n      // auto left right top bottom\n      // When using number, label position is not\n      // restricted by viewRect.\n      // positive: right/bottom, negative: left/top\n      show: true,\n      interval: 'auto',\n      rotate: 0,\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#304654'\n    },\n    itemStyle: {\n      color: '#304654',\n      borderWidth: 1\n    },\n    checkpointStyle: {\n      symbol: 'circle',\n      symbolSize: 13,\n      color: '#c23531',\n      borderWidth: 5,\n      borderColor: 'rgba(194,53,49, 0.5)',\n      animation: true,\n      animationDuration: 300,\n      animationEasing: 'quinticInOut'\n    },\n    controlStyle: {\n      show: true,\n      showPlayBtn: true,\n      showPrevBtn: true,\n      showNextBtn: true,\n      itemSize: 22,\n      itemGap: 12,\n      position: 'left',\n      // 'left' 'right' 'top' 'bottom'\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\n      // jshint ignore:line\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\n      // jshint ignore:line\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\n      // jshint ignore:line\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\n      // jshint ignore:line\n      color: '#304654',\n      borderColor: '#304654',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#c23531'\n      },\n      itemStyle: {\n        color: '#c23531'\n      },\n      controlStyle: {\n        color: '#c23531',\n        borderColor: '#c23531',\n        borderWidth: 2\n      }\n    },\n    data: []\n  }\n});\nzrUtil.mixin(SliderTimelineModel, dataFormatMixin);\nvar _default = SliderTimelineModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.color'.split('.');\n    var opacityQuery = 'lineStyle.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null || isNaN(value)) {\n      return 'inactive';\n    } // Simple optimization\n\n\n    if (activeIntervals.length === 1) {\n      var interval = activeIntervals[0];\n\n      if (interval[0] <= value && value <= interval[1]) {\n        return 'active';\n      }\n    } else {\n      for (var i = 0, len = activeIntervals.length; i < len; i++) {\n        if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n          return 'active';\n        }\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n\n  /* eslint-disable */\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n\n  /* eslint-enable */\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar _labelHelper = require(\"./helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\nvar createListFromArray = require(\"./helper/createListFromArray\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar getLayoutOnAxis = _barGrid.getLayoutOnAxis;\n\nvar DataDiffer = require(\"../data/DataDiffer\");\n\nvar SeriesModel = require(\"../model/Series\");\n\nvar ChartView = require(\"../view/Chart\");\n\nvar prepareCartesian2d = require(\"../coord/cartesian/prepareCustom\");\n\nvar prepareGeo = require(\"../coord/geo/prepareCustom\");\n\nvar prepareSingleAxis = require(\"../coord/single/prepareCustom\");\n\nvar preparePolar = require(\"../coord/polar/prepareCustom\");\n\nvar prepareCalendar = require(\"../coord/calendar/prepareCustom\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ITEM_STYLE_NORMAL_PATH = ['itemStyle'];\nvar ITEM_STYLE_EMPHASIS_PATH = ['emphasis', 'itemStyle'];\nvar LABEL_NORMAL = ['label'];\nvar LABEL_EMPHASIS = ['emphasis', 'label']; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird udpate animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n}; // ------\n// Model\n// ------\n\nSeriesModel.extend({\n  type: 'series.custom',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    // Can be set as 'none'\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    useTransform: true // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // label: {}\n    // itemStyle: {}\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n\n  /**\n   * @override\n   */\n  getDataParams: function (dataIndex, dataType, el) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    el && (params.info = el.info);\n    return params;\n  }\n}); // -----\n// View\n// -----\n\nChartView.extend({\n  type: 'custom',\n\n  /**\n   * @private\n   * @type {module:echarts/data/List}\n   */\n  _data: null,\n\n  /**\n   * @override\n   */\n  render: function (customSeries, ecModel, api, payload) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api); // By default, merge mode is applied. In most cases, custom series is\n    // used in the scenario that data amount is not large but graphic elements\n    // is complicated, where merge mode is probably necessary for optimization.\n    // For example, reuse graphic elements and only update the transform when\n    // roam or data zoom according to `actionType`.\n\n    data.diff(oldData).add(function (newIdx) {\n      createOrUpdate(null, newIdx, renderItem(newIdx, payload), customSeries, group, data);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      createOrUpdate(el, newIdx, renderItem(newIdx, payload), customSeries, group, data);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  incrementalPrepareRender: function (customSeries, ecModel, api) {\n    this.group.removeAll();\n    this._data = null;\n  },\n  incrementalRender: function (params, customSeries, ecModel, api, payload) {\n    var data = customSeries.getData();\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n\n    function setIncrementalAndHoverLayer(el) {\n      if (!el.isGroup) {\n        el.incremental = true;\n        el.useHoverLayer = true;\n      }\n    }\n\n    for (var idx = params.start; idx < params.end; idx++) {\n      var el = createOrUpdate(null, idx, renderItem(idx, payload), customSeries, this.group, data);\n      el.traverse(setIncrementalAndHoverLayer);\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: zrUtil.noop,\n\n  /**\n   * @override\n   */\n  filterForExposedEvent: function (eventType, query, targetEl, packedEvent) {\n    var elementName = query.element;\n\n    if (elementName == null || targetEl.name === elementName) {\n      return true;\n    } // Enable to give a name on a group made by `renderItem`, and listen\n    // events that triggerd by its descendents.\n\n\n    while ((targetEl = targetEl.parent) && targetEl !== this.group) {\n      if (targetEl.name === elementName) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n});\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el;\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape; // Using pathRect brings convenience to users sacle svg path.\n\n    var pathRect = shape.width != null && shape.height != null ? {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width,\n      height: shape.height\n    } : null;\n    var pathData = getPathData(shape); // Path is also used for icon, so layout 'center' by default.\n\n    el = graphicUtil.makePath(pathData, null, pathRect, shape.layout || 'center');\n    el.__customPathData = pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    el.__customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({});\n    el.__customText = elOption.style.text;\n  } else {\n    var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n    el = new Clz();\n  }\n\n  el.__customGraphicType = graphicType;\n  el.name = elOption.name;\n  return el;\n}\n\nfunction updateEl(el, dataIndex, elOption, animatableModel, data, isInit, isRoot) {\n  var transitionProps = {};\n  var elOptionStyle = elOption.style || {};\n  elOption.shape && (transitionProps.shape = zrUtil.clone(elOption.shape));\n  elOption.position && (transitionProps.position = elOption.position.slice());\n  elOption.scale && (transitionProps.scale = elOption.scale.slice());\n  elOption.origin && (transitionProps.origin = elOption.origin.slice());\n  elOption.rotation && (transitionProps.rotation = elOption.rotation);\n\n  if (el.type === 'image' && elOption.style) {\n    var targetStyle = transitionProps.style = {};\n    zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    });\n  }\n\n  if (el.type === 'text' && elOption.style) {\n    var targetStyle = transitionProps.style = {};\n    zrUtil.each(['x', 'y'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    }); // Compatible with previous: both support\n    // textFill and fill, textStroke and stroke in 'text' element.\n\n    !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n    !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n  }\n\n  if (el.type !== 'group') {\n    el.useStyle(elOptionStyle); // Init animation.\n\n    if (isInit) {\n      el.style.opacity = 0;\n      var targetOpacity = elOptionStyle.opacity;\n      targetOpacity == null && (targetOpacity = 1);\n      graphicUtil.initProps(el, {\n        style: {\n          opacity: targetOpacity\n        }\n      }, animatableModel, dataIndex);\n    }\n  }\n\n  if (isInit) {\n    el.attr(transitionProps);\n  } else {\n    graphicUtil.updateProps(el, transitionProps, animatableModel, dataIndex);\n  } // Merge by default.\n  // z2 must not be null/undefined, otherwise sort error may occur.\n\n\n  elOption.hasOwnProperty('z2') && el.attr('z2', elOption.z2 || 0);\n  elOption.hasOwnProperty('silent') && el.attr('silent', elOption.silent);\n  elOption.hasOwnProperty('invisible') && el.attr('invisible', elOption.invisible);\n  elOption.hasOwnProperty('ignore') && el.attr('ignore', elOption.ignore); // `elOption.info` enables user to mount some info on\n  // elements and use them in event handlers.\n  // Update them only when user specified, otherwise, remain.\n\n  elOption.hasOwnProperty('info') && el.attr('info', elOption.info); // If `elOption.styleEmphasis` is `false`, remove hover style. The\n  // logic is ensured by `graphicUtil.setElementHoverStyle`.\n\n  var styleEmphasis = elOption.styleEmphasis;\n  var disableStyleEmphasis = styleEmphasis === false;\n\n  if (!( // Try to escapse setting hover style for performance.\n  el.__cusHasEmphStl && styleEmphasis == null || !el.__cusHasEmphStl && disableStyleEmphasis)) {\n    // Should not use graphicUtil.setHoverStyle, since the styleEmphasis\n    // should not be share by group and its descendants.\n    graphicUtil.setElementHoverStyle(el, styleEmphasis);\n    el.__cusHasEmphStl = !disableStyleEmphasis;\n  }\n\n  isRoot && graphicUtil.setAsHoverStyleTrigger(el, !disableStyleEmphasis);\n}\n\nfunction prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\n  if (elOptionStyle[prop] != null && !isInit) {\n    targetStyle[prop] = elOptionStyle[prop];\n    elOptionStyle[prop] = oldElStyle[prop];\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms() : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = zrUtil.defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    // The life cycle of context: current round of rendering.\n    // The global life cycle is probably not necessary, because\n    // user can store global status by themselves.\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currDirty = true;\n  var currItemModel;\n  var currLabelNormalModel;\n  var currLabelEmphasisModel;\n  var currVisualColor;\n  return function (dataIndexInside, payload) {\n    currDataIndexInside = dataIndexInside;\n    currDirty = true;\n    return renderItem && renderItem(zrUtil.defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside),\n      // Can be used for optimization when zoom or roam.\n      actionType: payload ? payload.type : null\n    }, userParams), userAPI);\n  }; // Do not update cache until api called.\n\n  function updateCache(dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (currDirty) {\n      currItemModel = data.getItemModel(dataIndexInside);\n      currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\n      currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\n      currVisualColor = data.getItemVisual(dataIndexInside, 'color');\n      currDirty = false;\n    }\n  }\n  /**\n   * @public\n   * @param {number|string} dim\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   * @return {number|string} value\n   */\n\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.get(data.getDimension(dim || 0), dataIndexInside);\n  }\n  /**\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function style(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\n    currVisualColor != null && (itemStyle.fill = currVisualColor);\n    var opacity = data.getItemVisual(dataIndexInside, 'opacity');\n    opacity != null && (itemStyle.opacity = opacity);\n    graphicUtil.setTextStyle(itemStyle, currLabelNormalModel, null, {\n      autoColor: currVisualColor,\n      isRectText: true\n    });\n    itemStyle.text = currLabelNormalModel.getShallow('show') ? zrUtil.retrieve2(customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function styleEmphasis(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\n    graphicUtil.setTextStyle(itemStyle, currLabelEmphasisModel, null, {\n      isRectText: true\n    }, true);\n    itemStyle.text = currLabelEmphasisModel.getShallow('show') ? zrUtil.retrieve3(customSeries.getFormattedLabel(dataIndexInside, 'emphasis'), customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {string} visualType\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getItemVisual(dataIndexInside, visualType);\n  }\n  /**\n   * @public\n   * @param {number} opt.count Positive interger.\n   * @param {number} [opt.barWidth]\n   * @param {number} [opt.barMaxWidth]\n   * @param {number} [opt.barGap]\n   * @param {number} [opt.barCategoryGap]\n   * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.getBaseAxis) {\n      var baseAxis = coordSys.getBaseAxis();\n      return getLayoutOnAxis(zrUtil.defaults({\n        axis: baseAxis\n      }, opt), api);\n    }\n  }\n  /**\n   * @public\n   * @return {Array.<number>}\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {string} [opt.fontStyle]\n   * @param {number} [opt.fontWeight]\n   * @param {number} [opt.fontSize]\n   * @param {string} [opt.fontFamily]\n   * @return {string} font string\n   */\n\n\n  function font(opt) {\n    return graphicUtil.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = dataDimIndex;\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data, true);\n  el && data.setItemGraphicEl(dataIndex, el);\n  return el;\n}\n\nfunction doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data, isRoot) {\n  // [Rule]\n  // By default, follow merge mode.\n  //     (It probably brings benifit for performance in some cases of large data, where\n  //     user program can be optimized to that only updated props needed to be re-calculated,\n  //     or according to `actionType` some calculation can be skipped.)\n  // If `renderItem` returns `null`/`undefined`/`false`, remove the previous el if existing.\n  //     (It seems that violate the \"merge\" principle, but most of users probably intuitively\n  //     regard \"return;\" as \"show nothing element whatever\", so make a exception to meet the\n  //     most cases.)\n  var simplyRemove = !elOption; // `null`/`undefined`/`false`\n\n  elOption = elOption || {};\n  var elOptionType = elOption.type;\n  var elOptionShape = elOption.shape;\n  var elOptionStyle = elOption.style;\n\n  if (el && (simplyRemove // || elOption.$merge === false\n  // If `elOptionType` is `null`, follow the merge principle.\n  || elOptionType != null && elOptionType !== el.__customGraphicType || elOptionType === 'path' && hasOwnPathData(elOptionShape) && getPathData(elOptionShape) !== el.__customPathData || elOptionType === 'image' && hasOwn(elOptionStyle, 'image') && elOptionStyle.image !== el.__customImagePath // FIXME test and remove this restriction?\n  || elOptionType === 'text' && hasOwn(elOptionShape, 'text') && elOptionStyle.text !== el.__customText)) {\n    group.remove(el);\n    el = null;\n  } // `elOption.type` is undefined when `renderItem` returns nothing.\n\n\n  if (simplyRemove) {\n    return;\n  }\n\n  var isInit = !el;\n  !el && (el = createEl(elOption));\n  updateEl(el, dataIndex, elOption, animatableModel, data, isInit, isRoot);\n\n  if (elOptionType === 'group') {\n    mergeChildren(el, dataIndex, elOption, animatableModel, data);\n  } // Always add whatever already added to ensure sequence.\n\n\n  group.add(el);\n  return el;\n} // Usage:\n// (1) By default, `elOption.$mergeChildren` is `'byIndex'`, which indicates that\n//     the existing children will not be removed, and enables the feature that\n//     update some of the props of some of the children simply by construct\n//     the returned children of `renderItem` like:\n//     `var children = group.children = []; children[3] = {opacity: 0.5};`\n// (2) If `elOption.$mergeChildren` is `'byName'`, add/update/remove children\n//     by child.name. But that might be lower performance.\n// (3) If `elOption.$mergeChildren` is `false`, the existing children will be\n//     replaced totally.\n// (4) If `!elOption.children`, following the \"merge\" principle, nothing will happen.\n//\n// For implementation simpleness, do not provide a direct way to remove sinlge\n// child (otherwise the total indicies of the children array have to be modified).\n// User can remove a single child by set its `ignore` as `true` or replace\n// it by another element, where its `$merge` can be set as `true` if necessary.\n\n\nfunction mergeChildren(el, dataIndex, elOption, animatableModel, data) {\n  var newChildren = elOption.children;\n  var newLen = newChildren ? newChildren.length : 0;\n  var mergeChildren = elOption.$mergeChildren; // `diffChildrenByName` has been deprecated.\n\n  var byName = mergeChildren === 'byName' || elOption.diffChildrenByName;\n  var notMerge = mergeChildren === false; // For better performance on roam update, only enter if necessary.\n\n  if (!newLen && !byName && !notMerge) {\n    return;\n  }\n\n  if (byName) {\n    diffGroupChildren({\n      oldChildren: el.children() || [],\n      newChildren: newChildren || [],\n      dataIndex: dataIndex,\n      animatableModel: animatableModel,\n      group: el,\n      data: data\n    });\n    return;\n  }\n\n  notMerge && el.removeAll(); // Mapping children of a group simply by index, which\n  // might be better performance.\n\n  var index = 0;\n\n  for (; index < newLen; index++) {\n    newChildren[index] && doCreateOrUpdate(el.childAt(index), dataIndex, newChildren[index], animatableModel, el, data);\n  }\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdate(child, context.dataIndex, childOption, context.animatableModel, context.group, context.data);\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  child && context.group.remove(child);\n}\n\nfunction getPathData(shape) {\n  // \"d\" follows the SVG convention.\n  return shape && (shape.pathData || shape.d);\n}\n\nfunction hasOwnPathData(shape) {\n  return shape && (shape.hasOwnProperty('pathData') || shape.hasOwnProperty('d'));\n}\n\nfunction hasOwn(host, prop) {\n  return host && host.hasOwnProperty(prop);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _axisHelper = require(\"./axisHelper\");\n\nvar makeLabelFormatter = _axisHelper.makeLabelFormatter;\nvar getOptionCategoryInterval = _axisHelper.getOptionCategoryInterval;\nvar shouldShowAllLabels = _axisHelper.shouldShowAllLabels;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @param {module:echats/coord/Axis} axis\n * @return {Object} {\n *     labels: [{\n *         formattedLabel: string,\n *         rawLabel: string,\n *         tickValue: number\n *     }, ...],\n *     labelCategoryInterval: number\n * }\n */\n\nfunction createAxisLabels(axis) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);\n}\n/**\n * @param {module:echats/coord/Axis} axis\n * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.\n * @return {Object} {\n *     ticks: Array.<number>\n *     tickCategoryInterval: number\n * }\n */\n\n\nfunction createAxisTicks(axis, tickModel) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {\n    ticks: axis.scale.getTicks()\n  };\n}\n\nfunction makeCategoryLabels(axis) {\n  var labelModel = axis.getLabelModel();\n  var result = makeCategoryLabelsActually(axis, labelModel);\n  return !labelModel.get('show') || axis.scale.isBlank() ? {\n    labels: [],\n    labelCategoryInterval: result.labelCategoryInterval\n  } : result;\n}\n\nfunction makeCategoryLabelsActually(axis, labelModel) {\n  var labelsCache = getListCache(axis, 'labels');\n  var optionLabelInterval = getOptionCategoryInterval(labelModel);\n  var result = listCacheGet(labelsCache, optionLabelInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var labels;\n  var numericLabelInterval;\n\n  if (zrUtil.isFunction(optionLabelInterval)) {\n    labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);\n  } else {\n    numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;\n    labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);\n  } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(labelsCache, optionLabelInterval, {\n    labels: labels,\n    labelCategoryInterval: numericLabelInterval\n  });\n}\n\nfunction makeCategoryTicks(axis, tickModel) {\n  var ticksCache = getListCache(axis, 'ticks');\n  var optionTickInterval = getOptionCategoryInterval(tickModel);\n  var result = listCacheGet(ticksCache, optionTickInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var ticks;\n  var tickCategoryInterval; // Optimize for the case that large category data and no label displayed,\n  // we should not return all ticks.\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    ticks = [];\n  }\n\n  if (zrUtil.isFunction(optionTickInterval)) {\n    ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);\n  } // Always use label interval by default despite label show. Consider this\n  // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows\n  // labels. `splitLine` and `axisTick` should be consistent in this case.\n  else if (optionTickInterval === 'auto') {\n      var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());\n      tickCategoryInterval = labelsResult.labelCategoryInterval;\n      ticks = zrUtil.map(labelsResult.labels, function (labelItem) {\n        return labelItem.tickValue;\n      });\n    } else {\n      tickCategoryInterval = optionTickInterval;\n      ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);\n    } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(ticksCache, optionTickInterval, {\n    ticks: ticks,\n    tickCategoryInterval: tickCategoryInterval\n  });\n}\n\nfunction makeRealNumberLabels(axis) {\n  var ticks = axis.scale.getTicks();\n  var labelFormatter = makeLabelFormatter(axis);\n  return {\n    labels: zrUtil.map(ticks, function (tickValue, idx) {\n      return {\n        formattedLabel: labelFormatter(tickValue, idx),\n        rawLabel: axis.scale.getLabel(tickValue),\n        tickValue: tickValue\n      };\n    })\n  };\n} // Large category data calculation is performence sensitive, and ticks and label\n// probably be fetched by multiple times. So we cache the result.\n// axis is created each time during a ec process, so we do not need to clear cache.\n\n\nfunction getListCache(axis, prop) {\n  // Because key can be funciton, and cache size always be small, we use array cache.\n  return inner(axis)[prop] || (inner(axis)[prop] = []);\n}\n\nfunction listCacheGet(cache, key) {\n  for (var i = 0; i < cache.length; i++) {\n    if (cache[i].key === key) {\n      return cache[i].value;\n    }\n  }\n}\n\nfunction listCacheSet(cache, key, value) {\n  cache.push({\n    key: key,\n    value: value\n  });\n  return value;\n}\n\nfunction makeAutoCategoryInterval(axis) {\n  var result = inner(axis).autoInterval;\n  return result != null ? result : inner(axis).autoInterval = axis.calculateCategoryInterval();\n}\n/**\n * Calculate interval for category axis ticks and labels.\n * To get precise result, at least one of `getRotate` and `isHorizontal`\n * should be implemented in axis.\n */\n\n\nfunction calculateCategoryInterval(axis) {\n  var params = fetchAutoCategoryIntervalCalculationParams(axis);\n  var labelFormatter = makeLabelFormatter(axis);\n  var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n  // avoid generating a long array by `getTicks`\n  // in large category data case.\n\n  var tickCount = ordinalScale.count();\n\n  if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n    return 0;\n  }\n\n  var step = 1; // Simple optimization. Empirical value: tick count should less than 40.\n\n  if (tickCount > 40) {\n    step = Math.max(1, Math.floor(tickCount / 40));\n  }\n\n  var tickValue = ordinalExtent[0];\n  var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n  var unitW = Math.abs(unitSpan * Math.cos(rotation));\n  var unitH = Math.abs(unitSpan * Math.sin(rotation));\n  var maxW = 0;\n  var maxH = 0; // Caution: Performance sensitive for large category data.\n  // Consider dataZoom, we should make appropriate step to avoid O(n) loop.\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    var width = 0;\n    var height = 0; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labelFormatter(tickValue), params.font, 'center', 'top'); // Magic number\n\n    width = rect.width * 1.3;\n    height = rect.height * 1.3; // Min size, void long loop.\n\n    maxW = Math.max(maxW, width, 7);\n    maxH = Math.max(maxH, height, 7);\n  }\n\n  var dw = maxW / unitW;\n  var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n  isNaN(dw) && (dw = Infinity);\n  isNaN(dh) && (dh = Infinity);\n  var interval = Math.max(0, Math.floor(Math.min(dw, dh)));\n  var cache = inner(axis.model);\n  var lastAutoInterval = cache.lastAutoInterval;\n  var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n  // otherwise the calculated interval might jitter when the zoom\n  // window size is close to the interval-changing size.\n\n  if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n  // point is not the same when zooming in or zooming out.\n  && lastAutoInterval > interval) {\n    interval = lastAutoInterval;\n  } // Only update cache if cache not used, otherwise the\n  // changing of interval is too insensitive.\n  else {\n      cache.lastTickCount = tickCount;\n      cache.lastAutoInterval = interval;\n    }\n\n  return interval;\n}\n\nfunction fetchAutoCategoryIntervalCalculationParams(axis) {\n  var labelModel = axis.getLabelModel();\n  return {\n    axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,\n    labelRotate: labelModel.get('rotate') || 0,\n    font: labelModel.getFont()\n  };\n}\n\nfunction makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {\n  var labelFormatter = makeLabelFormatter(axis);\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent();\n  var labelModel = axis.getLabelModel();\n  var result = []; // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...\n\n  var step = Math.max((categoryInterval || 0) + 1, 1);\n  var startTick = ordinalExtent[0];\n  var tickCount = ordinalScale.count(); // Calculate start tick based on zero if possible to keep label consistent\n  // while zooming and moving while interval > 0. Otherwise the selection\n  // of displayable ticks and symbols probably keep changing.\n  // 3 is empirical value.\n\n  if (startTick !== 0 && step > 1 && tickCount / step > 2) {\n    startTick = Math.round(Math.ceil(startTick / step) * step);\n  } // (1) Only add min max label here but leave overlap checking\n  // to render stage, which also ensure the returned list\n  // suitable for splitLine and splitArea rendering.\n  // (2) Scales except category always contain min max label so\n  // do not need to perform this process.\n\n\n  var showAllLabel = shouldShowAllLabels(axis);\n  var includeMinLabel = labelModel.get('showMinLabel') || showAllLabel;\n  var includeMaxLabel = labelModel.get('showMaxLabel') || showAllLabel;\n\n  if (includeMinLabel && startTick !== ordinalExtent[0]) {\n    addItem(ordinalExtent[0]);\n  } // Optimize: avoid generating large array by `ordinalScale.getTicks()`.\n\n\n  var tickValue = startTick;\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    addItem(tickValue);\n  }\n\n  if (includeMaxLabel && tickValue !== ordinalExtent[1]) {\n    addItem(ordinalExtent[1]);\n  }\n\n  function addItem(tVal) {\n    result.push(onlyTick ? tVal : {\n      formattedLabel: labelFormatter(tVal),\n      rawLabel: ordinalScale.getLabel(tVal),\n      tickValue: tVal\n    });\n  }\n\n  return result;\n} // When interval is function, the result `false` means ignore the tick.\n// It is time consuming for large category data.\n\n\nfunction makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {\n  var ordinalScale = axis.scale;\n  var labelFormatter = makeLabelFormatter(axis);\n  var result = [];\n  zrUtil.each(ordinalScale.getTicks(), function (tickValue) {\n    var rawLabel = ordinalScale.getLabel(tickValue);\n\n    if (categoryInterval(tickValue, rawLabel)) {\n      result.push(onlyTick ? tickValue : {\n        formattedLabel: labelFormatter(tickValue),\n        rawLabel: rawLabel,\n        tickValue: tickValue\n      });\n    }\n  });\n  return result;\n}\n\nexports.createAxisLabels = createAxisLabels;\nexports.createAxisTicks = createAxisTicks;\nexports.calculateCategoryInterval = calculateCategoryInterval;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * Make the name displayable. But we should\n * make sure it is not duplicated with user\n * specified name, so use '\\0';\n */\n\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  // Caution: performance sensitive.\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\n    // because name may be used like in color pallet.\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n\nfunction isNameSpecified(componentModel) {\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\n\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nfunction getTooltipRenderMode(renderModeOption) {\n  if (renderModeOption === 'auto') {\n    // Using html when `document` exists, use richText otherwise\n    return env.domSupported ? 'html' : 'richText';\n  } else {\n    return renderModeOption || 'html';\n  }\n}\n/**\n * Group a list by key.\n *\n * @param {Array} array\n * @param {Function} getKey\n *        param {*} Array item\n *        return {string} key\n * @return {Object} Result\n *        {Array}: keys,\n *        {module:zrender/core/util/HashMap} buckets: {key -> Array}\n */\n\n\nfunction groupData(array, getKey) {\n  var buckets = zrUtil.createHashMap();\n  var keys = [];\n  zrUtil.each(array, function (item) {\n    var key = getKey(item);\n    (buckets.get(key) || (keys.push(key), buckets.set(key, []))).push(item);\n  });\n  return {\n    keys: keys,\n    buckets: buckets\n  };\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isNameSpecified = isNameSpecified;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;\nexports.getTooltipRenderMode = getTooltipRenderMode;\nexports.groupData = groupData;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\n/**\n * @abstract\n * @param {*} tick\n * @return {string} label of the tick.\n */\n\nScale.prototype.getLabel = null;\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar seriesModelMixin = {\n  /**\n   * @private\n   * @type {string}\n   */\n  _baseAxisDim: null,\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // When both types of xAxis and yAxis are 'value', layout is\n    // needed to be specified by user. Otherwise, layout can be\n    // judged by which axis is category.\n    var ordinalMeta;\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var addOrdinal; // FIXME\n    // 考虑时间轴\n\n    if (xAxisType === 'category') {\n      option.layout = 'horizontal';\n      ordinalMeta = xAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else if (yAxisType === 'category') {\n      option.layout = 'vertical';\n      ordinalMeta = yAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else {\n      option.layout = option.layout || 'horizontal';\n    }\n\n    var coordDims = ['x', 'y'];\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n    var axisModels = [xAxisModel, yAxisModel];\n    var baseAxisType = axisModels[baseAxisDimIndex].get('type');\n    var otherAxisType = axisModels[1 - baseAxisDimIndex].get('type');\n    var data = option.data; // ??? FIXME make a stage to perform data transfrom.\n    // MUST create a new data, consider setOption({}) again.\n\n    if (data && addOrdinal) {\n      var newOptionData = [];\n      zrUtil.each(data, function (item, index) {\n        var newItem;\n\n        if (item.value && zrUtil.isArray(item.value)) {\n          newItem = item.value.slice();\n          item.value.unshift(index);\n        } else if (zrUtil.isArray(item)) {\n          newItem = item.slice();\n          item.unshift(index);\n        } else {\n          newItem = item;\n        }\n\n        newOptionData.push(newItem);\n      });\n      option.data = newOptionData;\n    }\n\n    var defaultValueDimensions = this.defaultValueDimensions;\n    return createListSimply(this, {\n      coordDimensions: [{\n        name: baseAxisDim,\n        type: getDimensionTypeByAxis(baseAxisType),\n        ordinalMeta: ordinalMeta,\n        otherDims: {\n          tooltip: false,\n          itemName: 0\n        },\n        dimsDef: ['base']\n      }, {\n        name: otherAxisDim,\n        type: getDimensionTypeByAxis(otherAxisType),\n        dimsDef: defaultValueDimensions.slice()\n      }],\n      dimensionsCount: defaultValueDimensions.length + 1\n    });\n  },\n\n  /**\n   * If horizontal, base axis is x, otherwise y.\n   * @override\n   */\n  getBaseAxis: function () {\n    var dim = this._baseAxisDim;\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n  }\n};\nexports.seriesModelMixin = seriesModelMixin;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {number} [time=500] Time in ms\n * @param {string} [easing='linear']\n * @param {number} [delay=0]\n * @param {Function} [callback]\n *\n * @example\n *  // Animate position\n *  animation\n *      .createWrap()\n *      .add(el1, {position: [10, 10]})\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\n *      .done(function () { // done })\n *      .start('cubicOut');\n */\nfunction createWrap() {\n  var storage = [];\n  var elExistsMap = {};\n  var doneCallback;\n  return {\n    /**\n     * Caution: a el can only be added once, otherwise 'done'\n     * might not be called. This method checks this (by el.id),\n     * suppresses adding and returns false when existing el found.\n     *\n     * @param {modele:zrender/Element} el\n     * @param {Object} target\n     * @param {number} [time=500]\n     * @param {number} [delay=0]\n     * @param {string} [easing='linear']\n     * @return {boolean} Whether adding succeeded.\n     *\n     * @example\n     *     add(el, target, time, delay, easing);\n     *     add(el, target, time, easing);\n     *     add(el, target, time);\n     *     add(el, target);\n     */\n    add: function (el, target, time, delay, easing) {\n      if (zrUtil.isString(delay)) {\n        easing = delay;\n        delay = 0;\n      }\n\n      if (elExistsMap[el.id]) {\n        return false;\n      }\n\n      elExistsMap[el.id] = 1;\n      storage.push({\n        el: el,\n        target: target,\n        time: time,\n        delay: delay,\n        easing: easing\n      });\n      return true;\n    },\n\n    /**\n     * Only execute when animation finished. Will not execute when any\n     * of 'stop' or 'stopAnimation' called.\n     *\n     * @param {Function} callback\n     */\n    done: function (callback) {\n      doneCallback = callback;\n      return this;\n    },\n\n    /**\n     * Will stop exist animation firstly.\n     */\n    start: function () {\n      var count = storage.length;\n\n      for (var i = 0, len = storage.length; i < len; i++) {\n        var item = storage[i];\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\n      }\n\n      return this;\n\n      function done() {\n        count--;\n\n        if (!count) {\n          storage.length = 0;\n          elExistsMap = {};\n          doneCallback && doneCallback();\n        }\n      }\n    }\n  };\n}\n\nexports.createWrap = createWrap;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _labelHelper = require(\"../helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {Object} params See taskParams in `stream/task.js`\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null,\n\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n  /**\n   * @param {string} eventType\n   * @param {Object} query\n   * @param {module:zrender/Element} targetEl\n   * @param {Object} packedEvent\n   * @return {boolen} Pass only when return `true`.\n   */\n  filterForExposedEvent: null\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  if (!option || !zrUtil.isArray(option.series)) {\n    return;\n  } // Translate 'k' to 'candlestick'.\n\n\n  zrUtil.each(option.series, function (seriesItem) {\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n      seriesItem.type = 'candlestick';\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar mapVisual = VisualMapping.mapVisual;\nvar eachVisual = VisualMapping.eachVisual;\nvar isArray = zrUtil.isArray;\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\nvar linearMap = numberUtil.linearMap;\nvar noop = zrUtil.noop;\nvar VisualMapModel = echarts.extendComponentModel({\n  type: 'visualMap',\n  dependencies: ['series'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  stateList: ['inRange', 'outOfRange'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\n\n  /**\n   * [lowerBound, upperBound]\n   *\n   * @readOnly\n   * @type {Array.<number>}\n   */\n  dataBound: [-Infinity, Infinity],\n\n  /**\n   * @readOnly\n   * @type {string|Object}\n   */\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    zlevel: 0,\n    z: 4,\n    seriesIndex: 'all',\n    // 'all' or null/undefined: all series.\n    // A number or an array of number: the specified series.\n    // set min: 0, max: 200, only for campatible with ec2.\n    // In fact min max should not have default value.\n    min: 0,\n    // min value, must specified if pieces is not specified.\n    max: 200,\n    // max value, must specified if pieces is not specified.\n    dimension: null,\n    inRange: null,\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    outOfRange: null,\n    // 'color', 'colorHue', 'colorSaturation',\n    // 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    left: 0,\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n    right: null,\n    // The same as left.\n    top: null,\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n    bottom: 0,\n    // The same as top.\n    itemWidth: null,\n    itemHeight: null,\n    inverse: false,\n    orient: 'vertical',\n    // 'horizontal' ¦ 'vertical'\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    // 值域边框颜色\n    contentColor: '#5793f3',\n    inactiveColor: '#aaa',\n    borderWidth: 0,\n    // 值域边框线宽，单位px，默认为0（无边框）\n    padding: 5,\n    // 值域内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    textGap: 10,\n    //\n    precision: 0,\n    // 小数精度，默认为0，无小数点\n    color: null,\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n    formatter: null,\n    text: null,\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n    textStyle: {\n      color: '#333' // 值域文字颜色\n\n    }\n  },\n\n  /**\n   * @protected\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this._dataExtent;\n    /**\n     * @readOnly\n     */\n\n    this.targetVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.controllerVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * [width, height]\n     * @readOnly\n     * @type {Array.<number>}\n     */\n\n    this.itemSize;\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n\n  /**\n   * @protected\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option; // FIXME\n    // necessary?\n    // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\n    this.textStyleModel = this.getModel('textStyle');\n    this.resetItemSize();\n    this.completeVisualOption();\n  },\n\n  /**\n   * @protected\n   */\n  resetVisual: function (supplementVisualOption) {\n    var stateList = this.stateList;\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\n  },\n\n  /**\n   * @protected\n   * @return {Array.<number>} An array of series indices.\n   */\n  getTargetSeriesIndices: function () {\n    var optionSeriesIndex = this.option.seriesIndex;\n    var seriesIndices = [];\n\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\n      this.ecModel.eachSeries(function (seriesModel, index) {\n        seriesIndices.push(index);\n      });\n    } else {\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\n    }\n\n    return seriesIndices;\n  },\n\n  /**\n   * @public\n   */\n  eachTargetSeries: function (callback, context) {\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n    }, this);\n  },\n\n  /**\n   * @pubilc\n   */\n  isTargetSeries: function (seriesModel) {\n    var is = false;\n    this.eachTargetSeries(function (model) {\n      model === seriesModel && (is = true);\n    });\n    return is;\n  },\n\n  /**\n   * @example\n   * this.formatValueText(someVal); // format single numeric value to text.\n   * this.formatValueText(someVal, true); // format single category value to text.\n   * this.formatValueText([min, max]); // format numeric min-max to text.\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n   *\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n   * @param {boolean} [isCategory=false] Only available when value is number.\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n   * @return {string}\n   * @protected\n   */\n  formatValueText: function (value, isCategory, edgeSymbols) {\n    var option = this.option;\n    var precision = option.precision;\n    var dataBound = this.dataBound;\n    var formatter = option.formatter;\n    var isMinMax;\n    var textValue;\n    edgeSymbols = edgeSymbols || ['<', '>'];\n\n    if (zrUtil.isArray(value)) {\n      value = value.slice();\n      isMinMax = true;\n    }\n\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\n\n    if (zrUtil.isString(formatter)) {\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\n    } else if (zrUtil.isFunction(formatter)) {\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\n    }\n\n    if (isMinMax) {\n      if (value[0] === dataBound[0]) {\n        return edgeSymbols[0] + ' ' + textValue[1];\n      } else if (value[1] === dataBound[1]) {\n        return edgeSymbols[1] + ' ' + textValue[0];\n      } else {\n        return textValue[0] + ' - ' + textValue[1];\n      }\n    } else {\n      // Format single value (includes category case).\n      return textValue;\n    }\n\n    function toFixed(val) {\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetExtent: function () {\n    var thisOption = this.option; // Can not calculate data extent by data here.\n    // Because series and data may be modified in processing stage.\n    // So we do not support the feature \"auto min/max\".\n\n    var extent = asc([thisOption.min, thisOption.max]);\n    this._dataExtent = extent;\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/data/List} list\n   * @return {string} Concrete dimention. If return null/undefined,\n   *                  no dimension used.\n   */\n  getDataDimension: function (list) {\n    var optDim = this.option.dimension;\n    var listDimensions = list.dimensions;\n\n    if (optDim == null && !listDimensions.length) {\n      return;\n    }\n\n    if (optDim != null) {\n      return list.getDimension(optDim);\n    }\n\n    var dimNames = list.dimensions;\n\n    for (var i = dimNames.length - 1; i >= 0; i--) {\n      var dimName = dimNames[i];\n      var dimInfo = list.getDimensionInfo(dimName);\n\n      if (!dimInfo.isCalculationCoord) {\n        return dimName;\n      }\n    }\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getExtent: function () {\n    return this._dataExtent.slice();\n  },\n\n  /**\n   * @protected\n   */\n  completeVisualOption: function () {\n    var ecModel = this.ecModel;\n    var thisOption = this.option;\n    var base = {\n      inRange: thisOption.inRange,\n      outOfRange: thisOption.outOfRange\n    };\n    var target = thisOption.target || (thisOption.target = {});\n    var controller = thisOption.controller || (thisOption.controller = {});\n    zrUtil.merge(target, base); // Do not override\n\n    zrUtil.merge(controller, base); // Do not override\n\n    var isCategory = this.isCategory();\n    completeSingle.call(this, target);\n    completeSingle.call(this, controller);\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\n\n    completeController.call(this, controller);\n\n    function completeSingle(base) {\n      // Compatible with ec2 dataRange.color.\n      // The mapping order of dataRange.color is: [high value, ..., low value]\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n      // Notice: ec2 has no inverse.\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\n      // So adding color only when no inRange defined.\n      && !base.inRange) {\n        base.inRange = {\n          color: thisOption.color.slice().reverse()\n        };\n      } // Compatible with previous logic, always give a defautl color, otherwise\n      // simple config with no inRange and outOfRange will not work.\n      // Originally we use visualMap.color as the default color, but setOption at\n      // the second time the default color will be erased. So we change to use\n      // constant DEFAULT_COLOR.\n      // If user do not want the defualt color, set inRange: {color: null}.\n\n\n      base.inRange = base.inRange || {\n        color: ecModel.get('gradientColor')\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\n\n      each(this.stateList, function (state) {\n        var visualType = base[state];\n\n        if (zrUtil.isString(visualType)) {\n          var defa = visualDefault.get(visualType, 'active', isCategory);\n\n          if (defa) {\n            base[state] = {};\n            base[state][visualType] = defa;\n          } else {\n            // Mark as not specified.\n            delete base[state];\n          }\n        }\n      }, this);\n    }\n\n    function completeInactive(base, stateExist, stateAbsent) {\n      var optExist = base[stateExist];\n      var optAbsent = base[stateAbsent];\n\n      if (optExist && !optAbsent) {\n        optAbsent = base[stateAbsent] = {};\n        each(optExist, function (visualData, visualType) {\n          if (!VisualMapping.isValidType(visualType)) {\n            return;\n          }\n\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n          if (defa != null) {\n            optAbsent[visualType] = defa; // Compatibable with ec2:\n            // Only inactive color to rgba(0,0,0,0) can not\n            // make label transparent, so use opacity also.\n\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\n              optAbsent.opacity = [0, 0];\n            }\n          }\n        });\n      }\n    }\n\n    function completeController(controller) {\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\n      var inactiveColor = this.get('inactiveColor');\n      each(this.stateList, function (state) {\n        var itemSize = this.itemSize;\n        var visuals = controller[state]; // Set inactive color for controller if no other color\n        // attr (like colorAlpha) specified.\n\n        if (!visuals) {\n          visuals = controller[state] = {\n            color: isCategory ? inactiveColor : [inactiveColor]\n          };\n        } // Consistent symbol and symbolSize if not specified.\n\n\n        if (visuals.symbol == null) {\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\n        }\n\n        if (visuals.symbolSize == null) {\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n        } // Filter square and none.\n\n\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\n        }); // Normalize symbolSize\n\n        var symbolSize = visuals.symbolSize;\n\n        if (symbolSize != null) {\n          var max = -Infinity; // symbolSize can be object when categories defined.\n\n          eachVisual(symbolSize, function (value) {\n            value > max && (max = value);\n          });\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetItemSize: function () {\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\n  },\n\n  /**\n   * @public\n   */\n  isCategory: function () {\n    return !!this.option.categories;\n  },\n\n  /**\n   * @public\n   * @abstract\n   */\n  setSelected: noop,\n\n  /**\n   * @public\n   * @abstract\n   * @param {*|module:echarts/data/List} valueOrData\n   * @param {number} dataIndex\n   * @return {string} state See this.stateList\n   */\n  getValueState: noop,\n\n  /**\n   * FIXME\n   * Do not publish to thirt-part-dev temporarily\n   * util the interface is stable. (Should it return\n   * a function but not visual meta?)\n   *\n   * @pubilc\n   * @abstract\n   * @param {Function} getColorVisual\n   *        params: value, valueState\n   *        return: color\n   * @return {Object} visualMeta\n   *        should includes {stops, outerColors}\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n   */\n  getVisualMeta: noop\n});\nvar _default = VisualMapModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var axis = this['get' + dim + 'Axis']();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var method = 'dataTo' + dim;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: zrUtil.bind(function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      }),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\n   *         If not on zero of other axis, return null/undefined.\n   *         If no axes, return an empty array.\n   */\n  getAxesOnZeroOf: null,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isString = _util.isString;\nvar isArray = _util.isArray;\nvar each = _util.each;\nvar assert = _util.assert;\n\nvar _parseSVG = require(\"zrender/lib/tool/parseSVG\");\n\nvar parseXML = _parseSVG.parseXML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar storage = createHashMap(); // For minimize the code size of common echarts package,\n// do not put too much logic in this module.\n\nvar _default = {\n  // The format of record: see `echarts.registerMap`.\n  // Compatible with previous `echarts.registerMap`.\n  registerMap: function (mapName, rawGeoJson, rawSpecialAreas) {\n    var records;\n\n    if (isArray(rawGeoJson)) {\n      records = rawGeoJson;\n    } else if (rawGeoJson.svg) {\n      records = [{\n        type: 'svg',\n        source: rawGeoJson.svg,\n        specialAreas: rawGeoJson.specialAreas\n      }];\n    } else {\n      // Backward compatibility.\n      if (rawGeoJson.geoJson && !rawGeoJson.features) {\n        rawSpecialAreas = rawGeoJson.specialAreas;\n        rawGeoJson = rawGeoJson.geoJson;\n      }\n\n      records = [{\n        type: 'geoJSON',\n        source: rawGeoJson,\n        specialAreas: rawSpecialAreas\n      }];\n    }\n\n    each(records, function (record) {\n      var type = record.type;\n      type === 'geoJson' && (type = record.type = 'geoJSON');\n      var parse = parsers[type];\n      parse(record);\n    });\n    return storage.set(mapName, records);\n  },\n  retrieveMap: function (mapName) {\n    return storage.get(mapName);\n  }\n};\nvar parsers = {\n  geoJSON: function (record) {\n    var source = record.source;\n    record.geoJSON = !isString(source) ? source : typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(source) : new Function('return (' + source + ');')();\n  },\n  // Only perform parse to XML object here, which might be time\n  // consiming for large SVG.\n  // Although convert XML to zrender element is also time consiming,\n  // if we do it here, the clone of zrender elements has to be\n  // required. So we do it once for each geo instance, util real\n  // performance issues call for optimizing it.\n  svg: function (record) {\n    record.svgXML = parseXML(record.source);\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\n\nfunction _default(ecModel) {\n  var groupResult = groupSeriesByAxis(ecModel);\n  each(groupResult, function (groupItem) {\n    var seriesModels = groupItem.seriesModels;\n\n    if (!seriesModels.length) {\n      return;\n    }\n\n    calculateBase(groupItem);\n    each(seriesModels, function (seriesModel, idx) {\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\n    });\n  });\n}\n/**\n * Group series by axis.\n */\n\n\nfunction groupSeriesByAxis(ecModel) {\n  var result = [];\n  var axisList = [];\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\n    var baseAxis = seriesModel.getBaseAxis();\n    var idx = zrUtil.indexOf(axisList, baseAxis);\n\n    if (idx < 0) {\n      idx = axisList.length;\n      axisList[idx] = baseAxis;\n      result[idx] = {\n        axis: baseAxis,\n        seriesModels: []\n      };\n    }\n\n    result[idx].seriesModels.push(seriesModel);\n  });\n  return result;\n}\n/**\n * Calculate offset and box width for each series.\n */\n\n\nfunction calculateBase(groupItem) {\n  var extent;\n  var baseAxis = groupItem.axis;\n  var seriesModels = groupItem.seriesModels;\n  var seriesCount = seriesModels.length;\n  var boxWidthList = groupItem.boxWidthList = [];\n  var boxOffsetList = groupItem.boxOffsetList = [];\n  var boundList = [];\n  var bandWidth;\n\n  if (baseAxis.type === 'category') {\n    bandWidth = baseAxis.getBandWidth();\n  } else {\n    var maxDataCount = 0;\n    each(seriesModels, function (seriesModel) {\n      maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\n    });\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount;\n  }\n\n  each(seriesModels, function (seriesModel) {\n    var boxWidthBound = seriesModel.get('boxWidth');\n\n    if (!zrUtil.isArray(boxWidthBound)) {\n      boxWidthBound = [boxWidthBound, boxWidthBound];\n    }\n\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\n  });\n  var availableWidth = bandWidth * 0.8 - 2;\n  var boxGap = availableWidth / seriesCount * 0.3;\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\n  var base = boxWidth / 2 - availableWidth / 2;\n  each(seriesModels, function (seriesModel, idx) {\n    boxOffsetList.push(base);\n    base += boxGap + boxWidth;\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\n  });\n}\n/**\n * Calculate points location for each series.\n */\n\n\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\n  var coordSys = seriesModel.coordinateSystem;\n  var data = seriesModel.getData();\n  var halfWidth = boxWidth / 2;\n  var cDimIdx = seriesModel.get('layout') === 'horizontal' ? 0 : 1;\n  var vDimIdx = 1 - cDimIdx;\n  var coordDims = ['x', 'y'];\n  var cDim = data.mapDimension(coordDims[cDimIdx]);\n  var vDims = data.mapDimension(coordDims[vDimIdx], true);\n\n  if (cDim == null || vDims.length < 5) {\n    return;\n  }\n\n  for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n    var axisDimVal = data.get(cDim, dataIndex);\n    var median = getPoint(axisDimVal, vDims[2], dataIndex);\n    var end1 = getPoint(axisDimVal, vDims[0], dataIndex);\n    var end2 = getPoint(axisDimVal, vDims[1], dataIndex);\n    var end4 = getPoint(axisDimVal, vDims[3], dataIndex);\n    var end5 = getPoint(axisDimVal, vDims[4], dataIndex);\n    var ends = [];\n    addBodyEnd(ends, end2, 0);\n    addBodyEnd(ends, end4, 1);\n    ends.push(end1, end2, end5, end4);\n    layEndLine(ends, end1);\n    layEndLine(ends, end5);\n    layEndLine(ends, median);\n    data.setItemLayout(dataIndex, {\n      initBaseline: median[vDimIdx],\n      ends: ends\n    });\n  }\n\n  function getPoint(axisDimVal, dimIdx, dataIndex) {\n    var val = data.get(dimIdx, dataIndex);\n    var p = [];\n    p[cDimIdx] = axisDimVal;\n    p[vDimIdx] = val;\n    var point;\n\n    if (isNaN(axisDimVal) || isNaN(val)) {\n      point = [NaN, NaN];\n    } else {\n      point = coordSys.dataToPoint(p);\n      point[cDimIdx] += offset;\n    }\n\n    return point;\n  }\n\n  function addBodyEnd(ends, point, start) {\n    var point1 = point.slice();\n    var point2 = point.slice();\n    point1[cDimIdx] += halfWidth;\n    point2[cDimIdx] -= halfWidth;\n    start ? ends.push(point1, point2) : ends.push(point2, point1);\n  }\n\n  function layEndLine(ends, endCenter) {\n    var from = endCenter.slice();\n    var to = endCenter.slice();\n    from[cDimIdx] -= halfWidth;\n    to[cDimIdx] += halfWidth;\n    ends.push(from, to);\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import Text from 'zrender/src/graphic/Text';\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\nvar replaceReg = /([&<>\"'])/g;\nvar replaceMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;'\n};\n\nfunction encodeHTML(source) {\n  return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {\n    return replaceMap[c];\n  });\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @param {string} [opt.renderMode='html'] render mode of tooltip, 'html' or 'richText'\n * @param {string} [opt.markerId='X'] id name for marker. If only one marker is in a rich text, this can be omitted.\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n  var renderMode = opt.renderMode || 'html';\n  var markerId = opt.markerId || 'X';\n\n  if (!color) {\n    return '';\n  }\n\n  if (renderMode === 'html') {\n    return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n  } else {\n    // Space for rich element marker\n    return {\n      renderMode: renderMode,\n      content: '{marker' + markerId + '|}  ',\n      style: {\n        color: color\n      }\n    };\n  }\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\n/**\n * @public\n * @param {Object} opt\n * @param {string} opt.text\n * @param {string} opt.font\n * @param {string} [opt.textAlign='left']\n * @param {string} [opt.textVerticalAlign='top']\n * @param {Array.<number>} [opt.textPadding]\n * @param {number} [opt.textLineHeight]\n * @param {Object} [opt.rich]\n * @param {Object} [opt.truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\nfunction getTextBoundingRect(opt) {\n  return textContain.getBoundingRect(opt.text, opt.font, opt.textAlign, opt.textVerticalAlign, opt.textPadding, opt.textLineHeight, opt.rich, opt.truncate);\n}\n/**\n * @deprecated\n * the `textLineHeight` was added later.\n * For backward compatiblility, put it as the last parameter.\n * But deprecated this interface. Please use `getTextBoundingRect` instead.\n */\n\n\nfunction getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate, textLineHeight) {\n  return textContain.getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, textLineHeight, rich, truncate);\n}\n\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextBoundingRect = getTextBoundingRect;\nexports.getTextRect = getTextRect;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar List = require(\"../../data/List\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {},\n    label: {\n      color: '#000'\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function (currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function () {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function () {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function (state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function () {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function () {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function () {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isString = _util.isString;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  });\n\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\n    // Compatible with previous design, value axis (time axis) only stack by index.\n    // It may make sense if the user provides elaborately constructed data.\n    byIndex = true;\n  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n\n  if (stackedDimInfo) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n */\n\n\nfunction isDimensionStacked(data, stackedDim\n/*, stackedByDim*/\n) {\n  // Each single series only maps to one pair of axis. So we do not need to\n  // check stackByDim, whatever stacked by a dimension or stacked by index.\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (\n  //     stackedByDim != null\n  //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')\n  //         : data.getCalculationInfo('isStackedByIndex')\n  // );\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} targetDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n * @return {string} dimension\n */\n\n\nfunction getStackedDimension(data, targetDim) {\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\nexports.getStackedDimension = getStackedDimension;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar MONTH_TEXT = {\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n};\nvar WEEK_TEXT = {\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  CN: ['日', '一', '二', '三', '四', '五', '六']\n};\n\nvar _default = echarts.extendComponentView({\n  type: 'calendar',\n\n  /**\n   * top/left line points\n   *  @private\n   */\n  _tlpoints: null,\n\n  /**\n   * bottom/right line points\n   *  @private\n   */\n  _blpoints: null,\n\n  /**\n   * first day of month\n   *  @private\n   */\n  _firstDayOfMonth: null,\n\n  /**\n   * first day point of month\n   *  @private\n   */\n  _firstDayPoints: null,\n  render: function (calendarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var coordSys = calendarModel.coordinateSystem; // range info\n\n    var rangeData = coordSys.getRangeInfo();\n    var orient = coordSys.getOrient();\n\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\n\n\n    this._renderLines(calendarModel, rangeData, orient, group);\n\n    this._renderYearText(calendarModel, rangeData, orient, group);\n\n    this._renderMonthText(calendarModel, orient, group);\n\n    this._renderWeekText(calendarModel, rangeData, orient, group);\n  },\n  // render day rect\n  _renderDayRect: function (calendarModel, rangeData, group) {\n    var coordSys = calendarModel.coordinateSystem;\n    var itemRectStyleModel = calendarModel.getModel('itemStyle').getItemStyle();\n    var sw = coordSys.getCellWidth();\n    var sh = coordSys.getCellHeight();\n\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\n      var point = coordSys.dataToRect([i], false).tl; // every rect\n\n      var rect = new graphic.Rect({\n        shape: {\n          x: point[0],\n          y: point[1],\n          width: sw,\n          height: sh\n        },\n        cursor: 'default',\n        style: itemRectStyleModel\n      });\n      group.add(rect);\n    }\n  },\n  // render separate line\n  _renderLines: function (calendarModel, rangeData, orient, group) {\n    var self = this;\n    var coordSys = calendarModel.coordinateSystem;\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\n    var show = calendarModel.get('splitLine.show');\n    var lineWidth = lineStyleModel.lineWidth;\n    this._tlpoints = [];\n    this._blpoints = [];\n    this._firstDayOfMonth = [];\n    this._firstDayPoints = [];\n    var firstDay = rangeData.start;\n\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\n      addPoints(firstDay.formatedDate);\n\n      if (i === 0) {\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\n      }\n\n      var date = firstDay.date;\n      date.setMonth(date.getMonth() + 1);\n      firstDay = coordSys.getDateInfo(date);\n    }\n\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\n\n    function addPoints(date) {\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\n\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\n\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\n\n      self._tlpoints.push(points[0]);\n\n      self._blpoints.push(points[points.length - 1]);\n\n      show && self._drawSplitline(points, lineStyleModel, group);\n    } // render top/left line\n\n\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\n\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\n  },\n  // get points at both ends\n  _getEdgesPoints: function (points, lineWidth, orient) {\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\n\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\n    return rs;\n  },\n  // render split line\n  _drawSplitline: function (points, lineStyleModel, group) {\n    var poyline = new graphic.Polyline({\n      z2: 20,\n      shape: {\n        points: points\n      },\n      style: lineStyleModel\n    });\n    group.add(poyline);\n  },\n  // render month line of one week points\n  _getLinePointsOfOneWeek: function (calendarModel, date, orient) {\n    var coordSys = calendarModel.coordinateSystem;\n    date = coordSys.getDateInfo(date);\n    var points = [];\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(date.time, i);\n      var point = coordSys.dataToRect([tmpD.time], false);\n      points[2 * tmpD.day] = point.tl;\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\n    }\n\n    return points;\n  },\n  _formatterLabel: function (formatter, params) {\n    if (typeof formatter === 'string' && formatter) {\n      return formatUtil.formatTplSimple(formatter, params);\n    }\n\n    if (typeof formatter === 'function') {\n      return formatter(params);\n    }\n\n    return params.nameMap;\n  },\n  _yearTextPositionControl: function (textEl, point, orient, position, margin) {\n    point = point.slice();\n    var aligns = ['center', 'bottom'];\n\n    if (position === 'bottom') {\n      point[1] += margin;\n      aligns = ['center', 'top'];\n    } else if (position === 'left') {\n      point[0] -= margin;\n    } else if (position === 'right') {\n      point[0] += margin;\n      aligns = ['center', 'top'];\n    } else {\n      // top\n      point[1] -= margin;\n    }\n\n    var rotate = 0;\n\n    if (position === 'left' || position === 'right') {\n      rotate = Math.PI / 2;\n    }\n\n    return {\n      rotation: rotate,\n      position: point,\n      style: {\n        textAlign: aligns[0],\n        textVerticalAlign: aligns[1]\n      }\n    };\n  },\n  // render year\n  _renderYearText: function (calendarModel, rangeData, orient, group) {\n    var yearLabel = calendarModel.getModel('yearLabel');\n\n    if (!yearLabel.get('show')) {\n      return;\n    }\n\n    var margin = yearLabel.get('margin');\n    var pos = yearLabel.get('position');\n\n    if (!pos) {\n      pos = orient !== 'horizontal' ? 'top' : 'left';\n    }\n\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\n    var xc = (points[0][0] + points[1][0]) / 2;\n    var yc = (points[0][1] + points[1][1]) / 2;\n    var idx = orient === 'horizontal' ? 0 : 1;\n    var posPoints = {\n      top: [xc, points[idx][1]],\n      bottom: [xc, points[1 - idx][1]],\n      left: [points[1 - idx][0], yc],\n      right: [points[idx][0], yc]\n    };\n    var name = rangeData.start.y;\n\n    if (+rangeData.end.y > +rangeData.start.y) {\n      name = name + '-' + rangeData.end.y;\n    }\n\n    var formatter = yearLabel.get('formatter');\n    var params = {\n      start: rangeData.start.y,\n      end: rangeData.end.y,\n      nameMap: name\n    };\n\n    var content = this._formatterLabel(formatter, params);\n\n    var yearText = new graphic.Text({\n      z2: 30\n    });\n    graphic.setTextStyle(yearText.style, yearLabel, {\n      text: content\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\n    group.add(yearText);\n  },\n  _monthTextPositionControl: function (point, isCenter, orient, position, margin) {\n    var align = 'left';\n    var vAlign = 'top';\n    var x = point[0];\n    var y = point[1];\n\n    if (orient === 'horizontal') {\n      y = y + margin;\n\n      if (isCenter) {\n        align = 'center';\n      }\n\n      if (position === 'start') {\n        vAlign = 'bottom';\n      }\n    } else {\n      x = x + margin;\n\n      if (isCenter) {\n        vAlign = 'middle';\n      }\n\n      if (position === 'start') {\n        align = 'right';\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render month and year text\n  _renderMonthText: function (calendarModel, orient, group) {\n    var monthLabel = calendarModel.getModel('monthLabel');\n\n    if (!monthLabel.get('show')) {\n      return;\n    }\n\n    var nameMap = monthLabel.get('nameMap');\n    var margin = monthLabel.get('margin');\n    var pos = monthLabel.get('position');\n    var align = monthLabel.get('align');\n    var termPoints = [this._tlpoints, this._blpoints];\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var idx = pos === 'start' ? 0 : 1;\n    var axis = orient === 'horizontal' ? 0 : 1;\n    margin = pos === 'start' ? -margin : margin;\n    var isCenter = align === 'center';\n\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\n      var tmp = termPoints[idx][i].slice();\n      var firstDay = this._firstDayOfMonth[i];\n\n      if (isCenter) {\n        var firstDayPoints = this._firstDayPoints[i];\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\n      }\n\n      var formatter = monthLabel.get('formatter');\n      var name = nameMap[+firstDay.m - 1];\n      var params = {\n        yyyy: firstDay.y,\n        yy: (firstDay.y + '').slice(2),\n        MM: firstDay.m,\n        M: +firstDay.m,\n        nameMap: name\n      };\n\n      var content = this._formatterLabel(formatter, params);\n\n      var monthText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\n        text: content\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\n      group.add(monthText);\n    }\n  },\n  _weekTextPositionControl: function (point, orient, position, margin, cellSize) {\n    var align = 'center';\n    var vAlign = 'middle';\n    var x = point[0];\n    var y = point[1];\n    var isStart = position === 'start';\n\n    if (orient === 'horizontal') {\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\n      align = isStart ? 'right' : 'left';\n    } else {\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\n      vAlign = isStart ? 'bottom' : 'top';\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render weeks\n  _renderWeekText: function (calendarModel, rangeData, orient, group) {\n    var dayLabel = calendarModel.getModel('dayLabel');\n\n    if (!dayLabel.get('show')) {\n      return;\n    }\n\n    var coordSys = calendarModel.coordinateSystem;\n    var pos = dayLabel.get('position');\n    var nameMap = dayLabel.get('nameMap');\n    var margin = dayLabel.get('margin');\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\n\n    if (pos === 'start') {\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\n      margin = -margin;\n    }\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(start, i);\n      var point = coordSys.dataToRect([tmpD.time], false).center;\n      var day = i;\n      day = Math.abs((i + firstDayOfWeek) % 7);\n      var weekText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\n        text: nameMap[day]\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\n      group.add(weekText);\n    }\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./timeline/preprocessor\");\n\nrequire(\"./timeline/typeDefaulter\");\n\nrequire(\"./timeline/timelineAction\");\n\nrequire(\"./timeline/SliderTimelineModel\");\n\nrequire(\"./timeline/SliderTimelineView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nvar opacityQuery = 'lineStyle.opacity'.split('.');\nvar _default = {\n  seriesType: 'lines',\n  reset: function (seriesModel, ecModel, api) {\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var data = seriesModel.getData();\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Geo = require(\"./Geo\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar geoSourceManager = require(\"./geoSourceManager\");\n\nvar mapDataStorage = require(\"./mapDataStorage\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspect = rect.width / rect.height * this.aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function (ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var aspectScale = geoModel.get('aspectScale');\n      var invertLongitute = true;\n      var mapRecords = mapDataStorage.retrieveMap(name);\n\n      if (mapRecords && mapRecords[0] && mapRecords[0].type === 'svg') {\n        aspectScale == null && (aspectScale = 1);\n        invertLongitute = false;\n      } else {\n        aspectScale == null && (aspectScale = 0.75);\n      }\n\n      var geo = new Geo(name + idx, name, geoModel.get('nameMap'), invertLongitute);\n      geo.aspectScale = aspectScale;\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.aspectScale = mapSeries[0].get('aspectScale');\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function (originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    var dataNameMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    var source = geoSourceManager.load(mapName, nameMap);\n    zrUtil.each(source.regions, function (region) {\n      var name = region.name;\n      !dataNameMap.get(name) && regionsArr.push({\n        name: name\n      });\n    });\n    return regionsArr;\n  }\n};\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embeded for some of the code in this file:\n* Some formulas were originally copied from \"d3.js\" with some\n* modifications made for this project.\n* (See more details in the comment of the method \"step\" below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]);\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function () {\n      friction = 0.5;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n\n    /**\n     * Some formulas were originally copied from \"d3.js\"\n     * https://github.com/d3/d3/blob/b516d77fb8566b576088e73410437494717ada26/src/layout/force.js\n     * with some modifications made for this project.\n     * See the license statement at the head of this file.\n     */\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./tree/TreeSeries\");\n\nrequire(\"./tree/TreeView\");\n\nrequire(\"./tree/treeAction\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar treeLayout = require(\"./tree/treeLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(visualSymbol('tree', 'circle'));\necharts.registerLayout(treeLayout);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, forSymbol, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y; // Avoid float number rounding error for symbol on the edge of axis extent.\n  // See #7913 and `test/dataZoom-clip.html`.\n\n  if (forSymbol) {\n    x -= 0.5;\n    width += 0.5;\n    y -= 0.5;\n    height += 0.5;\n  } else {\n    var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n    var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n    if (isHorizontal) {\n      y -= expandSize;\n      height += expandSize * 2;\n    } else {\n      x -= expandSize;\n      width += expandSize * 2;\n    }\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, forSymbol, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent().slice();\n  radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180; // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  if (forSymbol) {\n    radiusExtent[0] -= 0.5;\n    radiusExtent[1] += 0.5;\n  }\n\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: round(radiusExtent[0], 1),\n      r: round(radiusExtent[1], 1),\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, forSymbol, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, forSymbol, seriesModel) : createGridClipShape(coordSys, hasAnimation, forSymbol, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, false, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function () {\n    this._splitAreaColors = null;\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitAreaModel,\n      clamp: true\n    });\n\n    if (!ticksCoords.length) {\n      return;\n    } // For Making appropriate splitArea animation, the color and anid\n    // should be corresponding to previous one if possible.\n\n\n    var areaColorsLen = areaColors.length;\n    var lastSplitAreaColors = this._splitAreaColors;\n    var newSplitAreaColors = zrUtil.createHashMap();\n    var colorIndex = 0;\n\n    if (lastSplitAreaColors) {\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n        if (cIndex != null) {\n          colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n          break;\n        }\n      }\n    }\n\n    var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prev;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n        prev = x + width;\n      } else {\n        x = gridRect.x;\n        y = prev;\n        width = gridRect.width;\n        height = tickCoord - y;\n        prev = y + height;\n      }\n\n      var tickValue = ticksCoords[i - 1].tickValue;\n      tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: tickValue != null ? 'area_' + tickValue : null,\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      colorIndex = (colorIndex + 1) % areaColorsLen;\n    }\n\n    this._splitAreaColors = newSplitAreaColors;\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string|Region} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  },\n  cloneShallow: function (name) {\n    name == null && (name = this.name);\n    var newRegion = new Region(name, this.geometries, this.center);\n    newRegion._rect = this._rect;\n    newRegion.transformTo = null; // Simply avoid to be called.\n\n    return newRegion;\n  }\n};\nvar _default = Region;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar throttleUtil = require(\"../util/throttle\");\n\nvar parallelPreprocessor = require(\"../coord/parallel/parallelPreprocessor\");\n\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"../coord/parallel/ParallelModel\");\n\nrequire(\"./parallelAxis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CLICK_THRESHOLD = 5; // > 4\n// Parallel view\n\necharts.extendComponentView({\n  type: 'parallel',\n  render: function (parallelModel, ecModel, api) {\n    this._model = parallelModel;\n    this._api = api;\n\n    if (!this._handlers) {\n      this._handlers = {};\n      zrUtil.each(handlers, function (handler, eventName) {\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\n      }, this);\n    }\n\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._handlers, function (handler, eventName) {\n      api.getZr().off(eventName, handler);\n    });\n    this._handlers = null;\n  },\n\n  /**\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\n   */\n  _throttledDispatchExpand: function (opt) {\n    this._dispatchExpand(opt);\n  },\n  _dispatchExpand: function (opt) {\n    opt && this._api.dispatchAction(zrUtil.extend({\n      type: 'parallelAxisExpand'\n    }, opt));\n  }\n});\nvar handlers = {\n  mousedown: function (e) {\n    if (checkTrigger(this, 'click')) {\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\n    }\n  },\n  mouseup: function (e) {\n    var mouseDownPoint = this._mouseDownPoint;\n\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\n      var point = [e.offsetX, e.offsetY];\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\n\n      if (dist > CLICK_THRESHOLD) {\n        return;\n      }\n\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n\n      result.behavior !== 'none' && this._dispatchExpand({\n        axisExpandWindow: result.axisExpandWindow\n      });\n    }\n\n    this._mouseDownPoint = null;\n  },\n  mousemove: function (e) {\n    // Should do nothing when brushing.\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\n      return;\n    }\n\n    var model = this._model;\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n    var behavior = result.behavior;\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\n\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\n    : {\n      axisExpandWindow: result.axisExpandWindow,\n      // Jumping uses animation, and sliding suppresses animation.\n      animation: behavior === 'jump' ? null : false\n    });\n  }\n};\n\nfunction checkTrigger(view, triggerOn) {\n  var model = view._model;\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\n}\n\necharts.registerPreprocessor(parallelPreprocessor);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  areas: [],\n\n  /**\n   * Current activated brush type.\n   * If null, brush is inactived.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {string}\n   */\n  brushType: null,\n\n  /**\n   * Current brush opt.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {Object}\n   */\n  brushOption: {},\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  coordInfoList: [],\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    var inBrush = thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n\n    if (!inBrush.hasOwnProperty('liftZ')) {\n      // Bigger than the highlight z lift, otherwise it will\n      // be effected by the highlight z when brush.\n      inBrush.liftZ = 5;\n    }\n  },\n\n  /**\n   * If ranges is null/undefined, range state remain.\n   *\n   * @param {Array.<Object>} [ranges]\n   */\n  setAreas: function (areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\n   * see module:echarts/component/helper/BrushController\n   * @param {Object} brushOption\n   */\n  setBrushOption: function (brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar isArray = _util.isArray;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n * @param {number} [performArgs.modBy] Sampling window size.\n * @param {number} [performArgs.modDataCount] Sampling count.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\n  // elements uniformed distributed when progress, especially when moving or zooming.\n\n\n  var lastModBy = normalizeModBy(this._modBy);\n  var lastModDataCount = this._modDataCount || 0;\n  var modBy = normalizeModBy(performArgs && performArgs.modBy);\n  var modDataCount = performArgs && performArgs.modDataCount || 0;\n\n  if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\n    planResult = 'reset';\n  }\n\n  function normalizeModBy(val) {\n    !(val >= 1) && (val = 1); // jshint ignore:line\n\n    return val;\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  this._modBy = modBy;\n  this._modDataCount = modDataCount;\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n\n    if (!skip && (forceFirstProgress || start < end)) {\n      var progress = this._progress;\n\n      if (isArray(progress)) {\n        for (var i = 0; i < progress.length; i++) {\n          doProgress(this, progress[i], start, end, modBy, modDataCount);\n        }\n      } else {\n        doProgress(this, progress, start, end, modBy, modDataCount);\n      }\n    }\n\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\nvar iterator = function () {\n  var end;\n  var current;\n  var modBy;\n  var modDataCount;\n  var winCount;\n  var it = {\n    reset: function (s, e, sStep, sCount) {\n      current = s;\n      end = e;\n      modBy = sStep;\n      modDataCount = sCount;\n      winCount = Math.ceil(modDataCount / modBy);\n      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\n    }\n  };\n  return it;\n\n  function sequentialNext() {\n    return current < end ? current++ : null;\n  }\n\n  function modNext() {\n    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\n    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\n    // Use normal linear rendering mode.\n    : current;\n    current++;\n    return result;\n  }\n}();\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n\nfunction doProgress(taskIns, progress, start, end, modBy, modDataCount) {\n  iterator.reset(start, end, modBy, modDataCount);\n  taskIns._callingProgress = progress;\n\n  taskIns._callingProgress({\n    start: start,\n    end: end,\n    count: end - start,\n    next: iterator.next\n  }, taskIns.context);\n}\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    } // To simplify no progress checking, array must has item.\n\n\n    if (isArray(progress) && !progress.length) {\n      progress = null;\n    }\n  }\n\n  taskIns._progress = progress;\n  taskIns._modBy = taskIns._modDataCount = null;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/AngleAxisView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nfunction Breadcrumb(containerGroup) {\n  /**\n   * @private\n   * @type {module:zrender/container/Group}\n   */\n  this.group = new graphic.Group();\n  containerGroup.add(this.group);\n}\n\nBreadcrumb.prototype = {\n  constructor: Breadcrumb,\n  render: function (seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle'); // var emphasisStyleModel = model.getModel('emphasis.itemStyle');\n\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  },\n\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n  _prepare: function (targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = node.getModel().get('name');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderContent: function (seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get('breadcrumb.height');\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel',\n          text: text,\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        }),\n        z: 10,\n        onclick: zrUtil.curry(onSelect, itemNode)\n      });\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this.group.removeAll();\n  }\n};\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  el.eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    componentIndex: seriesModel.componentIndex,\n    seriesIndex: seriesModel.componentIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    // Distinguish with click event on treemap node.\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nvar _default = Breadcrumb;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  zrUtil.each(datas, function (data) {\n    data.each(data.mapDimension('value'), function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(datas[0].mapDimension('value'), function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\n  // the symbol element shape. We use the same clip shape here as\n  // the line clip.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./boxplot/BoxplotSeries\");\n\nrequire(\"./boxplot/BoxplotView\");\n\nvar boxplotVisual = require(\"./boxplot/boxplotVisual\");\n\nvar boxplotLayout = require(\"./boxplot/boxplotLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(boxplotVisual);\necharts.registerLayout(boxplotLayout);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar shouldShowAllLabels = _axisHelper.shouldShowAllLabels;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType,\n    componentIndex: axisModel.componentIndex\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true,\n            z2: 11\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  if (shouldShowAllLabels(axisModel.axis)) {\n    return;\n  } // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n\n\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar RadiusAxis = require(\"./RadiusAxis\");\n\nvar AngleAxis = require(\"./AngleAxis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\nvar Polar = function (name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function (dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function (scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function () {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function () {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function (axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function (dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function (point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function (coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Gradient = require(\"zrender/lib/graphic/Gradient\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(max) ? max : NaN;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(min) ? min : NaN;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    modifyOutputEnd: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            // Only support sample the first dim mapped from value axis.\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('lineHeight'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BoxplotSeries = SeriesModel.extend({\n  type: 'series.boxplot',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n  // TODO\n  // box width represents group size, so dimension should have 'size'.\n\n  /**\n   * @see <https://en.wikipedia.org/wiki/Box_plot>\n   * The meanings of 'min' and 'max' depend on user,\n   * and echarts do not need to know it.\n   * @readOnly\n   */\n  defaultValueDimensions: [{\n    name: 'min',\n    defaultTooltip: true\n  }, {\n    name: 'Q1',\n    defaultTooltip: true\n  }, {\n    name: 'median',\n    defaultTooltip: true\n  }, {\n    name: 'Q3',\n    defaultTooltip: true\n  }, {\n    name: 'max',\n    defaultTooltip: true\n  }],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    boxWidth: [7, 50],\n    // [min, max] can be percent of band width.\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2,\n        shadowBlur: 5,\n        shadowOffsetX: 2,\n        shadowOffsetY: 2,\n        shadowColor: 'rgba(0,0,0,0.4)'\n      }\n    },\n    animationEasing: 'elasticOut',\n    animationDuration: 800\n  }\n});\nzrUtil.mixin(BoxplotSeries, seriesModelMixin, true);\nvar _default = BoxplotSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar lang = require(\"../../../lang\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    /* eslint-disable */\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n    /* eslint-enable */\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype; // proto.updateLayout = function (featureModel, ecModel, api) {\n\n/* eslint-disable */\n\nproto.render =\n/* eslint-enable */\nproto.updateView = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;"],"sourceRoot":""}